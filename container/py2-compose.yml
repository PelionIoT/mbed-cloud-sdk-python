# This file is autogenerated, do not modify manually. See scripts/generate_ci_config.py for instructions.
# This docker composition will run a testrunner against py2

# Usage:
# docker-compose -f container/py2-compose.yml up --exit-code-from=sdk_test_server

version: '3'
services:
  sdk_test_server:
      build:
        context: ../
        dockerfile: py2.Dockerfile
      image: mbed_sdk_py2:latest
      environment:
        - MBED_CLOUD_SDK_API_KEY=abc123
        - CI=yes
        - TEST_RUNNER_DEFAULT_API_KEY
        - TEST_RUNNER_DEFAULT_API_HOST
      volumes:
        - ../results:/build/results
        - ../test_fixtures:/test_fixtures
      command: [sh, -c, 'source .venv/bin/activate && pytest tests/unit tests/integration']
  testrunner:
#      build:
#        # this assumes you have a checkout of the testrunner alongside the sdk
#        context: '../../mbed-cloud-sdk-testrunner'
#        args:
#          - GIT_ACCESS_TOKEN
      image: '104059736540.dkr.ecr.us-west-2.amazonaws.com/mbed/sdk-testrunner:latest'
      environment:
        - 'TEST_SERVER_URL=http://sdk_test_server:5000'
        - TEST_FIXTURES_DIR=/test_fixtures
        - TEST_RUNNER_SHUTDOWN_SERVER=yes
        - TEST_RUNNER_DEFAULT_API_KEY
        - TEST_RUNNER_DEFAULT_API_HOST
      depends_on:
        - sdk_test_server
      volumes:
        - ../results:/runner/results
        - ../test_fixtures:/runner/test_fixtures
      # sleep ensures the testrunner stays up whilst test server completes coverage shutdown
      command: [sh, -c, '(python -m trunner || true) && sleep 10000']