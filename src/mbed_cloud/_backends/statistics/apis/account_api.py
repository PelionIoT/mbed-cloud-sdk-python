# coding: utf-8

"""
    Connect Statistics API

    mbed Cloud Connect Statistics API provides statistics about other cloud services through defined counters.

    OpenAPI spec version: 3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import sys
import os
import re

# python 2 and python 3 compatibility library
from six import iteritems

from ..api_client import ApiClient


class AccountApi(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def v3_metrics_get(self, include, interval, **kwargs):
        """
        Provides account-specific statistics for other cloud services.
        This REST API is used to get account-specific statistics.
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async=True
        >>> thread = api.v3_metrics_get(include, interval, async=True)
        >>> result = thread.get()

        :param async bool
        :param str include: A comma-separated list of requested metrics and total_count (if included, the response will contain total_count to specify the total number of records available). Supported values are:  - `transactions` - `full_registrations` - `registration_updates` - `deleted_registrations` - `expired_registrations` - `bootstraps_successful` - `bootstraps_failed` - `bootstraps_pending` - `handshakes_successful` - `connect_rest_api_success` - `connect_rest_api_error` - `device_proxy_request_success` - `device_proxy_request_error` - `device_subscription_request_success` - `device_subscription_request_error` - `device_observations` - `total_count`  **Note:**  The metrics device_proxy_request_success, device_proxy_request_error, device_subscription_request_success, device_subscription_request_error and device_observations monitor only the response from the device to Mbed Cloud Connect and they do not confirm that the response is delivered to client callback urls used when you try to access device resources using [Connect API](/docs/v1.2/service-api-references/connect-api.html) endpoints.  **Example usage:**  ``` curl  -X GET \\       -H \"Authorization : Bearer <valid access Token>\"        'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170207&end=20170407&interval=1d'  {     \"object\": \"list\",     \"limit\": 20,     \"total_count\": 54,     \"after\": \"2017-07-26T00:00:00Z\",     \"has_more\": true,     \"data\": [         {             \"id\": \"015d8157c800015e306fffff005374617473000\",             \"timestamp\": \"2017-07-27T00:00:00Z\",             \"transactions\": 27366         },         {             \"id\": \"015d867e2400015e306fffff005374617473000\",             \"timestamp\": \"2017-07-28T00:00:00Z\",             \"transactions\": 27480         }     ] } ```  (required)
        :param str interval: Group the data by this interval in minutes, hours, days or weeks. Sample values: 5m, 2h, 3d, 4w. The maximum interval cannot exceed one year (365 days). The allowed ranges are 5m-525600m/1h-8760h/1d-365d/1w-53w.  (required)
        :param date start: UTC time/year/date in RFC3339 format. Fetch the data with timestamp greater than or equal to this value. Sample values: 20170207T092056990Z / 2017-02-07T09:20:56.990Z / 2017 / 20170207. The maximum time between start and end parameters cannot exceed more than one year (365 days). The parameter is not mandatory, if the period is specified. 
        :param date end: UTC time/year/date in RFC3339 format. Fetch the data with timestamp less than this value.Sample values: 20170207T092056990Z / 2017-02-07T09:20:56.990Z / 2017 / 20170207. The maximum time between start and end parameters cannot exceed more than one year ( 365 days ). The parameter is not mandatory, if the period is specified. 
        :param str period: Period. Fetch the data for the period in minutes, hours, days or weeks. Sample values: 5m, 2h, 3d, 4w. The parameter is not mandatory, if the start and end time are specified. The maximum period cannot exceed one year (365 days). The allowed ranges are 5m-525600m/1h-8760h/1d-365d/1w-53w. 
        :param int limit: The number of results to return. The default value is 50, minimum 2 and maximum 1000. 
        :param str after: The metric ID after which to start fetching. This also can be used for pagination as follows.  **Example usage:**  ``` curl  -X GET \\       -H \"Authorization : Bearer <valid access Token>\"        'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170707&end=20170829&interval=1d&limit=20' {    \"object\": \"list\",    \"limit\": 20,    \"total_count\": 54,    \"has_more\": true,    \"data\": [        {            \"id\": \"015d1a589800015e306fffff005374617473000\",            \"timestamp\": \"2017-07-07T00:00:00Z\",            \"transactions\": 26381        },        .        .        .        {            \"id\": \"015d7c316c00015e306fffff005374617473000\",            \"timestamp\": \"2017-07-26T00:00:00Z\",            \"transactions\": 25569        }    ] } ```  If the parameter “has more” is true, it indicates that the list is not complete and more values are available. You can give the last ID of the list as the value of the “after” query parameter, and you get the next page of values. You can keep doing this until “has more” is false. ``` curl -X GET \\      -H \"Authorization : Bearer <valid access Token>\"      'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170707&end=20170829&interval=1d&limit=20&after=015d7c316c00015e306fffff005374617473000'  {    \"object\": \"list\",    \"limit\": 20,    \"total_count\": 54,    \"after\": \"2017-07-26T00:00:00Z\",    \"has_more\": true,    \"data\": [        {            \"id\": \"015d8157c800015e306fffff005374617473000\",            \"timestamp\": \"2017-07-27T00:00:00Z\",            \"transactions\": 27366        },      .      .      .        {            \"id\": \"015de3309c00015e306fffff005374617473000\",            \"timestamp\": \"2017-08-15T00:00:00Z\",            \"transactions\": 24707        }    ] } ``` 
        :param str order: The order of the records to return. Available values are ASC and DESC. The default value is ASC. 
        :return: SuccessfulResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async'):
            return self.v3_metrics_get_with_http_info(include, interval, **kwargs)
        else:
            (data) = self.v3_metrics_get_with_http_info(include, interval, **kwargs)
            return data

    def v3_metrics_get_with_http_info(self, include, interval, **kwargs):
        """
        Provides account-specific statistics for other cloud services.
        This REST API is used to get account-specific statistics.
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async=True
        >>> thread = api.v3_metrics_get_with_http_info(include, interval, async=True)
        >>> result = thread.get()

        :param async bool
        :param str include: A comma-separated list of requested metrics and total_count (if included, the response will contain total_count to specify the total number of records available). Supported values are:  - `transactions` - `full_registrations` - `registration_updates` - `deleted_registrations` - `expired_registrations` - `bootstraps_successful` - `bootstraps_failed` - `bootstraps_pending` - `handshakes_successful` - `connect_rest_api_success` - `connect_rest_api_error` - `device_proxy_request_success` - `device_proxy_request_error` - `device_subscription_request_success` - `device_subscription_request_error` - `device_observations` - `total_count`  **Note:**  The metrics device_proxy_request_success, device_proxy_request_error, device_subscription_request_success, device_subscription_request_error and device_observations monitor only the response from the device to Mbed Cloud Connect and they do not confirm that the response is delivered to client callback urls used when you try to access device resources using [Connect API](/docs/v1.2/service-api-references/connect-api.html) endpoints.  **Example usage:**  ``` curl  -X GET \\       -H \"Authorization : Bearer <valid access Token>\"        'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170207&end=20170407&interval=1d'  {     \"object\": \"list\",     \"limit\": 20,     \"total_count\": 54,     \"after\": \"2017-07-26T00:00:00Z\",     \"has_more\": true,     \"data\": [         {             \"id\": \"015d8157c800015e306fffff005374617473000\",             \"timestamp\": \"2017-07-27T00:00:00Z\",             \"transactions\": 27366         },         {             \"id\": \"015d867e2400015e306fffff005374617473000\",             \"timestamp\": \"2017-07-28T00:00:00Z\",             \"transactions\": 27480         }     ] } ```  (required)
        :param str interval: Group the data by this interval in minutes, hours, days or weeks. Sample values: 5m, 2h, 3d, 4w. The maximum interval cannot exceed one year (365 days). The allowed ranges are 5m-525600m/1h-8760h/1d-365d/1w-53w.  (required)
        :param date start: UTC time/year/date in RFC3339 format. Fetch the data with timestamp greater than or equal to this value. Sample values: 20170207T092056990Z / 2017-02-07T09:20:56.990Z / 2017 / 20170207. The maximum time between start and end parameters cannot exceed more than one year (365 days). The parameter is not mandatory, if the period is specified. 
        :param date end: UTC time/year/date in RFC3339 format. Fetch the data with timestamp less than this value.Sample values: 20170207T092056990Z / 2017-02-07T09:20:56.990Z / 2017 / 20170207. The maximum time between start and end parameters cannot exceed more than one year ( 365 days ). The parameter is not mandatory, if the period is specified. 
        :param str period: Period. Fetch the data for the period in minutes, hours, days or weeks. Sample values: 5m, 2h, 3d, 4w. The parameter is not mandatory, if the start and end time are specified. The maximum period cannot exceed one year (365 days). The allowed ranges are 5m-525600m/1h-8760h/1d-365d/1w-53w. 
        :param int limit: The number of results to return. The default value is 50, minimum 2 and maximum 1000. 
        :param str after: The metric ID after which to start fetching. This also can be used for pagination as follows.  **Example usage:**  ``` curl  -X GET \\       -H \"Authorization : Bearer <valid access Token>\"        'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170707&end=20170829&interval=1d&limit=20' {    \"object\": \"list\",    \"limit\": 20,    \"total_count\": 54,    \"has_more\": true,    \"data\": [        {            \"id\": \"015d1a589800015e306fffff005374617473000\",            \"timestamp\": \"2017-07-07T00:00:00Z\",            \"transactions\": 26381        },        .        .        .        {            \"id\": \"015d7c316c00015e306fffff005374617473000\",            \"timestamp\": \"2017-07-26T00:00:00Z\",            \"transactions\": 25569        }    ] } ```  If the parameter “has more” is true, it indicates that the list is not complete and more values are available. You can give the last ID of the list as the value of the “after” query parameter, and you get the next page of values. You can keep doing this until “has more” is false. ``` curl -X GET \\      -H \"Authorization : Bearer <valid access Token>\"      'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170707&end=20170829&interval=1d&limit=20&after=015d7c316c00015e306fffff005374617473000'  {    \"object\": \"list\",    \"limit\": 20,    \"total_count\": 54,    \"after\": \"2017-07-26T00:00:00Z\",    \"has_more\": true,    \"data\": [        {            \"id\": \"015d8157c800015e306fffff005374617473000\",            \"timestamp\": \"2017-07-27T00:00:00Z\",            \"transactions\": 27366        },      .      .      .        {            \"id\": \"015de3309c00015e306fffff005374617473000\",            \"timestamp\": \"2017-08-15T00:00:00Z\",            \"transactions\": 24707        }    ] } ``` 
        :param str order: The order of the records to return. Available values are ASC and DESC. The default value is ASC. 
        :return: SuccessfulResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['include', 'interval', 'start', 'end', 'period', 'limit', 'after', 'order']
        all_params.append('async')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method v3_metrics_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'include' is set
        if ('include' not in params) or (params['include'] is None):
            raise ValueError("Missing the required parameter `include` when calling `v3_metrics_get`")
        # verify the required parameter 'interval' is set
        if ('interval' not in params) or (params['interval'] is None):
            raise ValueError("Missing the required parameter `interval` when calling `v3_metrics_get`")


        collection_formats = {}

        path_params = {}

        query_params = []
        if 'include' in params:
            query_params.append(('include', params['include']))
        if 'start' in params:
            query_params.append(('start', params['start']))
        if 'end' in params:
            query_params.append(('end', params['end']))
        if 'period' in params:
            query_params.append(('period', params['period']))
        if 'interval' in params:
            query_params.append(('interval', params['interval']))
        if 'limit' in params:
            query_params.append(('limit', params['limit']))
        if 'after' in params:
            query_params.append(('after', params['after']))
        if 'order' in params:
            query_params.append(('order', params['order']))

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept(['application/json'])

        # Authentication setting
        auth_settings = ['Bearer']

        return self.api_client.call_api('/v3/metrics', 'GET',
                                        path_params,
                                        query_params,
                                        header_params,
                                        body=body_params,
                                        post_params=form_params,
                                        files=local_var_files,
                                        response_type='SuccessfulResponse',
                                        auth_settings=auth_settings,
                                        async=params.get('async'),
                                        _return_http_data_only=params.get('_return_http_data_only'),
                                        _preload_content=params.get('_preload_content', True),
                                        _request_timeout=params.get('_request_timeout'),
                                        collection_formats=collection_formats)
