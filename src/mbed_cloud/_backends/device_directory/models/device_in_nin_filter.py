# coding: utf-8

"""
    Device Directory API

    This is the API Documentation for the Mbed Device Directory service.

    OpenAPI spec version: 3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DeviceInNinFilter(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_id': 'str',
        'auto_update': 'bool',
        'bootstrap_expiration_date': 'datetime',
        'bootstrapped_timestamp': 'datetime',
        'ca_id': 'str',
        'connector_expiration_date': 'datetime',
        'created_at': 'datetime',
        'custom_attributes': 'dict(str, str)',
        'deployed_state': 'str',
        'deployment': 'str',
        'description': 'str',
        'device_class': 'str',
        'device_execution_mode': 'int',
        'device_key': 'str',
        'endpoint_name': 'str',
        'endpoint_type': 'str',
        'enrolment_list_timestamp': 'datetime',
        'etag': 'datetime',
        'firmware_checksum': 'str',
        'host_gateway': 'str',
        'id': 'str',
        'manifest': 'str',
        'manifest_timestamp': 'datetime',
        'mechanism': 'str',
        'mechanism_url': 'str',
        'name': 'str',
        'serial_number': 'str',
        'state': 'str',
        'updated_at': 'datetime',
        'vendor_id': 'str'
    }

    attribute_map = {
        'account_id': 'account_id',
        'auto_update': 'auto_update',
        'bootstrap_expiration_date': 'bootstrap_expiration_date',
        'bootstrapped_timestamp': 'bootstrapped_timestamp',
        'ca_id': 'ca_id',
        'connector_expiration_date': 'connector_expiration_date',
        'created_at': 'created_at',
        'custom_attributes': 'custom_attributes',
        'deployed_state': 'deployed_state',
        'deployment': 'deployment',
        'description': 'description',
        'device_class': 'device_class',
        'device_execution_mode': 'device_execution_mode',
        'device_key': 'device_key',
        'endpoint_name': 'endpoint_name',
        'endpoint_type': 'endpoint_type',
        'enrolment_list_timestamp': 'enrolment_list_timestamp',
        'etag': 'etag',
        'firmware_checksum': 'firmware_checksum',
        'host_gateway': 'host_gateway',
        'id': 'id',
        'manifest': 'manifest',
        'manifest_timestamp': 'manifest_timestamp',
        'mechanism': 'mechanism',
        'mechanism_url': 'mechanism_url',
        'name': 'name',
        'serial_number': 'serial_number',
        'state': 'state',
        'updated_at': 'updated_at',
        'vendor_id': 'vendor_id'
    }

    def __init__(self, account_id=None, auto_update=None, bootstrap_expiration_date=None, bootstrapped_timestamp=None, ca_id=None, connector_expiration_date=None, created_at=None, custom_attributes=None, deployed_state=None, deployment=None, description=None, device_class=None, device_execution_mode=None, device_key=None, endpoint_name=None, endpoint_type=None, enrolment_list_timestamp=None, etag=None, firmware_checksum=None, host_gateway=None, id=None, manifest=None, manifest_timestamp=None, mechanism=None, mechanism_url=None, name=None, serial_number=None, state=None, updated_at=None, vendor_id=None):
        """
        DeviceInNinFilter - a model defined in Swagger
        """

        self._account_id = account_id
        self._auto_update = auto_update
        self._bootstrap_expiration_date = bootstrap_expiration_date
        self._bootstrapped_timestamp = bootstrapped_timestamp
        self._ca_id = ca_id
        self._connector_expiration_date = connector_expiration_date
        self._created_at = created_at
        self._custom_attributes = custom_attributes
        self._deployed_state = deployed_state
        self._deployment = deployment
        self._description = description
        self._device_class = device_class
        self._device_execution_mode = device_execution_mode
        self._device_key = device_key
        self._endpoint_name = endpoint_name
        self._endpoint_type = endpoint_type
        self._enrolment_list_timestamp = enrolment_list_timestamp
        self._etag = etag
        self._firmware_checksum = firmware_checksum
        self._host_gateway = host_gateway
        self._id = id
        self._manifest = manifest
        self._manifest_timestamp = manifest_timestamp
        self._mechanism = mechanism
        self._mechanism_url = mechanism_url
        self._name = name
        self._serial_number = serial_number
        self._state = state
        self._updated_at = updated_at
        self._vendor_id = vendor_id
        self.discriminator = None

    @property
    def account_id(self):
        """
        Gets the account_id of this DeviceInNinFilter.

        :return: The account_id of this DeviceInNinFilter.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """
        Sets the account_id of this DeviceInNinFilter.

        :param account_id: The account_id of this DeviceInNinFilter.
        :type: str
        """

        self._account_id = account_id

    @property
    def auto_update(self):
        """
        Gets the auto_update of this DeviceInNinFilter.

        :return: The auto_update of this DeviceInNinFilter.
        :rtype: bool
        """
        return self._auto_update

    @auto_update.setter
    def auto_update(self, auto_update):
        """
        Sets the auto_update of this DeviceInNinFilter.

        :param auto_update: The auto_update of this DeviceInNinFilter.
        :type: bool
        """

        self._auto_update = auto_update

    @property
    def bootstrap_expiration_date(self):
        """
        Gets the bootstrap_expiration_date of this DeviceInNinFilter.

        :return: The bootstrap_expiration_date of this DeviceInNinFilter.
        :rtype: datetime
        """
        return self._bootstrap_expiration_date

    @bootstrap_expiration_date.setter
    def bootstrap_expiration_date(self, bootstrap_expiration_date):
        """
        Sets the bootstrap_expiration_date of this DeviceInNinFilter.

        :param bootstrap_expiration_date: The bootstrap_expiration_date of this DeviceInNinFilter.
        :type: datetime
        """

        self._bootstrap_expiration_date = bootstrap_expiration_date

    @property
    def bootstrapped_timestamp(self):
        """
        Gets the bootstrapped_timestamp of this DeviceInNinFilter.

        :return: The bootstrapped_timestamp of this DeviceInNinFilter.
        :rtype: datetime
        """
        return self._bootstrapped_timestamp

    @bootstrapped_timestamp.setter
    def bootstrapped_timestamp(self, bootstrapped_timestamp):
        """
        Sets the bootstrapped_timestamp of this DeviceInNinFilter.

        :param bootstrapped_timestamp: The bootstrapped_timestamp of this DeviceInNinFilter.
        :type: datetime
        """

        self._bootstrapped_timestamp = bootstrapped_timestamp

    @property
    def ca_id(self):
        """
        Gets the ca_id of this DeviceInNinFilter.

        :return: The ca_id of this DeviceInNinFilter.
        :rtype: str
        """
        return self._ca_id

    @ca_id.setter
    def ca_id(self, ca_id):
        """
        Sets the ca_id of this DeviceInNinFilter.

        :param ca_id: The ca_id of this DeviceInNinFilter.
        :type: str
        """

        self._ca_id = ca_id

    @property
    def connector_expiration_date(self):
        """
        Gets the connector_expiration_date of this DeviceInNinFilter.

        :return: The connector_expiration_date of this DeviceInNinFilter.
        :rtype: datetime
        """
        return self._connector_expiration_date

    @connector_expiration_date.setter
    def connector_expiration_date(self, connector_expiration_date):
        """
        Sets the connector_expiration_date of this DeviceInNinFilter.

        :param connector_expiration_date: The connector_expiration_date of this DeviceInNinFilter.
        :type: datetime
        """

        self._connector_expiration_date = connector_expiration_date

    @property
    def created_at(self):
        """
        Gets the created_at of this DeviceInNinFilter.

        :return: The created_at of this DeviceInNinFilter.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this DeviceInNinFilter.

        :param created_at: The created_at of this DeviceInNinFilter.
        :type: datetime
        """

        self._created_at = created_at

    @property
    def custom_attributes(self):
        """
        Gets the custom_attributes of this DeviceInNinFilter.

        :return: The custom_attributes of this DeviceInNinFilter.
        :rtype: dict(str, str)
        """
        return self._custom_attributes

    @custom_attributes.setter
    def custom_attributes(self, custom_attributes):
        """
        Sets the custom_attributes of this DeviceInNinFilter.

        :param custom_attributes: The custom_attributes of this DeviceInNinFilter.
        :type: dict(str, str)
        """

        self._custom_attributes = custom_attributes

    @property
    def deployed_state(self):
        """
        Gets the deployed_state of this DeviceInNinFilter.

        :return: The deployed_state of this DeviceInNinFilter.
        :rtype: str
        """
        return self._deployed_state

    @deployed_state.setter
    def deployed_state(self, deployed_state):
        """
        Sets the deployed_state of this DeviceInNinFilter.

        :param deployed_state: The deployed_state of this DeviceInNinFilter.
        :type: str
        """

        self._deployed_state = deployed_state

    @property
    def deployment(self):
        """
        Gets the deployment of this DeviceInNinFilter.

        :return: The deployment of this DeviceInNinFilter.
        :rtype: str
        """
        return self._deployment

    @deployment.setter
    def deployment(self, deployment):
        """
        Sets the deployment of this DeviceInNinFilter.

        :param deployment: The deployment of this DeviceInNinFilter.
        :type: str
        """

        self._deployment = deployment

    @property
    def description(self):
        """
        Gets the description of this DeviceInNinFilter.

        :return: The description of this DeviceInNinFilter.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this DeviceInNinFilter.

        :param description: The description of this DeviceInNinFilter.
        :type: str
        """

        self._description = description

    @property
    def device_class(self):
        """
        Gets the device_class of this DeviceInNinFilter.

        :return: The device_class of this DeviceInNinFilter.
        :rtype: str
        """
        return self._device_class

    @device_class.setter
    def device_class(self, device_class):
        """
        Sets the device_class of this DeviceInNinFilter.

        :param device_class: The device_class of this DeviceInNinFilter.
        :type: str
        """

        self._device_class = device_class

    @property
    def device_execution_mode(self):
        """
        Gets the device_execution_mode of this DeviceInNinFilter.

        :return: The device_execution_mode of this DeviceInNinFilter.
        :rtype: int
        """
        return self._device_execution_mode

    @device_execution_mode.setter
    def device_execution_mode(self, device_execution_mode):
        """
        Sets the device_execution_mode of this DeviceInNinFilter.

        :param device_execution_mode: The device_execution_mode of this DeviceInNinFilter.
        :type: int
        """

        self._device_execution_mode = device_execution_mode

    @property
    def device_key(self):
        """
        Gets the device_key of this DeviceInNinFilter.

        :return: The device_key of this DeviceInNinFilter.
        :rtype: str
        """
        return self._device_key

    @device_key.setter
    def device_key(self, device_key):
        """
        Sets the device_key of this DeviceInNinFilter.

        :param device_key: The device_key of this DeviceInNinFilter.
        :type: str
        """

        self._device_key = device_key

    @property
    def endpoint_name(self):
        """
        Gets the endpoint_name of this DeviceInNinFilter.

        :return: The endpoint_name of this DeviceInNinFilter.
        :rtype: str
        """
        return self._endpoint_name

    @endpoint_name.setter
    def endpoint_name(self, endpoint_name):
        """
        Sets the endpoint_name of this DeviceInNinFilter.

        :param endpoint_name: The endpoint_name of this DeviceInNinFilter.
        :type: str
        """

        self._endpoint_name = endpoint_name

    @property
    def endpoint_type(self):
        """
        Gets the endpoint_type of this DeviceInNinFilter.

        :return: The endpoint_type of this DeviceInNinFilter.
        :rtype: str
        """
        return self._endpoint_type

    @endpoint_type.setter
    def endpoint_type(self, endpoint_type):
        """
        Sets the endpoint_type of this DeviceInNinFilter.

        :param endpoint_type: The endpoint_type of this DeviceInNinFilter.
        :type: str
        """

        self._endpoint_type = endpoint_type

    @property
    def enrolment_list_timestamp(self):
        """
        Gets the enrolment_list_timestamp of this DeviceInNinFilter.

        :return: The enrolment_list_timestamp of this DeviceInNinFilter.
        :rtype: datetime
        """
        return self._enrolment_list_timestamp

    @enrolment_list_timestamp.setter
    def enrolment_list_timestamp(self, enrolment_list_timestamp):
        """
        Sets the enrolment_list_timestamp of this DeviceInNinFilter.

        :param enrolment_list_timestamp: The enrolment_list_timestamp of this DeviceInNinFilter.
        :type: datetime
        """

        self._enrolment_list_timestamp = enrolment_list_timestamp

    @property
    def etag(self):
        """
        Gets the etag of this DeviceInNinFilter.

        :return: The etag of this DeviceInNinFilter.
        :rtype: datetime
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """
        Sets the etag of this DeviceInNinFilter.

        :param etag: The etag of this DeviceInNinFilter.
        :type: datetime
        """

        self._etag = etag

    @property
    def firmware_checksum(self):
        """
        Gets the firmware_checksum of this DeviceInNinFilter.

        :return: The firmware_checksum of this DeviceInNinFilter.
        :rtype: str
        """
        return self._firmware_checksum

    @firmware_checksum.setter
    def firmware_checksum(self, firmware_checksum):
        """
        Sets the firmware_checksum of this DeviceInNinFilter.

        :param firmware_checksum: The firmware_checksum of this DeviceInNinFilter.
        :type: str
        """

        self._firmware_checksum = firmware_checksum

    @property
    def host_gateway(self):
        """
        Gets the host_gateway of this DeviceInNinFilter.

        :return: The host_gateway of this DeviceInNinFilter.
        :rtype: str
        """
        return self._host_gateway

    @host_gateway.setter
    def host_gateway(self, host_gateway):
        """
        Sets the host_gateway of this DeviceInNinFilter.

        :param host_gateway: The host_gateway of this DeviceInNinFilter.
        :type: str
        """

        self._host_gateway = host_gateway

    @property
    def id(self):
        """
        Gets the id of this DeviceInNinFilter.

        :return: The id of this DeviceInNinFilter.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this DeviceInNinFilter.

        :param id: The id of this DeviceInNinFilter.
        :type: str
        """

        self._id = id

    @property
    def manifest(self):
        """
        Gets the manifest of this DeviceInNinFilter.

        :return: The manifest of this DeviceInNinFilter.
        :rtype: str
        """
        return self._manifest

    @manifest.setter
    def manifest(self, manifest):
        """
        Sets the manifest of this DeviceInNinFilter.

        :param manifest: The manifest of this DeviceInNinFilter.
        :type: str
        """

        self._manifest = manifest

    @property
    def manifest_timestamp(self):
        """
        Gets the manifest_timestamp of this DeviceInNinFilter.

        :return: The manifest_timestamp of this DeviceInNinFilter.
        :rtype: datetime
        """
        return self._manifest_timestamp

    @manifest_timestamp.setter
    def manifest_timestamp(self, manifest_timestamp):
        """
        Sets the manifest_timestamp of this DeviceInNinFilter.

        :param manifest_timestamp: The manifest_timestamp of this DeviceInNinFilter.
        :type: datetime
        """

        self._manifest_timestamp = manifest_timestamp

    @property
    def mechanism(self):
        """
        Gets the mechanism of this DeviceInNinFilter.

        :return: The mechanism of this DeviceInNinFilter.
        :rtype: str
        """
        return self._mechanism

    @mechanism.setter
    def mechanism(self, mechanism):
        """
        Sets the mechanism of this DeviceInNinFilter.

        :param mechanism: The mechanism of this DeviceInNinFilter.
        :type: str
        """

        self._mechanism = mechanism

    @property
    def mechanism_url(self):
        """
        Gets the mechanism_url of this DeviceInNinFilter.

        :return: The mechanism_url of this DeviceInNinFilter.
        :rtype: str
        """
        return self._mechanism_url

    @mechanism_url.setter
    def mechanism_url(self, mechanism_url):
        """
        Sets the mechanism_url of this DeviceInNinFilter.

        :param mechanism_url: The mechanism_url of this DeviceInNinFilter.
        :type: str
        """

        self._mechanism_url = mechanism_url

    @property
    def name(self):
        """
        Gets the name of this DeviceInNinFilter.

        :return: The name of this DeviceInNinFilter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this DeviceInNinFilter.

        :param name: The name of this DeviceInNinFilter.
        :type: str
        """

        self._name = name

    @property
    def serial_number(self):
        """
        Gets the serial_number of this DeviceInNinFilter.

        :return: The serial_number of this DeviceInNinFilter.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """
        Sets the serial_number of this DeviceInNinFilter.

        :param serial_number: The serial_number of this DeviceInNinFilter.
        :type: str
        """

        self._serial_number = serial_number

    @property
    def state(self):
        """
        Gets the state of this DeviceInNinFilter.

        :return: The state of this DeviceInNinFilter.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """
        Sets the state of this DeviceInNinFilter.

        :param state: The state of this DeviceInNinFilter.
        :type: str
        """

        self._state = state

    @property
    def updated_at(self):
        """
        Gets the updated_at of this DeviceInNinFilter.

        :return: The updated_at of this DeviceInNinFilter.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """
        Sets the updated_at of this DeviceInNinFilter.

        :param updated_at: The updated_at of this DeviceInNinFilter.
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def vendor_id(self):
        """
        Gets the vendor_id of this DeviceInNinFilter.

        :return: The vendor_id of this DeviceInNinFilter.
        :rtype: str
        """
        return self._vendor_id

    @vendor_id.setter
    def vendor_id(self, vendor_id):
        """
        Sets the vendor_id of this DeviceInNinFilter.

        :param vendor_id: The vendor_id of this DeviceInNinFilter.
        :type: str
        """

        self._vendor_id = vendor_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DeviceInNinFilter):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
