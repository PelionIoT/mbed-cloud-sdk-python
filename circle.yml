machine:
  services:
    - docker

general:
  artifacts:
    - ~/results
    - ~/rpc_results
    - ~/docs

dependencies:
  pre:
    # switch out environment variables depending on branch
    - |
      if [[ $CIRCLE_BRANCH == production ]]; then
        echo 'export MBED_CLOUD_API_HOST=$MBED_CLOUD_API_HOST_PROD' >> ~/.circlerc;
        echo 'export MBED_CLOUD_API_KEY=$MBED_CLOUD_API_KEY_PROD' >> ~/.circlerc;
        echo 'environment variables swapped';
      fi
  override:
    - sudo apt-get update
    - sudo apt-get install pandoc
    - pip install awscli codecov
    # AWS and docker and circleci do not get along well:
    # for safety, try both ways of assigning credentials
    - |
      login="$(aws ecr get-login)"
      ${login}
      login="$(aws ecr get-login --no-include-email)"
      ${login}
    - docker pull $TESTRUNNER_DOCKER_IMAGE
    - pip install tox tox-pyenv
    - pyenv local 2.7.12 3.6.2
    - tox --notest
  cache_directories:
    - ".tox"

test:
  pre:
    - echo "{\"api_key\":\"$MBED_CLOUD_API_KEY\", \"host\":\"$MBED_CLOUD_API_HOST\"}" > .mbed_cloud_config.json
    - cat .mbed_cloud_config.json
  override:
    - tox
  post:
    # upload to codecov.io
    - codecov
    - sphinx-build -a -b html -c docs/ docs/ ~/docs
    - mkdir -p $CIRCLE_TEST_REPORTS/tests/
    - cp ~/results/py36/unittests.xml $CIRCLE_TEST_REPORTS/tests/
    - cp ~/rpc_results/py36/results.xml $CIRCLE_TEST_REPORTS/tests/

deployment:
  staging:
    branch: master
    commands:
      - aws s3 sync --delete --cache-control max-age=3600 ~/docs s3://mbed-cloud-sdk-python
