definitions:
  AccessKey:
    description: Represents an application in Device Management.
    properties:
      account_id:
        description: The ID of the account.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        readOnly: true
        type: string
      application_id:
        description: The ID of the application.
        example: 01705c6383f6c85b76f92f4e00000000
        pattern: '[a-f0-9]{32}'
        readOnly: true
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2020-02-13T09:35:20Z'
        format: date-time
        readOnly: true
        type: string
      description:
        description: The description of the access key.
        example: Access key to control the warp drive
        maxLength: 500
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        readOnly: true
        type: string
      expiration:
        description: 'Expiration time of the access key, as UTC time RFC3339.

          Expiration makes the access key inoperative and the status will be EXPIRED.

          The client using the expired access key is no longer able to use the REST
          API.

          The access key expiration does not invalidate existing configurations meaning
          that subscribed events will continue to flow on existing channels.'
        format: date-time
        type: string
      id:
        description: The ID of the access key.
        example: 01619571f7020242ac12000600000000
        pattern: '[a-f0-9]{32}'
        readOnly: true
        type: string
      key:
        description: The access key. The full key including the secret part is visible
          in the response for create only
        example: ak_2MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000
        readOnly: true
        type: string
      last_used_at:
        description: The time of the latest access key usage.
        example: '2020-02-14T15:24:14Z'
        format: date-time
        readOnly: true
        type: string
      name:
        description: The display name for the access key.
        example: Access key warp
        maxLength: 100
        type: string
      object:
        description: 'Entity name: always ''access-key'''
        enum:
        - access-key
        readOnly: true
        type: string
      status:
        description: 'The status of the access key.

          ACTIVE means that the access key is operational.

          INACTIVE means that the access key is not operational and it prevents the
          clients to use the REST API. Inactivating the access key does not invalidate
          existing configurations meaning that subscribed events will continue to
          flow on existing channels.

          The EXPIRED status is not allowed to be set directly, it is derived from
          the expiration attribute.'
        enum:
        - ACTIVE
        - INACTIVE
        - EXPIRED
        example: ACTIVE
        type: string
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2020-02-14T15:24:14Z'
        format: date-time
        readOnly: true
        type: string
    required:
    - name
    type: object
  AccessKeyList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/AccessKey'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return, or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  AccountCreationReq:
    description: Represents an account creation request.
    properties:
      address_line1:
        description: Postal address line 1. Required for commercial accounts only.
        example: 110 Fulbourn Rd
        maxLength: 100
        type: string
        x-nullable: true
      address_line2:
        description: Postal address line 2.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
      admin_email:
        description: The email address of the account admin
        example: admin@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      admin_full_name:
        description: The full name of the admin user to create.
        example: Admin Doe
        maxLength: 100
        type: string
        x-nullable: true
      admin_name:
        description: The username of the admin user to create.
        example: admin
        pattern: '[\w\-,._@+=]{4,30}'
        type: string
        x-nullable: true
      admin_password:
        description: The password when creating a new user. Generated when not present
          in the request.
        example: PZf9eEUH43DAPE9ULINFeuj
        type: string
        x-nullable: true
      aliases:
        description: An array of aliases for the tenant account ID. The aliases must
          be globally unique.
        items:
          pattern: '[\w\-._]{8,100}'
          type: string
        maxItems: 10
        type: array
        x-nullable: true
      business_model:
        $ref: '#/definitions/BusinessModel'
      city:
        description: The city part of the postal address. Required for commercial
          accounts only.
        example: Cambridge
        maxLength: 100
        type: string
        x-nullable: true
      company:
        description: The name of the company used in billing. Required for commercial
          accounts only.
        example: ARM Holdings Plc
        maxLength: 100
        type: string
        x-nullable: true
      contact:
        description: The name of the contact person for this account. Required for
          commercial accounts only.
        example: J. Doe
        maxLength: 100
        type: string
        x-nullable: true
      contract_number:
        description: Contract number of the customer.
        example: 1NX25_0001
        maxLength: 100
        type: string
        x-nullable: true
      country:
        description: The country part of the postal address. Required for commercial
          accounts only.
        example: United Kingdom
        maxLength: 100
        type: string
        x-nullable: true
      customer_number:
        description: Customer number of the customer.
        example: 1NC25_0001
        maxLength: 100
        type: string
        x-nullable: true
      display_name:
        description: The display name for the tenant account.
        example: ARM
        maxLength: 100
        type: string
        x-nullable: true
      email:
        description: The company email address for this account. Required for commercial
          accounts only.
        example: info@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      end_market:
        description: The end market of the account to create.
        example: IT
        type: string
      phone_number:
        description: The phone number of a representative of the company.
        example: +44 (1223) 400 400
        maxLength: 100
        type: string
        x-nullable: true
      postal_code:
        description: The postal code part of the postal address.
        example: CB1 9NJ
        maxLength: 100
        type: string
        x-nullable: true
      state:
        description: The state part of the postal address.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
    required:
    - end_market
    type: object
  AccountCreationResp:
    description: Represents an account in requests and responses.
    properties:
      address_line1:
        description: Postal address line 1.
        example: 110 Fulbourn Rd
        maxLength: 100
        type: string
        x-nullable: true
      address_line2:
        description: Postal address line 2.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
      admin_email:
        description: The email address of the admin user created for this account.
          Present only in the response for account creation.
        example: admin@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      admin_full_name:
        description: The full name of the admin user created for this account. Present
          only in the response for account creation.
        example: Admin Doe
        maxLength: 100
        type: string
        x-nullable: true
      admin_id:
        description: The ID of the admin user created for this account. Present only
          in the response for the account creation.
        example: 01619571e2e89242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
        x-nullable: true
      admin_key:
        description: The admin API key created for this account. Present only in the
          response for account creation.
        example: ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT
        readOnly: true
        type: string
        x-deprecation:
          comment: This field is deprecated, do not use it anymore.
          end_of_life_at: '2021-09-01T00:00:00+00:00'
          issued_at: '2020-09-01T00:00:00+00:00'
          links: []
        x-nullable: true
      admin_name:
        description: The username of the admin user created for this account. Present
          only in the response for account creation.
        example: admin
        maxLength: 100
        type: string
        x-nullable: true
      admin_password:
        description: The password of the admin user created for this account. Present
          only in the response for account creation.
        example: PZf9eEUH43DAPE9ULINFeuj
        type: string
        x-nullable: true
      aliases:
        description: An array of aliases for the tenant account ID. The aliases must
          be globally unique.
        items:
          pattern: '[\w\-._]{8,100}'
          type: string
        maxItems: 10
        type: array
      business_model:
        $ref: '#/definitions/BusinessModel'
      business_model_history:
        description: Business model history for this account.
        items:
          $ref: '#/definitions/BusinessModelHistory'
        type: array
      city:
        description: The city part of the postal address.
        example: Cambridge
        maxLength: 100
        type: string
        x-nullable: true
      company:
        description: The name of the company used in billing.
        example: ARM Holdings Plc
        maxLength: 100
        type: string
        x-nullable: true
      contact:
        description: The name of the contact person for this account.
        example: J. Doe
        maxLength: 100
        type: string
        x-nullable: true
      contract_number:
        description: Contract number of the customer.
        example: 1NX25_0001
        type: string
        x-nullable: true
      country:
        description: The country part of the postal address.
        example: United Kingdom
        maxLength: 100
        type: string
        x-nullable: true
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      custom_fields:
        additionalProperties:
          type: string
        description: Account's custom properties as key-value pairs.
        type: object
        x-nullable: true
      customer_number:
        description: Customer number of the customer.
        example: 1NC25_0001
        type: string
        x-nullable: true
      display_name:
        description: The display name for the tenant account.
        example: ARM
        maxLength: 100
        type: string
        x-nullable: true
      email:
        description: The company email address for this account.
        example: info@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      end_market:
        description: Account end market.
        example: IT
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      expiration:
        description: Expiration time of the account, as UTC time RFC3339.
        format: date-time
        type: string
        x-nullable: true
      expiration_warning_threshold:
        description: Indicates how many days (1-180) before account expiration a notification
          email is sent.
        example: '180'
        maximum: 180
        minimum: 1
        type: integer
        x-nullable: true
      id:
        description: Account ID.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      idle_timeout:
        description: The reference token expiration time, in minutes, for this account.
        example: '30'
        maximum: 120
        minimum: 1
        type: integer
        x-nullable: true
      limitations:
        description: List of account limitation objects.
        items:
          $ref: '#/definitions/AccountLimitation'
        type: array
      limits:
        additionalProperties:
          type: string
        description: 'DEPRECATED: Replaced by the limitations parameter.'
        type: object
        x-deprecation:
          comment: Replaced by the limitations parameter.
          end_of_life_at: '2020-08-27T12:03:58+00:00'
          issued_at: '2019-08-27T12:03:58+00:00'
        x-nullable: true
      mfa_status:
        description: The enforcement status of multi-factor authentication, either
          `enforced` or `optional`.
        enum:
        - enforced
        - optional
        type: string
        x-nullable: true
      notification_emails:
        description: A list of notification email addresses.
        items:
          pattern: ^(?=.{3,254}$).+\@.+
          type: string
        type: array
        x-nullable: true
      object:
        description: 'Entity name: always `account`.'
        enum:
        - account
        type: string
      parent_account:
        $ref: '#/definitions/ParentAccountInfo'
        description: Contact details of the parent account.
        x-nullable: true
      parent_id:
        description: The ID of the parent account, if any.
        example: 01619571dad80242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
        x-nullable: true
      password_policy:
        $ref: '#/definitions/PasswordPolicy'
        description: The password policy for this account.
        x-nullable: true
      password_recovery_expiration:
        description: Indicates for how many minutes a password recovery email is valid.
        format: int32
        maximum: 45
        minimum: 1
        type: integer
      phone_number:
        description: The phone number of a company representative.
        example: +44 (1223) 400 400
        maxLength: 100
        type: string
        x-nullable: true
      policies:
        description: List of policies if requested.
        items:
          $ref: '#/definitions/FeaturePolicy'
        type: array
        x-nullable: true
      postal_code:
        description: The postal code part of the postal address.
        example: CB1 9NJ
        maxLength: 100
        type: string
        x-nullable: true
      reason:
        description: A note with the reason for account status update.
        example: Subscription paid.
        type: string
        x-nullable: true
      reference_note:
        description: A reference note for updating the status of the account.
        example: ARM-INT-0001
        type: string
        x-nullable: true
      sales_contact:
        description: Email address of the sales contact.
        example: sales@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      state:
        description: The state part of the postal address.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
      status:
        description: The status of the account.
        enum:
        - ENROLLING
        - ACTIVE
        - RESTRICTED
        - SUSPENDED
        example: ACTIVE
        type: string
      sub_accounts:
        description: List of sub accounts. Not available for developer users.
        items:
          $ref: '#/definitions/AccountInfo'
        type: array
        x-nullable: true
      template_id:
        description: Account template ID.
        example: 01619571e7160242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
        x-nullable: true
      tier:
        description: 'The tier level of the account; `0`: free tier, `1`: commercial
          account, `2`: partner tier. Other values are reserved for the future.'
        example: '1'
        type: string
      tier_history:
        description: Tier history for this account.
        items:
          $ref: '#/definitions/TierHistory'
        type: array
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
      upgraded_at:
        description: Time when upgraded to commercial account in UTC format RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
    type: object
  AccountInfo:
    description: Represents an account in requests and responses.
    properties:
      address_line1:
        description: Postal address line 1.
        example: 110 Fulbourn Rd
        maxLength: 100
        type: string
        x-nullable: true
      address_line2:
        description: Postal address line 2.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
      aliases:
        description: An array of aliases for the tenant account ID. The aliases must
          be globally unique.
        items:
          pattern: '[\w\-._]{8,100}'
          type: string
        maxItems: 10
        type: array
      business_model:
        $ref: '#/definitions/BusinessModel'
      business_model_history:
        description: Business model history for this account.
        items:
          $ref: '#/definitions/BusinessModelHistory'
        type: array
      city:
        description: The city part of the postal address.
        example: Cambridge
        maxLength: 100
        type: string
        x-nullable: true
      company:
        description: The name of the company used in billing.
        example: ARM Holdings Plc
        maxLength: 100
        type: string
        x-nullable: true
      contact:
        description: The name of the contact person for this account.
        example: J. Doe
        maxLength: 100
        type: string
        x-nullable: true
      contract_number:
        description: Contract number of the customer.
        example: 1NX25_0001
        type: string
        x-nullable: true
      country:
        description: The country part of the postal address.
        example: United Kingdom
        maxLength: 100
        type: string
        x-nullable: true
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      custom_fields:
        additionalProperties:
          type: string
        description: Account's custom properties as key-value pairs.
        type: object
        x-nullable: true
      customer_number:
        description: Customer number of the customer.
        example: 1NC25_0001
        type: string
        x-nullable: true
      display_name:
        description: The display name for the tenant account.
        example: ARM
        maxLength: 100
        type: string
        x-nullable: true
      email:
        description: The company email address for this account.
        example: info@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      end_market:
        description: Account end market.
        example: IT
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      expiration:
        description: Expiration time of the account, as UTC time RFC3339.
        format: date-time
        type: string
        x-nullable: true
      expiration_warning_threshold:
        description: Indicates how many days (1-180) before account expiration a notification
          email is sent.
        example: '180'
        maximum: 180
        minimum: 1
        type: integer
        x-nullable: true
      id:
        description: Account ID.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      idle_timeout:
        description: The reference token expiration time, in minutes, for this account.
        example: '30'
        maximum: 120
        minimum: 1
        type: integer
        x-nullable: true
      limitations:
        description: List of account limitation objects.
        items:
          $ref: '#/definitions/AccountLimitation'
        type: array
      limits:
        additionalProperties:
          type: string
        description: 'DEPRECATED: Replaced by the limitations parameter.'
        type: object
        x-deprecation:
          comment: Replaced by the limitations parameter.
          end_of_life_at: '2020-08-27T12:03:58+00:00'
          issued_at: '2019-08-27T12:03:58+00:00'
        x-nullable: true
      mfa_status:
        description: The enforcement status of multi-factor authentication, either
          `enforced` or `optional`.
        enum:
        - enforced
        - optional
        type: string
        x-nullable: true
      notification_emails:
        description: A list of notification email addresses.
        items:
          pattern: ^(?=.{3,254}$).+\@.+
          type: string
        type: array
        x-nullable: true
      object:
        description: 'Entity name: always `account`.'
        enum:
        - account
        type: string
      parent_account:
        $ref: '#/definitions/ParentAccountInfo'
        description: Contact details of the parent account.
        x-nullable: true
      parent_id:
        description: The ID of the parent account, if any.
        example: 01619571dad80242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
        x-nullable: true
      password_policy:
        $ref: '#/definitions/PasswordPolicy'
        description: The password policy for this account.
        x-nullable: true
      password_recovery_expiration:
        description: Indicates for how many minutes a password recovery email is valid.
        format: int32
        maximum: 45
        minimum: 1
        type: integer
      phone_number:
        description: The phone number of a company representative.
        example: +44 (1223) 400 400
        maxLength: 100
        type: string
        x-nullable: true
      policies:
        description: List of policies if requested.
        items:
          $ref: '#/definitions/FeaturePolicy'
        type: array
        x-nullable: true
      postal_code:
        description: The postal code part of the postal address.
        example: CB1 9NJ
        maxLength: 100
        type: string
        x-nullable: true
      reason:
        description: A note with the reason for account status update.
        example: Subscription paid.
        type: string
        x-nullable: true
      reference_note:
        description: A reference note for updating the status of the account.
        example: ARM-INT-0001
        type: string
        x-nullable: true
      sales_contact:
        description: Email address of the sales contact.
        example: sales@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      state:
        description: The state part of the postal address.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
      status:
        description: The status of the account.
        enum:
        - ENROLLING
        - ACTIVE
        - RESTRICTED
        - SUSPENDED
        example: ACTIVE
        type: string
      sub_accounts:
        description: List of sub accounts. Not available for developer users.
        items:
          $ref: '#/definitions/AccountInfo'
        type: array
        x-nullable: true
      template_id:
        description: Account template ID.
        example: 01619571e7160242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
        x-nullable: true
      tier:
        description: 'The tier level of the account; `0`: free tier, `1`: commercial
          account, `2`: partner tier. Other values are reserved for the future.'
        example: '1'
        type: string
      tier_history:
        description: Tier history for this account.
        items:
          $ref: '#/definitions/TierHistory'
        type: array
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
      upgraded_at:
        description: Time when upgraded to commercial account in UTC format RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
    required:
    - end_market
    - etag
    - id
    - object
    - status
    - tier
    type: object
  AccountInfoList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/AccountInfo'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return (2-1000), or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  AccountLimitation:
    description: This object represents an account limitation.
    properties:
      billing_period:
        description: Billing period of the account limitation.
        format: int32
        type: integer
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      description:
        description: Description of the account limitation.
        readOnly: true
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      id:
        description: Entity ID.
        example: 01619571d01d0242ac12000600000000
        type: string
      inherited:
        description: Flag indicating whether this limitation is inherited.
        readOnly: true
        type: boolean
      inherited_from:
        description: Indicates where this limit is inherited from.
        readOnly: true
        type: string
      inherited_type:
        description: Indicates the type of the entity where the limitation is inherited
          from.
        readOnly: true
        type: string
      limit:
        description: The value of the limit.
        format: int32
        type: integer
      name:
        description: Name of the account limitation.
        type: string
      object:
        description: 'Entity name: always ''limitation'''
        enum:
        - user
        - api-key
        - group
        - account
        - account_template
        - trusted_cert
        - list
        - error
        - agreement
        - signed_agreement
        - policy
        - limitation
        - identity_provider
        - user_session
        - user_invitation
        - notification_entry
        - branding_color
        - branding_image
        type: string
      quota:
        description: Quota of the account limitation.
        format: int32
        type: integer
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
    type: object
  AccountLimitationList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/AccountLimitation'
        type: array
      has_more:
        description: Flag indicating whether there is more results.
        example: false
        type: boolean
      limit:
        description: 'The number of results to return, (range: 2-1000), or equals
          to `total_count`'
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always ''list'''
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number or records, if requested. It might be returned
          also for small lists.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  AccountResponse:
    description: This object represents an account in responses.
    properties:
      alias:
        description: Alias of the account.
        example: cust-314159
        readOnly: true
        type: string
      display_name:
        description: The display name for the account.
        example: Customer 3.14159
        readOnly: true
        type: string
      id:
        description: The UUID of the account.
        example: 01619571e2e90242ac12000600000000
        readOnly: true
        type: string
      login_profiles:
        description: A list of login profiles for the user in the account.
        items:
          $ref: '#/definitions/LoginProfile'
        type: array
        x-nullable: true
      parent_id:
        description: The UUID of the parent account, if it has any.
        example: 01619571f3c00242ac12000600000000
        readOnly: true
        type: string
      status:
        description: The status of the account.
        enum:
        - ENROLLING
        - ACTIVE
        - RESTRICTED
        - SUSPENDED
        example: ACTIVE
        readOnly: true
        type: string
    type: object
  AccountResponseList:
    properties:
      after:
        description: The entity ID to fetch after the given one.
        example: 01619571f3c00242ac12000600000000
        readOnly: true
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/AccountResponse'
        readOnly: true
        type: array
      has_more:
        description: Flag indicating whether there is more results.
        example: false
        readOnly: true
        type: boolean
      limit:
        description: 'The number of results to return, (range: 2-1000), or equals
          to `total_count`'
        example: 50
        format: int32
        readOnly: true
        type: integer
      object:
        description: 'Entity name: always ''list'''
        enum:
        - list
        readOnly: true
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        readOnly: true
        type: string
      total_count:
        description: The total number or records, if requested. It might be returned
          also for small lists.
        example: 5
        format: int32
        readOnly: true
        type: integer
    type: object
  AccountUpdateReq:
    description: Represents an account creation request.
    properties:
      address_line1:
        description: Postal address line 1. Required for commercial accounts only.
        example: 110 Fulbourn Rd
        maxLength: 100
        type: string
        x-nullable: true
      address_line2:
        description: Postal address line 2.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
      aliases:
        description: An array of aliases for the tenant account ID. The aliases must
          be globally unique.
        items:
          pattern: '[\w\-._]{8,100}'
          type: string
        maxItems: 10
        type: array
        x-nullable: true
      city:
        description: The city part of the postal address. Required for commercial
          accounts only.
        example: Cambridge
        maxLength: 100
        type: string
        x-nullable: true
      company:
        description: The name of the company used in billing. Required for commercial
          accounts only.
        example: ARM Holdings Plc
        maxLength: 100
        type: string
        x-nullable: true
      contact:
        description: The name of the contact person for this account. Required for
          commercial accounts only.
        example: J. Doe
        maxLength: 100
        type: string
        x-nullable: true
      country:
        description: The country part of the postal address. Required for commercial
          accounts only.
        example: United Kingdom
        maxLength: 100
        type: string
        x-nullable: true
      custom_fields:
        additionalProperties:
          type: string
        description: Account's custom properties as key-value pairs.
        maxItems: 10
        type: object
        x-nullable: true
      display_name:
        description: The display name for the tenant account.
        example: ARM
        maxLength: 100
        type: string
        x-nullable: true
      email:
        description: The company email address for this account. Required for commercial
          accounts only.
        example: info@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      end_market:
        description: The end market for this account.
        example: IT
        maxLength: 100
        type: string
        x-nullable: true
      expiration_warning_threshold:
        description: Indicates how many days before account expiration a notification
          email is sent.
        maximum: 180
        minimum: 1
        type: integer
        x-nullable: true
      idle_timeout:
        description: Reference token expiration time in minutes.
        maximum: 120
        minimum: 1
        type: integer
        x-nullable: true
      mfa_status:
        description: The enforcement status of multi-factor authentication, either
          `enforced` or `optional`.
        enum:
        - enforced
        - optional
        type: string
        x-nullable: true
      notification_emails:
        description: A list of notification email addresses.
        items:
          pattern: ^(?=.{3,254}$).+\@.+
          type: string
        type: array
        x-nullable: true
      password_policy:
        $ref: '#/definitions/PasswordPolicy'
        description: Password policy for this account.
        x-nullable: true
      password_recovery_expiration:
        description: Indicates for how many minutes a password recovery email is valid.
        format: int32
        maximum: 45
        minimum: 1
        type: integer
        x-nullable: true
      phone_number:
        description: The phone number of a representative of the company.
        example: +44 (1223) 400 400
        maxLength: 100
        type: string
        x-nullable: true
      postal_code:
        description: The postal code part of the postal address.
        example: CB1 9NJ
        maxLength: 100
        type: string
        x-nullable: true
      state:
        description: The state part of the postal address.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
    type: object
  AccountUpdateRootReq:
    description: Represents an account update request.
    properties:
      address_line1:
        description: Postal address line 1. Required for commercial accounts only.
        example: 110 Fulbourn Rd
        maxLength: 100
        type: string
        x-nullable: true
      address_line2:
        description: Postal address line 2.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
      aliases:
        description: An array of aliases for the tenant account ID. The aliases must
          be globally unique.
        items:
          pattern: '[\w\-._]{8,100}'
          type: string
        maxItems: 10
        type: array
        x-nullable: true
      business_model:
        $ref: '#/definitions/BusinessModel'
      city:
        description: The city part of the postal address. Required for commercial
          accounts only.
        example: Cambridge
        maxLength: 100
        type: string
        x-nullable: true
      company:
        description: The name of the company used in billing. Required for commercial
          accounts only.
        example: ARM Holdings Plc
        maxLength: 100
        type: string
        x-nullable: true
      contact:
        description: The name of the contact person for this account. Required for
          commercial accounts only.
        example: J. Doe
        maxLength: 100
        type: string
        x-nullable: true
      contract_number:
        description: Contract number of the customer. An administrator can set this
          property on tenant accounts only.
        type: string
        x-nullable: true
      country:
        description: The country part of the postal address. Required for commercial
          accounts only.
        example: United Kingdom
        maxLength: 100
        type: string
        x-nullable: true
      custom_fields:
        additionalProperties:
          type: string
        description: Account's custom properties as key-value pairs.
        maxItems: 10
        type: object
        x-nullable: true
      customer_number:
        description: Customer number of the customer. An administrator can set this
          property on tenant accounts only.
        type: string
        x-nullable: true
      display_name:
        description: The display name for the tenant account.
        example: ARM
        maxLength: 100
        type: string
        x-nullable: true
      email:
        description: The company email address for this account. Required for commercial
          accounts only.
        example: info@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      end_market:
        description: The end market for this account.
        example: IT
        maxLength: 100
        type: string
        x-nullable: true
      expiration_warning_threshold:
        description: Indicates how many days before account expiration a notification
          email is sent.
        maximum: 180
        minimum: 1
        type: integer
        x-nullable: true
      idle_timeout:
        description: The reference token expiration time in minutes for this account.
          Between 1 and 120 minutes.
        maximum: 120
        minimum: 1
        type: integer
        x-nullable: true
      mfa_status:
        description: The enforcement status of setting up the multi-factor authentication.
          'Enforced' means that setting up the MFA is required after login. 'Optional'
          means that the MFA is not required.
        enum:
        - enforced
        - optional
        type: string
        x-nullable: true
      notification_emails:
        description: A list of notification email addresses.
        items:
          pattern: ^(?=.{3,254}$).+\@.+
          type: string
        type: array
        x-nullable: true
      password_policy:
        $ref: '#/definitions/PasswordPolicy'
        description: Password policy for this account.
        x-nullable: true
      password_recovery_expiration:
        description: Indicates for how many minutes a password recovery email is valid.
        format: int32
        maximum: 45
        minimum: 1
        type: integer
        x-nullable: true
      phone_number:
        description: The phone number of a representative of the company.
        example: +44 (1223) 400 400
        maxLength: 100
        type: string
        x-nullable: true
      postal_code:
        description: The postal code part of the postal address.
        example: CB1 9NJ
        maxLength: 100
        type: string
        x-nullable: true
      sales_contact:
        description: Email address of the sales contact.
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      state:
        description: The state part of the postal address.
        example: ' '
        maxLength: 100
        type: string
        x-nullable: true
    type: object
  ActiveDevicesCounter:
    description: Active device count is the total number of unique active devices
      connected to Device Management. A device is considered active when it has registered
      at least once over a billing period.
    format: int64
    minimum: 0
    type: integer
  ActiveServicePackage:
    description: An active service package.
    properties:
      created:
        description: Service package creation time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      expires:
        description: Service package expiration time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      firmware_update_count:
        description: Size of firmware update quota of this service package.
        format: int32
        type: integer
      grace_period:
        description: Indicates whether the service package is in its grace period.
        type: boolean
      id:
        description: ID of this service package.
        type: string
      modified:
        description: Service package latest modified time in RFC3339 date-time with
          millisecond accuracy and UTC time zone.
        format: date-time
        type: string
      next_id:
        description: Next service package ID if this service package has a pending
          renewal, or null.
        type: string
      previous_id:
        description: Previous service package ID or null.
        type: string
      start_time:
        description: Service package start time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
    required:
    - id
    - created
    - modified
    - start_time
    - expires
    - firmware_update_count
    - grace_period
    type: object
  ActiveSession:
    description: Represents an active user session.
    properties:
      account_id:
        description: The UUID of the account.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      ip_address:
        description: IP address of the client.
        example: 127.0.0.1
        type: string
      login_time:
        description: The login time of the user.
        example: '2018-02-14T17:52:07Z'
        format: date-time
        type: string
      object:
        description: 'Entity name: always ''user-session'''
        enum:
        - user-session
        type: string
      reference_token:
        description: The reference token.
        example: rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk
        type: string
      user_agent:
        description: User Agent header from the login request.
        example: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36
          (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36
        type: string
    required:
    - account_id
    - ip_address
    - login_time
    - object
    - reference_token
    - user_agent
    type: object
  AggregatedQuotaUsageReport:
    description: Aggregated quota usage entry.
    properties:
      account_id:
        type: string
      amount:
        description: Amount of quota usage entry. Negative if quota consumption.
        format: int64
        type: integer
      campaign_name:
        description: 'Campaign name of quota usage entry.

          Null if quota usage entry type is not `reservation` or `reservation release`.'
        type: string
      time:
        description: Added time of quota usage entry in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      type:
        description: Type of quota usage entry.
        enum:
        - reservation
        - reservation_release
        - reservation_termination
        - package_renewal
        - package_creation
        - package_termination
        - package_tokens_edit
        type: string
    required:
    - account_id
    - amount
    - type
    - time
    type: object
  AllServerCredentialsResponseData:
    properties:
      bootstrap:
        $ref: '#/definitions/CredentialsResponseData'
      lwm2m:
        $ref: '#/definitions/CredentialsResponseData'
    type: object
  ApiKeyInfoReq:
    description: Represents an API key in requests towards Device Management.
    properties:
      groups:
        description: 'A list of group IDs this API key belongs to.

          Adding an API key to the ''Administrators'' group is restricted to administrators.'
        items:
          type: string
        type: array
      name:
        description: The display name for the API key.
        maxLength: 100
        type: string
      owner:
        description: The owner of this API key. Only an administrator can set the
          owner of an API key.
        type: string
      status:
        description: The status of the API key. Only an administrator can set the
          status of an API key.
        enum:
        - ACTIVE
        - INACTIVE
        type: string
    required:
    - name
    type: object
  ApiKeyInfoResp:
    description: Represents an API key in Device Management.
    properties:
      account_id:
        description: The ID of the account.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      creation_time:
        description: The timestamp of the API key creation in the storage, in milliseconds.
        example: 1518630727683
        format: int64
        type: integer
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      groups:
        description: A list of group IDs this API key belongs to.
        items:
          type: string
        type: array
      id:
        description: The ID of the API key.
        example: 01619571f7020242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      key:
        description: The API key.
        example: ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000
        type: string
      last_login_time:
        description: The timestamp of the latest API key usage, in milliseconds.
        example: 1518630727688
        format: int64
        type: integer
      name:
        description: The display name for the API key.
        example: API key gorgon
        maxLength: 100
        type: string
      object:
        description: 'Entity name: always ''api-key'''
        enum:
        - api-key
        type: string
      owner:
        description: The owner of this API key, who is the creator by default.
        example: 01619571e2e89242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      status:
        description: The status of the API key.
        enum:
        - ACTIVE
        - INACTIVE
        example: ACTIVE
        type: string
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
    required:
    - etag
    - id
    - key
    - name
    - object
    type: object
  ApiKeyInfoRespList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/ApiKeyInfoResp'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return, or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  ApiKeyUpdateReq:
    description: Represents an API key in requests towards Device Management.
    properties:
      groups:
        description: A list of group IDs this API key belongs to. Only an administrator
          can update the group membership of an API key.
        items:
          type: string
        type: array
      name:
        description: The display name for the API key.
        maxLength: 100
        type: string
      owner:
        description: The owner of this API key. Only an administrator can update the
          owner of an API key.
        type: string
      status:
        description: The status of the API key. Only the owner of the API key or an
          administrator can update the status of an API key.
        enum:
        - ACTIVE
        - INACTIVE
        type: string
    type: object
  Application:
    description: Represents an application in Device Management.
    properties:
      account_id:
        description: The ID of the account.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        readOnly: true
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2020-02-18T09:16:40Z'
        format: date-time
        readOnly: true
        type: string
      description:
        description: The description of the application.
        example: Application to control the warp drive
        maxLength: 500
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        readOnly: true
        type: string
      groups:
        description: A list of group IDs this application belongs to.
        items:
          example: 01705c6383f6c85b76f92f4e00000000
          type: string
        type: array
      id:
        description: The ID of the application.
        example: 01619571f7020242ac12000600000000
        pattern: '[a-f0-9]{32}'
        readOnly: true
        type: string
      last_used_at:
        description: The time of the latest application usage.
        example: '2020-02-14T15:24:14Z'
        format: date-time
        readOnly: true
        type: string
      name:
        description: The display name for the application.
        example: Application warp
        maxLength: 100
        type: string
      object:
        description: 'Entity name: always ''application'''
        enum:
        - application
        readOnly: true
        type: string
      status:
        description: The status of the application. When admin sets the application
          as inactive all related data and configurations are cleared from the system.
          If application is activated again, client must open new channels and set
          new subscriptions to start receiving events again.
        enum:
        - ACTIVE
        - INACTIVE
        example: ACTIVE
        type: string
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2020-02-19T11:54:32Z'
        format: date-time
        readOnly: true
        type: string
    required:
    - name
    type: object
  ApplicationList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/Application'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return, or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  ArchiveInfoResponse:
    description: This object represents the response for the archive info request.
    properties:
      download_size_bytes:
        description: The size of the archive file in bytes.
        example: 2402668
        type: integer
      download_url:
        description: URL to download the Factory Configurator Utility archive.
        example: https://api.us-east-1.mbedcloud.com/downloads/fcu/factory_configurator_utility.zip
        type: string
      license_type:
        description: The license agreement type required for downloading Factory Configurator
          Utility.
        example: fcu
        type: string
      license_version:
        description: The license agreement version required for downloading Factory
          Configurator Utility.
        example: '1.0'
        type: string
      release_notes_url:
        description: URL to the Factory Configurator Utility release notes.
        example: https://api.us-east-1.mbedcloud.com/downloads/fcu/release_notes
        type: string
      version:
        description: The Factory Configurator Utility version.
        example: 1.2.9.500
        type: string
    required:
    - download_size_bytes
    - version
    - download_url
    - release_notes_url
    type: object
  AsyncID:
    properties:
      async-response-id:
        description: Asynchronous response unique ID.
        example: 9e3c96b8-c4d7-496a-ab90-cc732b9b560e
        type: string
    type: object
  AsyncIDResponse:
    properties:
      ct:
        description: The content type.
        example: text/plain
        type: string
      error:
        description: 'An optional error message describing the error. Please refer
          to status listing above.

          '
        example: TIMEOUT
        type: string
      id:
        description: The unique ID of the asynchronous response.
        example: 9e3c96b8-c4d7-496a-ab90-cc732b9b560e
        type: string
      max-age:
        description: Determines how long this value stays valid in the cache, in seconds.
          0 means that the value is not stored in the cache.
        example: 60
        type: string
      payload:
        description: Requested data, base64 encoded.
        example: My4zMQ==
        type: string
      status:
        description: "\nStates whether sending a command to the device succeeded or\
          \ failed.\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n\
          \    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><b>200</b></td>\n\
          \      <td>Operation succeeded. The payload contains result of the operation\
          \ from the device.</td>\n    </tr>\n    <tr>\n      <td><b>400</b></td>\n\
          \      <td>The device rejected the request, possibly because it does not\
          \ support the request method.\n      See how the supported methods are\n\
          \      [configured for the device resources](https://www.pelion.com/docs/device-management/current/resources/index.html).</td>\n\
          \    </tr>\n    <tr>\n      <td><b>404</b></td>\n      <td>The device replied\
          \ that it does not have the requested resource.</td>\n    </tr>\n    <tr>\n\
          \      <td><b>412</b></td>\n      <td>Precondition failed and the operation\
          \ was not executed. The device responded with 4.12 CoAP\n      response\
          \ code. The device may reject a subscription request with this response\
          \ code.</td>\n    </tr>\n    <tr>\n      <td><b>413</b></td>\n      <td>Request\
          \ entity is too large and could not be delivered to the device.</td>\n \
          \   </tr>\n    <tr>\n      <td><b>415</b></td>\n      <td>The device does\
          \ not support the media type in the request.</td>\n    </tr>\n    <tr>\n\
          \      <td><b>429</b></td>\n      <td>An expired request was removed from\
          \ queue (REQUEST_EXPIRED),\n      the device requested deregistration (DEVICE_REMOVED_REGISTRATION),\n\
          \      or the device was suspended (DEVICE_BLOCKED). The request was never\
          \ delivered to the device.</td>\n    </tr>\n    <tr>\n      <td><b>502</b></td>\n\
          \      <td>The request to the device failed and the retry count was exceeded.\n\
          \      The last retry failed to establish TCP or TLS connection to the device.</td>\n\
          \    </tr>\n    <tr>\n      <td><b>503</b></td>\n      <td>The request to\
          \ the device failed and the retry count was exceeded.\n      The last retry\
          \ failed because the device is currently unavailable (NOT_CONNECTED).</td>\n\
          \    </tr>\n    <tr>\n      <td><b>504</b></td>\n      <td>The request to\
          \ the device failed and the retry count was exceeded.\n      The last retry\
          \ failed because the device did not respond in time according to the protocol-specific\n\
          \      retransmission logic (TIMEOUT).</td>\n    </tr>\n  </tbody>\n</table>\n"
        example: 200
        type: integer
    type: object
  AudienceItem:
    description: Audience item, device ID or endpoint name.
    pattern: ^ep:[a-zA-Z0-9 -]{1,57}$|^id:[0-9a-fA-F]{32}$
    type: string
  BadRequestErrorResponse:
    description: 400 Bad request response.
    properties:
      code:
        description: Response code. Always set to 400.
        enum:
        - 400
        type: integer
      fields:
        items:
          $ref: '#/definitions/BadRequestErrorResponseField'
        type: array
      message:
        description: A human-readable message with detailed info.
        type: string
      object:
        description: Always set to `error`.
        enum:
        - error
        type: string
      request_id:
        description: Request ID.
        type: string
      type:
        description: Error type. Always set to `validation_error`.
        enum:
        - validation_error
        type: string
    required:
    - object
    - message
    - request_id
    - type
    - code
    - fields
    type: object
  BadRequestErrorResponseField:
    description: Single field that failed validation.
    properties:
      message:
        description: A human-readable message with detailed validation error.
        type: string
      name:
        description: Name of the field that failed validation. If name is set to `body,`
          then the validation failed on request body.
        type: string
    required:
    - name
    - message
    type: object
  BillingReportRawDataResponse:
    description: The response includes the URL to download raw billing data.
    properties:
      filename:
        description: The filename of the raw billing data file to download. Contains
          file extensions.
        type: string
      object:
        description: API Resource name.
        type: string
      url:
        description: The URL to download raw billing data.
        type: string
    required:
    - object
    - url
    - filename
    type: object
  BootstrapRequestsCounter:
    description: The number of bootstrap requests received from devices.
    format: int64
    minimum: 0
    type: integer
  BootstrapsCounter:
    description: The total number of successful bootstrap operations in the requested
      time.
    format: int64
    minimum: 0
    type: integer
  BrandingColor:
    properties:
      color:
        description: The color given as name (purple) or as a hex code.
        example: '#f3f93e'
        type: string
        x-nullable: true
      object:
        description: 'Entity name: always ''branding_color'''
        enum:
        - branding_color
        readOnly: true
        type: string
      reference:
        description: Color name.
        enum: &id001
        - error_color
        - primary
        - secondary
        - success_color
        - warning_color
        - canvas_background
        - canvas_background_font_color
        - workspace_background
        - workspace_background_font_color
        - info_color
        - info_font_color
        - primary_font_color
        - secondary_font_color
        - error_font_color
        - success_font_color
        - warning_font_color
        type: string
      updated_at:
        description: Last update time in UTC.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        readOnly: true
        type: string
    type: object
  BrandingColorList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/BrandingColor'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return, or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  BrandingColorUpdate:
    properties:
      color:
        description: The color given as name (purple) or as a hex code.
        example: '#f3f93e'
        type: string
        x-nullable: true
      reference:
        description: Color name.
        enum: *id001
        type: string
    required:
    - reference
    type: object
  BrandingImage:
    properties:
      object:
        description: 'Entity name: always ''branding_image'''
        enum:
        - branding_image
        readOnly: true
        type: string
      reference:
        description: Name of the image.
        enum: &id026
        - brand_logo_portrait
        - brand_logo_square
        - brand_logo_landscape
        - brand_logo_email
        - desktop_background_landscape
        - desktop_background_square
        - desktop_background_portrait
        - carousel_image_portrait_0
        - carousel_image_portrait_1
        - carousel_image_portrait_2
        - carousel_image_portrait_3
        - carousel_image_portrait_4
        - carousel_image_portrait_5
        - carousel_image_portrait_6
        - carousel_image_portrait_7
        - carousel_image_portrait_8
        - carousel_image_portrait_9
        - carousel_image_square_0
        - carousel_image_square_1
        - carousel_image_square_2
        - carousel_image_square_3
        - carousel_image_square_4
        - carousel_image_square_5
        - carousel_image_square_6
        - carousel_image_square_7
        - carousel_image_square_8
        - carousel_image_square_9
        - carousel_image_landscape_0
        - carousel_image_landscape_1
        - carousel_image_landscape_2
        - carousel_image_landscape_3
        - carousel_image_landscape_4
        - carousel_image_landscape_5
        - carousel_image_landscape_6
        - carousel_image_landscape_7
        - carousel_image_landscape_8
        - carousel_image_landscape_9
        type: string
      static_uri:
        description: The static link to the image.
        example: https://static.mbed.com/123456789.jpg
        format: uri
        readOnly: true
        type: string
      updated_at:
        description: Last update time in UTC.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        readOnly: true
        type: string
    type: object
  BrandingImageList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/BrandingImage'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return, or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  BulkResponse:
    properties:
      account_id:
        description: ID
        example: 00005a4e027f0a580a01081c00000000
        type: string
      completed_at:
        description: 'The time the bulk creation task was completed.

          Null when creating bulk upload or delete.'
        format: date-time
        type: string
      created_at:
        description: The time of receiving the bulk creation task.
        format: date-time
        type: string
      errors_count:
        description: The number of enrollment identities with failed processing.
        example: 0
        type: integer
      errors_report_file:
        description: 'Link to error report file.

          Null when creating bulk upload or delete.'
        example: https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/errors_report.csv
        type: string
        x-nullable: true
      etag:
        description: etag
        example: '1'
        pattern: '[A-Za-z0-9]{0,256}'
        type: string
      full_report_file:
        description: 'Link to full report file.

          Null when creating bulk upload or delete.'
        example: https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/full_report.csv
        type: string
        x-nullable: true
      id:
        description: Bulk ID
        pattern: ^[A-Za-z0-9]{32}
        type: string
      object:
        enum:
        - enrollment-identity-bulk-uploads
        example: enrollment-identity-bulk-uploads
        type: string
      processed_count:
        description: The number of enrollment identities processed until now.
        example: 0
        type: integer
      status:
        default: new
        description: The state of the process is 'new' at the time of creation. If
          creation is still in progress, the state shows as 'processing'. When the
          request is fully processed, the state changes to 'completed'.
        enum:
        - new
        - processing
        - completed
        example: new
      total_count:
        description: Total number of enrollment identities found in the input CSV.
        example: 10
        type: integer
    required:
    - object
    - id
    - etag
    - created_at
    - account_id
    - status
    - total_count
    - processed_count
    - errors_count
    - completet_at
    - full_report_file
    - errors_report_file
    type: object
  BusinessModel:
    default: active_device_business_model
    description: Business model for this account. Manageable by the root admin only.
    enum:
    - active_device_business_model
    - api_calls_1_business_model
    example: api_calls_1_business_model
    type: string
  BusinessModelHistory:
    properties:
      business_model:
        $ref: '#/definitions/BusinessModel'
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
    type: object
  CampaignDeviceMetadata:
    properties:
      campaign:
        description: The device's campaign ID.
        example: 015bf72fccda00000000000100100280
        type: string
      created_at: &id014
        description: The time the entity was created.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      deployment_state:
        description: The state of the update campaign on the device.
        enum:
        - pending
        - updated_connector_channel
        - failed_connector_channel_update
        - deployed
        - manifestremoved
        - deregistered
        type: string
      description:
        description: Description.
        example: a description
        maxLength: 2000
        type: string
      device_id:
        description: The device ID.
        example: 015c2fec9bba0000000000010010036f
        type: string
      etag: &id015
        description: API resource entity version.
        example: '2017-05-22T12:37:58.753425Z'
        type: string
      id:
        description: The metadata record ID.
        example: 015c3029f6f7000000000001001000c3
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      mechanism:
        description: How the firmware is delivered (connector or direct).
        example: connector
        type: string
      mechanism_url:
        description: The Device Management Connect URL.
        type: string
      name:
        default: default_object_name
        description: The record name.
        maxLength: 128
        type: string
      object:
        description: 'The entity name: always ''update-campaign-device-metadata''.'
        example: update-campaign-device-metadata
        type: string
      updated_at: &id016
        description: The time the entity was updated.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
    type: object
  CampaignDeviceMetadataPage:
    properties:
      after:
        description: The entity ID to fetch after the given one.
        example: 'null'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/CampaignDeviceMetadata'
        type: array
      has_more:
        description: A flag indicating whether there are more results.
        example: 'false'
        type: boolean
      limit:
        description: How many objects to retrieve in the page. The minimum limit is
          2 and the maximum is 1000. Limit values outside of this range are set to
          the closest limit.
        example: '50'
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: 'The entity name: always ''list''.'
        example: list
        type: string
      order:
        description: 'The order of the records to return. Acceptable values: ASC,
          DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        description: The total number or records, if requested. It may be returned
          also for small lists.
        example: '1'
        type: integer
    type: object
  CampaignMetrics:
    properties:
      created_at:
        description: The time the metrics were created.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      failed_count:
        description: Running total of devices that could not be updated.
        example: '0'
        format: int32
        type: integer
      object:
        description: 'Entity name: always ''update-campaign-metrics''.'
        example: update-campaign-metrics
        type: string
      pending_count:
        description: Running total of devices that have yet to receive an update or
          are applying an update.
        example: '5'
        format: int32
        type: integer
      skipped_count:
        description: Running total of devices that were skipped.
        example: '5'
        format: int32
        type: integer
      success_count:
        description: Running total of successfully updated devices.
        example: '90'
        format: int32
        type: integer
      total_count:
        description: Number of devices in the campaign.
        example: '100'
        format: int32
        type: integer
    type: object
  CertificateEnrollment:
    properties:
      certificate_name:
        description: The certificate name.
        example: customer.dlms
        maxLength: 50
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2017-01-01T00:00:00Z'
        format: date-time
        type: string
      device_id:
        description: The device ID.
        example: 01625daa23230a580a0100bd00000000
        type: string
      enroll_result:
        description: The result of certificate enrollment request.
        enum:
        - success
        - failure
        example: success
        type: string
      enroll_result_detail:
        description: Additional information in case of failure.
        example: The device is currently processing too many certificate renewals.
        type: string
      enroll_status:
        description: The status of certificate enrollment request.
        enum:
        - new
        - completed
        type: string
      etag:
        description: Entity instance signature.
        example: '1'
        type: string
      id:
        description: The certificate enrollment ID.
        example: 01612df56f3b0a580a010fc700000000
        type: string
      object:
        enum:
        - certificate-enrollment
        type: string
      updated_at:
        description: Update UTC time RFC3339.
        example: '2017-01-01T00:00:00Z'
        format: date-time
        type: string
    required:
    - created_at
    - etag
    - id
    - device_id
    - certificate_name
    type: object
  CertificateEnrollmentListResponse:
    properties:
      after:
        description: The entity ID to fetch after the given one.
        example: 01625daa23230a580a0100bd00000000
        type: string
      data:
        description: List of certificate enrollments.
        items:
          $ref: '#/definitions/CertificateEnrollment'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        type: boolean
      limit:
        description: The number of results to return.
        format: int32
        type: integer
      object:
        description: Describes the type of objects in the list.
        enum:
        - list
        type: string
      order:
        description: 'Record order based on creation time. Acceptable values: ASC,
          DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records.
        format: int32
        type: integer
    type: object
  CertificateGenerationReq:
    description: Generate a new service provider certificate.
    properties:
      algorithm:
        description: The algorithm and its key size used for generating the certificate.
          Defaults to RSA2048.
        enum:
        - RSA2048
        - RSA3072
        - EC224
        - EC256
        - EC384
        - EC521
        - ECDSA224
        - ECDSA256
        - ECDSA384
        - ECDSA521
        type: string
      validity:
        description: Validity for the certificate in days.
        format: int32
        type: integer
    type: object
  CertificateIssuerConfigListResponse:
    properties:
      after: &id002
        description: An offset token for current page.
        example: '01631667477600000000000100100374'
        type: string
      data:
        description: List of certificate issuers.
        items:
          $ref: '#/definitions/CertificateIssuerConfigResponse'
        type: array
      has_more: &id003
        description: More results are available.
        example: false
        type: boolean
      limit: &id004
        description: The number of results to return (2-1000). Values outside of this
          range are set to the closest limit.
        example: 50
        maximum: 1000
        minimum: 2
        type: integer
      object: &id005
        description: The type of this API object is `list`.
        example: list
        type: string
      order: &id006
        description: Record order based on creation time.
        example: DESC
        type: string
      total_count: &id007
        example: 1
        format: integer
        type: integer
    type: object
  CertificateIssuerConfigRequest:
    properties:
      certificate_issuer_id:
        description: 'Certificate issuer ID.

          For LwM2M, may be null if Device Management internal certificate issuer
          is used.'
        example: 01648415a2a30242ac18000500000000
        type: string
        x-nullable: true
    type: object
  CertificateIssuerConfigResponse:
    properties:
      certificate_issuer_id:
        description: 'Certificate issuer ID.

          Null if Device Management internal HSM is used.'
        example: 01648415a2a30242ac18000500000000
        type: string
        x-nullable: true
      created_at:
        description: Created UTC time RFC3339.
        example: '2017-01-01T00:00:00Z'
        format: date-time
        type: string
      etag:
        description: Entity instance signature.
        example: '1'
        type: string
      id:
        description: Certificate issuer ID. configuration.
        example: 01648415a2a30242ac18000500000000
        type: string
      is_custom:
        example: true
        type: boolean
      object:
        enum:
        - certificate-issuer-configuration
        type: string
      reference:
        description: The certificate name to which the certificate issuer configuration
          applies.
        example: customer.dlms
        type: string
      updated_at:
        description: Updated UTC time RFC3339.
        example: '2017-02-01T00:00:00Z'
        format: date-time
        type: string
    type: object
  CertificateIssuerInfo:
    properties:
      created_at:
        description: Creation UTC time RFC3339.
        example: '2017-01-01T00:00:00Z'
        format: date-time
        type: string
      description:
        description: General description for the certificate issuer.
        example: GlobalSign sample issuer
        maxLength: 100
        type: string
        x-nullable: true
      etag:
        description: Entity instance signature.
        example: '1'
        type: string
      id:
        description: Certificate issuer ID.
        example: 01234567890ABCDEF01234567890ABCDEF
        type: string
      issuer_attributes:
        additionalProperties: &id008
          type: string
        description: 'General attributes for connecting the certificate issuer.

          When the issuer_type is GLOBAL_SIGN, the value is empty.

          When the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.'
        example: &id009 {}
        type: object
      issuer_type:
        description: "Certificate issuer type.\n- GLOBAL_SIGN:\n  Certificates are\
          \ issued by GlobalSign service. You must provide your own GlobalSign account\
          \ credentials.\n- CFSSL_AUTH:\n  Certificates are issued by CFSSL authenticated\
          \ signing service.\n  You must provide your own CFSSL host_url and credentials."
        enum:
        - GLOBAL_SIGN
        - CFSSL_AUTH
        example: GLOBAL_SIGN
        type: string
      name:
        description: Certificate issuer name, unique per account.
        example: GS Issuer
        maxLength: 50
        type: string
      object:
        enum:
        - certificate-issuer
        type: string
    required:
    - issuer_type
    type: object
  CertificateIssuerInfoListResponse:
    properties:
      after: *id002
      data:
        description: List of certificate issuers.
        items:
          $ref: '#/definitions/CertificateIssuerInfo'
        type: array
      has_more: *id003
      limit: *id004
      object: *id005
      order: *id006
      total_count: *id007
    type: object
  CertificateIssuerRequest:
    example:
      description: Sample GlobalSign certificate issuer.
      issuer_attributes: null
      issuer_credentials:
        api_key: e510e289e6cd8947
        api_secret: a477a8393d17a55ecb2ba6a61f58feb84770b621
        client_certificate: '"-----BEGIN CERTIFICATE-----MIIC7zCCAdegAwIBAgIJANTlU4x5S74VMA0GCSqGSIb3DQEBCwUAMA4xDDAKBgNVBAoMA0FybTAeFw0xODAzMTExMzE5MTFaFw0xOTAzMTExMzE5MTFaMA4xDDAKBgNVBAoMA0FybTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJWLStsVMJULZtxdieK9qocM4ymDXMaAusmd9TZLzBgznKQe/CW2yxyA8C8K5e6MmvMYGeKDd4Lkw/ezOj2OsUj2xzNIltUxpGi/GhsNYiN/khNJa/Y1SllLoihJAPm/xbMywOBRu/dM88PiJsNZccOk0I8DYvvyAs9wCTkbKLnfHygl98DCRqXw7nBCplU6F03qpUd/4BUtMtugyqt7yboGH+4YewnUh4Yh4QNOJIvE93Ob++eKjO3pIOYEhQmUxzOLaLNuWXlv2l1WuN281hUP4XBcV8mCzRQfTBBDYTWt+5BEWoLOUkXjW0Um6EAaN3usph1IKDEH6Ia5VHP4Pj0CAwEAAaNQME4wHQYDVR0OBBYEFLsfYZxFcQTjPJKYMjHI2In316fmMB8GA1UdIwQYMBaAFLsfYZxFcQTjPJKYMjHI2In316fmMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAFl08GFsIkkUs6M7QgCWmsnwP6PtD8V87wM1GAqQQlOOeztaeRR2TEOeYiKRZQugYszJ/FVfVp4ggqzepJMn6UZ42j5nmSJs+6t79i23QAzX1zNQ354lr/t7kt3fMdhuL3AP0oZGzdy+EnXXiWeAD22UwzvVmLt38ypJIl+pmTsx9jJy4PN7yoRgtP9k+50m3X6oDxVruehC/JPSeTvEhqyLW3fLcG6IoJMX3vIwfO9uXbFJumTowQeViNJJ9duWvD2KBXn/muOOBe97TPuvAms1gOtMmmPT9/jpo9b4+NsfFiAN6bMici81aIKZzLC+lLGOUmR2fFJyM5OsVLxKsko=-----END
          CERTIFICATE-----"

          '
        passphrase: helloworld
        private_key: '"-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info:
          DES-EDE3-CBC,CCAC26A4133947CB\n\np3KJ4FI3wcz3I0MtiLkrznkjWFvprVmoNywySUGb5IqZViJZqCMEsyU9a9iDsSfP\nZ07cg9GviV21WYIPSxZOQrpy1g1VWILzFnH+J6z8dSH4mxXh0PwdOzYgAeqkrIVM\nJ7KRm6t222dZFjjXK3eEcLmBLGo29XwVJxKHx+l4++gU1LZmeHZR5M8fJ4jejUly\n7sqzPlmRF0N3I4lwKVj+PfQTVz43QoCnpxOjuSEL4liBrc2agY2xH1O0PFyHimz9\n3XM9HR/iuPHW0N2D+NPjXlWKacerupH9d4i9IYIagzB+HTgej8limdo03GmmxcZ6\nYNa58n5yQSaqu0TPRU9DsrKeGjadHTlZQGdzfq1SWsROCnHLrXFKE2ozIG3+hxA5\nujBF/QWpX5+inXUwDJhBxp8isHbPEnBEUUd6ZRzCTjvN0jaUti5B9yFhO2G6mbE8\nCvhyzQK8oJqsjZXnlcpPf95LP+9XbcCDjLSIaWJstzXO9tPiv6+x1MVWmivtRHcC\nSTzpx8jAGCiG6ejLqWB87ZXiZm7ujlCBheHSf5RHwNHhUvoP2JEYalDDRxjcDMSx\n4uV42Np4yJlIQEDlGHcBlXoL7vEukFpuWgkYdpcZy/Ou9qz8mXrpLcu8C8MhLmSC\nixGoR5iRhV7cxoHLyuCzj87eYEA73Xu238DQorSEEuiVFnLzQ2+PJMs4qoI14q/L\notlBDz+Ko6DrU/EZROYmiqMkLKXR2sx9zNAJwPYRs6nSH08tZ3dwqzZbgtP3Wazi\nhLWHt5/En7wQRA5a+/dDEHXSoLvvSQ9jvhclhWf+eCYuq2eH+g54oyJGRSY+8GV7\nujhLxkzl/3OZdhZPWoz4U13KpbSTcNWu5Y7oGDoabw19UbvqmLf1PJkpDH/tQgzB\nxYtsLBRUcofpYoeIiIxfAA4do5WilJc8xqrGhkE4WcHfY24HXAiOvsjbxV+BRprX\n1jtgJpV/9nJESMap+8PxipGUFRGjB83/uwJaa6mLftEKflX8i4MZ+HnqraXERsqA\nWRUcDHIWmFfpzIB3iNuxawVvPH8NdCSPmQ9qTb8Cozl0AuOK2E9S+ke8oiYQScWR\nLdu+zhej7GjuQ9R+Ub+wPWqvOA5qLXejqnCexVScDUuN+z9JWM3N2FG1MwxhAzhP\ndEfoQHoBn6uyOmrVGP6fosV3chqhPoec42KeOAm1xDvx692isaIy1jPgIyPxeqhm\n2Tw4E+02R7dlP8Ljf7JzfLm4oKpWHWlcHeqg24x6lY/wXU1RBcWaTa0AQUwoGm2m\nIQCPfIqOEv/QC2HpO7SVCYkl65KwR0oTd1AzYxdxEq3xHQbh69EL0FGZPVxVCPI+\nhEAyifKy1/tm3l91Rf/kGpHY7nIQKCXH49tmFwix8gke2nZJmRgX7/zAdMOAKeKH\nAaIl4nQtv14EbaasMgnn9qgaDYnWzaReEob2QlQ/WYlTor61+KFpGtcf9jAkgudT\n2op+4CF7wT2+aTXdtkVWfmv++iB8GnlqZdxLvyG1cTYjjYHVFbMSWQnxzQqiE2ms\nQgp+byjWCumpsWTMdTO+d9NkDOo80vDpaRxEgebmhJ0MbX+eFjBgVg==\n-----END
          RSA PRIVATE KEY-----"'
      issuer_type: GLOBAL_SIGN
      name: GS Issuer
    properties:
      description:
        description: General description of the certificate issuer.
        maxLength: 100
        type: string
        x-nullable: true
      issuer_attributes:
        additionalProperties: *id008
        description: 'General attributes for connecting the certificate issuer.

          When the issuer_type is GLOBAL_SIGN, the value is empty.

          When the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.'
        example: *id009
        type: object
      issuer_credentials:
        additionalProperties: &id010
          type: string
        description: 'The credentials required to connect to the certificate issuer.

          When the issuer_type is GLOBAL_SIGN, see definition of GlobalSignCredentials.

          When the issuer_type is CFSSL_AUTH, see definition of CfsslAuthCredentials.'
        example: &id011 {}
        type: object
      issuer_type:
        description: "Certificate issuer type.\n- GLOBAL_SIGN:\n  Certificates are\
          \ issued by GlobalSign service. You must provide your own GlobalSign account\
          \ credentials.\n- CFSSL_AUTH:\n  Certificates are issued by CFSSL authenticated\
          \ signing service.\n  You must provide your own CFSSL host_url and credentials."
        enum:
        - GLOBAL_SIGN
        - CFSSL_AUTH
        type: string
      name:
        description: Certificate issuer name, unique per account.
        maxLength: 50
        type: string
    required:
    - name
    - issuer_type
    - issuer_credentials
    type: object
  CertificateIssuerUpdateRequest:
    example:
      description: Sample GlobalSign certificate issuer - updated.
      name: GlobalSign Issuer
    properties:
      description:
        description: General description of the certificate issuer.
        maxLength: 100
        type: string
        x-nullable: true
      issuer_attributes:
        additionalProperties: *id008
        description: 'General attributes for connecting the certificate issuer.

          When the issuer_type is GLOBAL_SIGN, the value is empty.

          When the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.'
        example: *id009
        type: object
      issuer_credentials:
        additionalProperties: *id010
        description: 'The credentials required to connect to the certificate issuer.

          When the issuer_type is GLOBAL_SIGN, see definition of GlobalSignCredentials.

          When the issuer_type is CFSSL_AUTH, see definition of CfsslAuthCredentials.'
        example: *id011
        type: object
      name:
        description: Certificate issuer name.
        maxLength: 50
        type: string
    type: object
  CertificateIssuerVerifyResponse:
    properties:
      message:
        description: Provides details in case of failure.
        example: Message describing the verification failure
        type: string
      successful:
        description: Indicates whether the certificate issuer was verified successfully.
        example: false
        type: boolean
    type: object
  CfsslAttributes:
    description: Describes the attributes required to connect to the CFSSL server.
    properties:
      cfssl_label:
        description: The label that is used by CFSSL when creating the certificate.
        type: string
      cfssl_profile:
        description: The profile that is configured on the CFSSL server and used by
          CFSSL when creating the certificate.
        type: string
      host_url:
        description: The URL to connect to the CFSSL server.
        example: http://my.cfssl.service:5555
        type: string
    required:
    - host_url
    type: object
  CfsslAuthCredentials:
    description: Describes the credentials required when using CFSSL authenticated
      signing.
    properties:
      hmac_hex_key:
        description: 'The key that is used to compute the HMAC of the request using
          the HMAC-SHA-256 algorithm.

          Must contain an even number of hexadecimal characters.'
        example: 0010203ABCD708EF
        maxLength: 64
        pattern: ^([a-fA-F0-9][a-fA-F0-9]){1,32}$
        type: string
    required:
    - hmac_hex_key
    type: object
  ChannelMetadata:
    properties:
      delivery_mechanism:
        description: Channel delivery mechanism.
        enum:
        - CALLBACK
        - LONG_POLLING
        - WEB_SOCKET
        example: CALLBACK
        type: string
    type: object
  CreateCertificateIssuerConfig:
    properties:
      certificate_issuer_id:
        description: Certificate issuer ID.
        example: 01648415a2a30242ac18000500000000
        maxLength: 32
        type: string
        x-nullable: true
      reference:
        description: 'The certificate name, as created in the factory, to which the
          certificate issuer configuration applies.

          The following names are reserved and cannot be configured: LwM2M, BOOTSTRAP.'
        example: customer.dlms
        maxLength: 100
        pattern: (?!mbed\.)[\w-_.]{1,100}
        type: string
    required:
    - reference
    - certificate_issuer_id
    type: object
  CreateTrustAnchorRequest:
    properties:
      description:
        description: The description of the new trust anchor key pair.
        format: Free text
        maxLength: 256
        minLength: 1
        type: string
    required:
    - description
    type: object
  CreateTrustAnchorResponse:
    properties:
      created_at: &id017
        description: Creation UTC time.
        example: '2017-01-01T00:00:00Z'
        format: date-time
        type: string
      description:
        description: Notes about the trust anchor.
        format: free text
        maxLength: 256
        minLength: 1
        type: string
      etag: &id018
        description: Entity instance signature, 1 or Unix timestamp of last customer
          update.
        example: '1'
        type: string
      fingerprint:
        description: The SHA256 of the trust anchor public key; the prefix 'mbed.ta.'
          followed by the trust anchor public key as a SHA256 hash in Base64-encoded
          DER format.
        format: byte
        type: string
      id: &id019
        description: The ID of the entity.
        example: 01612df56f3b0a580a010fc700000000
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      object: &id020
        description: The API resource entity
        example: trust-anchor
        type: string
      public_key:
        description: The generated trust anchor public key in PEM format.
        format: byte
        type: string
      public_key_der:
        description: The generated trust anchor public key in Base64-encoded DER format.
        format: byte
        type: string
      updated_at: &id021
        description: Update UTC time.
        example: '2017-01-01T00:00:00Z'
        format: date-time
        type: string
    type: object
  CredentialsResponseData:
    properties:
      certificate:
        description: PEM-format X.509 server certificate used to validate the server
          certificate received during the TLS/DTLS handshake.
        type: string
      url:
        description: Server URI that the client connects to.
        type: string
    type: object
  DeveloperCertificateRequestData:
    properties:
      description:
        description: Description for the developer certificate. Maximum 500 characters.
          Please see [TrustedCertificateReq](https://www.pelion.com/docs/device-management-api/account-management/).
        maxLength: 500
        type: string
        x-nullable: true
      name:
        description: Name of the developer certificate. Must be unique. Maximum 100
          characters. Please see [TrustedCertificateReq](https://www.pelion.com/docs/device-management-api/account-management/).
        maxLength: 100
        type: string
    required:
    - name
    type: object
  DeveloperCertificateResponseData:
    properties:
      account_id:
        description: Account to which the developer certificate belongs.
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        format: date-time
        type: string
      description:
        description: Description for the developer certificate.
        type: string
        x-nullable: true
      developer_certificate:
        description: PEM-format X.509 developer certificate.
        type: string
      developer_private_key:
        description: PEM-format developer private key associated with the certificate.
        type: string
      etag:
        description: API resource entity version.
        type: string
      id:
        description: ID that uniquely identifies the developer certificate.
        type: string
      name:
        description: Name of the developer certificate.
        type: string
      object:
        description: 'Entity name: always `trusted-cert`.'
        type: string
      security_file_content:
        description: Content of the `security.c` file flashed to the device to provide
          security credentials.
        type: string
    type: object
  DeviceBlockCategory:
    properties:
      description:
        example: Suspended for maintenance.
        type: string
      object:
        description: 'Entity name: always ''device-block-category''.'
        example: device-block-category
        type: string
      reference:
        example: maintenance
        type: string
      updated_at:
        format: date-time
        type: string
    type: object
  DeviceBlockCategoryPage:
    properties:
      after:
        description: An offset token for current page.
        type: string
      data:
        items:
          $ref: '#/definitions/DeviceBlockCategory'
        type: array
      has_more:
        description: More results are available.
        example: false
        type: boolean
      limit:
        description: How many objects to retrieve in the page (2-1000). Limit values
          outside of this range are set to the closest limit.
        example: 50
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: The type of this API object is 'list'.
        example: list
        type: string
      order:
        description: Order of entries based on creation time.
        example: DESC
        type: string
      total_count:
        example: 1
        format: integer
        type: integer
    type: object
  DeviceData:
    properties:
      account_id:
        description: The ID of the associated account.
        example: '00000000000000000000000000000000'
        type: string
      auto_update:
        description: 'DEPRECATED: Mark this device for automatic firmware update.'
        type: boolean
      bootstrap_expiration_date:
        description: The expiration date of the certificate used to connect to bootstrap
          server.
        format: date
        type: string
        x-nullable: true
      bootstrapped_timestamp:
        description: The timestamp of the device's most recent bootstrap process.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      ca_id:
        description: The certificate issuer's ID.
        example: '00000000000000000000000000000000'
        maxLength: 500
        type: string
      component_attributes:
        additionalProperties:
          maxLength: 128
          type: string
        description: Up to ten custom key-value attributes. Note that keys cannot
          begin with a number. Both keys and values are limited to 128 characters.
          Updating this field replaces existing contents.
        example:
          key: value
        maxProperties: 10
        type: object
      connector_expiration_date:
        description: The expiration date of the certificate used to connect to LwM2M
          server.
        format: date
        type: string
        x-nullable: true
      created_at:
        description: The timestamp of when the device was created in the device directory.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      custom_attributes:
        additionalProperties:
          maxLength: 128
          pattern: ^[A-Za-z].*
          type: string
        description: Up to five custom key-value attributes. Note that keys cannot
          begin with a number. Both keys and values are limited to 128 characters.
          Updating this field replaces existing contents.
        example:
          key: value
        maxProperties: 5
        type: object
      deployed_state:
        description: 'DEPRECATED: The state of the device''s deployment.'
        enum:
        - development
        - production
        type: string
      deployment:
        description: 'DEPRECATED: The last deployment used on the device.'
        example: ''
        type: string
      description:
        description: The description of the device.
        example: Temperature measuring device
        maxLength: 2000
        type: string
      device_class:
        description: An ID representing the model and hardware revision of the device.
        example: ''
        maxLength: 32
        type: string
      device_execution_mode: &id012
        default: 0
        description: "The execution mode from the certificate of the device. Defaults\
          \ to inheriting from host_gateway device.\nPermitted values:\n  - 0 - Unspecified\
          \ execution mode (default if host_gateway invalid or not set). The device\
          \ firmware uses a certificate that is not identified as a developer or production\
          \ certificate.\n  - 1 - Development device. The device firmware uses a developer\
          \ certificate to communicate with Device Management.\n  - 5 - Production\
          \ device. The device firmware uses a factory-generated certificate to communicate\
          \ with Device Management."
        enum:
        - 0
        - 1
        - 5
        example: 0
        type: integer
      device_key:
        description: The fingerprint of the device certificate.
        example: 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
        maxLength: 512
        type: string
      endpoint_name:
        description: The endpoint name given to the device. The endpoint_name is from
          the device certificate and is set by factory tool.
        example: 00000000-0000-0000-0000-000000000000
        readOnly: true
        type: string
      endpoint_type:
        description: The endpoint type of the device. For example, the device is a
          gateway.
        example: ''
        maxLength: 64
        type: string
      enrolment_list_timestamp:
        description: The claim date/time.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        description: The entity instance signature.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      firmware_checksum:
        description: The SHA256 checksum of the current firmware image.
        example: '0000000000000000000000000000000000000000000000000000000000000000'
        type: string
      groups:
        description: An array containing an ID of each group this device belongs to.
        items:
          example: '00000000000000000000000000000000'
          type: string
        type: array
      host_gateway:
        description: The ID of the host gateway, if appropriate. A device behind Edge
          has this host_gateway set.
        example: ''
        type: string
      id:
        description: The ID of the device. The device ID is used across all Device
          Management APIs.
        example: '00000000000000000000000000000000'
        type: string
      issuer_fingerprint: &id013
        description: SHA256 fingerprint of the certificate used to validate the signature
          of the device certificate.
        example: C42EDEFC75871E4CE2146FCDA67D03DDA05CC26FDF93B17B55F42C1EADFDC322
        pattern: '[A-Fa-f0-9]{64}'
        type: string
        x-nullable: true
      last_operator_suspended_category:
        description: The reference of the block category.
        example: maintenance
        pattern: '[a-f0-9_]{32}'
        type: string
      last_operator_suspended_description:
        description: The most recent description why the device was suspended or returned
          to service.
        example: Suspended for maintenance.
        maxLength: 2000
        type: string
      last_operator_suspended_updated_at:
        description: The timestamp of the most recent suspension activity.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      last_system_suspended_category:
        description: The reference of the block category.
        example: maintenance
        pattern: '[a-f0-9_]{32}'
        type: string
      last_system_suspended_description:
        description: The most recent description of why the device was blocked or
          unblocked by the system.
        example: A certificate in the device's certificate chain was blacklisted by
          the system.
        maxLength: 2000
        type: string
      last_system_suspended_updated_at:
        description: The timestamp of the most recent system block activity.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      lifecycle_status:
        description: 'The lifecycle status of the device.

          * Enabled: The device is allowed to connect to Pelion Device Management.

          * Blocked: The device is prevented from connecting to Pelion Device Management.
          Device can be, for example, ''suspended''.'
        enum:
        - enabled
        - blocked
        example: enabled
        type: string
      manifest:
        description: 'DEPRECATED: The URL for the current device manifest.'
        example: ''
        type: string
      manifest_timestamp:
        description: The timestamp of the current manifest version.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      mechanism:
        description: 'NOT USED: The ID of the channel used to communicate with the
          device.'
        enum:
        - connector
        - direct
        type: string
      mechanism_url:
        description: 'NOT USED: The address of the connector to use.'
        example: ''
        type: string
      name:
        description: The name given by the web application for the device. Device
          itself provides only the endpoint_name.
        example: 00000000-0000-0000-0000-000000000000
        maxLength: 128
        type: string
      net_id:
        default: ''
        description: Private network identifier. Used to group nodes connected to
          a specific border router.
        example: 0000:0000:0000:0000:0000:0000:0000:0000
        maxLength: 40
        type: string
      object:
        description: The API resource entity.
        example: device
        type: string
      operator_suspended:
        description: Device has been suspended by operator.
        type: boolean
      serial_number:
        description: The [serial number](https://www.pelion.com/docs/device-management-provision/latest/provisioning-info/lwm2m-device-object.html#serial-number)
          of the device. The serial number is injected by the factory tool during
          manufacturing.
        example: 00000000-0000-0000-0000-000000000000
        type: string
      state:
        description: 'The current state of the device.

          * Unenrolled: The device has been created, but has not yet bootstrapped
          or connected to Device Management.

          * Cloud_enrolling: The device is bootstrapping for the first time. This
          state is set only while bootstrapping is in progress. For example, an external
          CA gives an error, and the device tries to bootstrap again after few seconds.

          * Bootstrapped: The device has bootstrapped, and has credentials to connect
          to Device Management.

          * Registered: The device has registered with Pelion Device Management. [Device
          commands](https://www.pelion.com/docs/device-management-api/connect/) can
          be queued. The device sends events for [subscribed](https://www.pelion.com/docs/device-management/current/resources/handle-resource-webapp.html)
          resources.

          * Deregistered: The device has requested deregistration, or its registration
          has expired.'
        enum:
        - unenrolled
        - cloud_enrolling
        - bootstrapped
        - registered
        - deregistered
        type: string
      system_suspended:
        description: Is the device suspended by the system?
        type: boolean
      updated_at:
        description: The time this data object was updated.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      vendor_id:
        description: The device vendor ID.
        example: 00000000-0000-0000-0000-000000000000
        type: string
  DeviceDataPostRequest:
    properties:
      auto_update:
        description: 'DEPRECATED: Mark this device for automatic firmware update.'
        type: boolean
      bootstrap_expiration_date:
        description: The expiration date of the certificate used to connect to bootstrap
          server.
        example: '2017-05-22'
        format: date
        type: string
        x-nullable: true
      ca_id:
        description: The certificate issuer's ID.
        example: '00000000000000000000000000000000'
        maxLength: 500
        type: string
      connector_expiration_date:
        description: The expiration date of the certificate used to connect to the
          LwM2M server.
        example: '2017-05-22'
        format: date
        type: string
        x-nullable: true
      custom_attributes:
        additionalProperties:
          maxLength: 128
          pattern: ^[A-Za-z].*
          type: string
        description: Up to five custom key-value attributes. Note that keys cannot
          begin with a number. Both keys and values are limited to 128 characters.
          Updating this field replaces existing contents.
        example:
          key: value
        maxProperties: 5
        type: object
      deployment:
        description: 'DEPRECATED: The last deployment used on the device.'
        example: ''
        type: string
      description:
        description: The description of the device.
        example: ''
        maxLength: 2000
        type: string
      device_class:
        description: An ID representing the model and hardware revision of the device.
        maxLength: 32
        type: string
      device_execution_mode: *id012
      device_key:
        description: The fingerprint of the device certificate.
        example: 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
        maxLength: 512
        type: string
      endpoint_name:
        description: The endpoint name given to the device.
        example: 00000000-0000-0000-0000-000000000000
        maxLength: 64
        type: string
      endpoint_type:
        description: The endpoint type of the device. For example, the device is a
          gateway.
        example: ''
        maxLength: 64
        type: string
      host_gateway:
        description: The ID of the host gateway, if appropriate.
        example: ''
        type: string
      issuer_fingerprint: *id013
      manifest:
        description: 'DEPRECATED: The URL for the current device manifest.'
        example: ''
        type: string
      mechanism:
        description: The ID of the channel used to communicate with the device.
        enum:
        - connector
        - direct
        type: string
      mechanism_url:
        description: The address of the connector to use.
        example: ''
        type: string
      name:
        description: The name of the device.
        example: 00000000-0000-0000-0000-000000000000
        maxLength: 128
        type: string
      serial_number:
        description: The serial number of the device.
        example: 00000000-0000-0000-0000-000000000000
        maxLength: 64
        type: string
      state:
        description: The current state of the device.
        enum:
        - unenrolled
        - cloud_enrolling
        - bootstrapped
        - registered
        - deregistered
        type: string
      vendor_id:
        description: The device vendor ID.
        example: 00000000-0000-0000-0000-000000000000
        maxLength: 255
        type: string
  DeviceDataPutRequest:
    properties:
      auto_update:
        description: 'DEPRECATED: Mark this device for automatic firmware update.'
        type: boolean
      ca_id:
        description: 'The certificate issuer''s ID. WARNING: This value comes from
          the device, and should not be changed via the API.'
        example: '00000000000000000000000000000000'
        maxLength: 500
        type: string
      custom_attributes:
        additionalProperties:
          maxLength: 128
          pattern: ^[A-Za-z].*
          type: string
        description: Up to five custom key-value attributes. Note that keys cannot
          begin with a number. Both keys and values are limited to 128 characters.
          Updating this field replaces existing contents.
        example:
          key: value
        maxProperties: 5
        type: object
      description:
        description: The description of the device.
        example: ''
        maxLength: 2000
        type: string
      device_key:
        description: 'The fingerprint of the device certificate. WARNING: This value
          comes from the device, and should not be changed via the API.'
        example: 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
        maxLength: 512
        type: string
      endpoint_name:
        description: 'The endpoint name given to the device. WARNING: This value comes
          from the device, and should not be changed via the API.'
        example: 00000000-0000-0000-0000-000000000000
        maxLength: 64
        readOnly: true
        type: string
      endpoint_type:
        description: The endpoint type of the device. For example, the device is a
          gateway.
        example: ''
        maxLength: 64
        type: string
      host_gateway:
        description: The ID of the host gateway, if appropriate.
        example: ''
        type: string
      name:
        description: The name of the device.
        example: 00000000-0000-0000-0000-000000000000
        maxLength: 128
        type: string
  DeviceEqNeqFilter:
    properties:
      account_id:
        type: string
      auto_update:
        type: boolean
      bootstrap_expiration_date:
        example: '2017-05-22'
        format: date
        type: string
      bootstrapped_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      ca_id:
        type: string
      component_attributes:
        additionalProperties:
          type: string
        type: object
      connector_expiration_date:
        example: '2017-05-22'
        format: date
        type: string
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      custom_attributes:
        additionalProperties:
          type: string
        type: object
      deployed_state:
        type: string
      deployment:
        type: string
      description:
        type: string
      device_class:
        type: string
      device_execution_mode:
        type: integer
      device_key:
        type: string
      endpoint_name:
        type: string
      endpoint_type:
        type: string
      enrolment_list_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      firmware_checksum:
        type: string
      host_gateway:
        type: string
      id:
        type: string
      manifest:
        type: string
      manifest_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      mechanism:
        type: string
      mechanism_url:
        type: string
      name:
        type: string
      serial_number:
        type: string
      state:
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      vendor_id:
        type: string
    type: object
  DeviceEventData:
    properties:
      changes:
        additionalProperties:
          type: object
        example: {}
        type: object
        x-deprecation:
          comment: This field is not used.
          end_of_life_at: '2020-01-15T14:55:20+00:00'
          issued_at: '2019-01-15T14:55:20+00:00'
          links: []
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      data:
        additionalProperties:
          type: string
        description: Additional data relevant to the event.
        example:
          campaign_id: '00000000000000000000000000000000'
        type: object
      date_time:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      description:
        example: Device record created
        type: string
      device_id:
        example: '00000000000000000000000000000000'
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      event_type:
        description: Event code
        example: UPD2_100
        maxLength: 100
        type: string
      event_type_category:
        description: Category code that groups the event type by a summary category.
        example: FAIL_MANIFEST_REJECTED
        type: string
      event_type_description:
        description: Generic description of the event.
        example: FAIL
        type: string
      id:
        example: '00000000000000000000000000000000'
        type: string
      object:
        description: The API resource entity.
        example: device-event
        type: string
      state_change:
        type: boolean
    required:
    - date_time
    - id
  DeviceEventEqNeqFilter:
    properties:
      date_time:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      description:
        type: string
      device_id:
        type: string
      event_type:
        type: string
      id:
        type: string
      state_change:
        type: boolean
  DeviceEventGteLteFilter:
    properties:
      date_time:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  DeviceEventInNinFilter:
    properties:
      date_time:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      description:
        type: string
      device_id:
        type: string
      event_type:
        type: string
      id:
        type: string
      state_change:
        type: boolean
  DeviceEventPage:
    properties:
      after:
        example: null
        type: string
      data:
        example: '[]'
        items:
          $ref: '#/definitions/DeviceEventData'
        type: array
      has_more:
        example: false
        type: boolean
      limit:
        example: 1000
        type: integer
      object:
        example: list
        type: string
      order:
        example: DESC
        type: string
      total_count:
        example: 1
        type: integer
  DeviceGroup:
    properties:
      created_at:
        description: The time the group was created.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      custom_attributes: &id028
        additionalProperties:
          maxLength: 128
          pattern: ^[A-Za-z].*
          type: string
        description: Up to ten custom key-value attributes. Keys cannot begin with
          a number. Both key and value are limited to 128 characters. Updating this
          field replaces existing contents.
        example:
          key: value
        maxProperties: 10
        type: object
      description: &id029
        description: The description of the group.
        example: Devices on the factory floor.
        maxLength: 1024
        type: string
      devices_count:
        description: The number of devices in this group.
        example: 10
        type: integer
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        description: The group ID.
        example: 015c3029f6f7000000000001001000c3
        type: string
      name: &id030
        description: Name of the group.
        example: My devices
        maxLength: 128
        type: string
      object:
        description: 'Entity name: always `device-group`.'
        example: device-group
        type: string
      updated_at:
        description: The time this object was updated.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
    type: object
  DeviceGroupManipulation:
    properties:
      device_id:
        example: '00000000000000000000000000000000'
        type: string
    required:
    - device_id
    type: object
  DeviceGroupPage:
    properties:
      after:
        description: An offset token for current page.
        example: '01631667477600000000000100100374'
        type: string
      data:
        items:
          $ref: '#/definitions/DeviceGroup'
        type: array
      has_more:
        description: More results are available.
        example: false
        type: boolean
      limit:
        description: How many objects to retrieve in the page (2-1000). Limit values
          outside of this range are set to the closest limit.
        example: 50
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: The type of this API object is 'list'.
        example: list
        type: string
      order:
        description: Record order based on creation time.
        example: DESC
        type: string
      total_count:
        example: 1
        format: integer
        type: integer
    type: object
  DeviceGteLteFilter:
    properties:
      bootstrap_expiration_date:
        example: '2017-05-22'
        format: date
        type: string
      bootstrapped_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      connector_expiration_date:
        example: '2017-05-22'
        format: date
        type: string
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      enrolment_list_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      manifest_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
    type: object
  DeviceInNinFilter:
    properties:
      account_id:
        type: string
      auto_update:
        type: boolean
      bootstrap_expiration_date:
        example: '2017-05-22'
        format: date
        type: string
      bootstrapped_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      ca_id:
        type: string
      component_attributes:
        additionalProperties:
          type: string
        type: object
      connector_expiration_date:
        example: '2017-05-22'
        format: date
        type: string
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      custom_attributes:
        additionalProperties:
          type: string
        type: object
      deployed_state:
        type: string
      deployment:
        type: string
      description:
        type: string
      device_class:
        type: string
      device_execution_mode:
        type: integer
      device_key:
        type: string
      endpoint_name:
        type: string
      endpoint_type:
        type: string
      enrolment_list_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      firmware_checksum:
        type: string
      host_gateway:
        type: string
      id:
        type: string
      manifest:
        type: string
      manifest_timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      mechanism:
        type: string
      mechanism_url:
        type: string
      name:
        type: string
      serial_number:
        type: string
      state:
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      vendor_id:
        type: string
    type: object
  DevicePage:
    properties:
      after:
        description: An offset token for current page.
        example: '01631667477600000000000100100374'
        type: string
      data:
        items:
          $ref: '#/definitions/DeviceData'
        type: array
      has_more:
        description: Are there more results available.
        example: false
        type: boolean
      limit:
        description: How many objects to retrieve in the page. The minimum limit is
          2 and the maximum is 1000. Limit values outside of this range are set to
          the closest limit.
        example: 50
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: The type of this API object is a "list".
        example: list
        type: string
      order:
        description: The order of the records based on creation time, `ASC` or `DESC`;
          by default `ASC`.
        example: DESC
        type: string
      total_count:
        example: 1
        format: integer
        type: integer
  DeviceQuery:
    properties:
      created_at:
        description: The timestamp of when the query was created.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        description: The entity instance signature.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        description: The ID of the query.
        example: 015c30671894000000000001001001e9
        type: string
      name:
        description: The name of the query.
        example: example-stored-device-query
        type: string
      object:
        description: The API resource entity.
        example: device-query
        type: string
      query:
        description: The device query.
        example: id=0158d38771f70000000000010010038c
        type: string
      updated_at:
        description: The time the object was updated.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
    required:
    - created_at
    - etag
    - id
    - name
    - object
    - query
    - updated_at
  DeviceQueryEqNeqFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        type: string
      name:
        type: string
      query:
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  DeviceQueryGteLteFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  DeviceQueryInNinFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        type: string
      name:
        type: string
      query:
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  DeviceQueryPage:
    properties:
      after:
        example: null
        type: string
      data:
        example: '[]'
        items:
          $ref: '#/definitions/DeviceQuery'
        type: array
      has_more:
        example: false
        type: boolean
      limit:
        example: 1000
        format: integer
        type: integer
      object:
        example: list
        type: string
      order:
        example: DESC
        type: string
      total_count:
        example: 1
        format: integer
        type: integer
    required:
    - limit
    - order
    - object
    - has_more
    - total_count
    - data
  DeviceQueryPatchRequest:
    properties:
      name:
        description: The name of the query.
        maxLength: 200
        type: string
      query:
        description: The device query.
        maxLength: 1000
        type: string
  DeviceQueryPostPutRequest:
    properties:
      name:
        description: The name of the query.
        maxLength: 200
        type: string
      query:
        description: The device query to store. A query is made of key/value pairs
          separated by ampersands (`&`). The key defines the field name to filter
          by when applying the query. Refer to the endpoint documentation before applying
          a filter, as supported fields vary between endpoints.
        maxLength: 1000
        type: string
    required:
    - name
    - query
  DeviceRequest:
    properties:
      accept:
        description: The content type of an accepted response.
        example: text/plain
        type: string
      content-type:
        description: The content type of the payload.
        example: text/plain
        type: string
      method:
        description: The CoAP request method. Allowed values are GET, POST, PUT and
          DELETE.
        example: GET
        type: string
      payload-b64:
        description: The base64 encoded payload to send to the device.
        example: dmFsdWUxCg==
        type: string
      uri:
        description: The URI path of the requested resource.
        example: /5/0/1
        type: string
    required:
    - method
    - uri
    type: object
  DeviceToPelionMessagesCounter:
    description: The number of messages from the device to Device Management.
    properties:
      bootstrap_requests:
        $ref: '#/definitions/BootstrapRequestsCounter'
      est_requests:
        $ref: '#/definitions/EstRequestsCounter'
      observations:
        $ref: '#/definitions/ObservationsCounter'
      proxy_responses:
        $ref: '#/definitions/ProxyResponsesCounter'
      registration_deletes:
        $ref: '#/definitions/RegistrationDeletesCounter'
      registration_updates:
        $ref: '#/definitions/RegistrationUpdatesCounter'
      registrations:
        $ref: '#/definitions/RegistrationsCounter'
      total_count:
        description: The number of all inbound requests from devices to Device Management.
        format: int64
        minimum: 0
        type: integer
    required:
    - total_count
    - registrations
    - registration_updates
    - registration_deletes
    - observations
    - est_requests
    - proxy_responses
    - bootstrap_requests
    type: object
  EchoDevice:
    description: The Device Echo object representing the device.
    properties:
      created_at:
        description: Response creation UTC time.
        example: 2020-10-20 10:30:55.123000
        format: date-time
        type: string
      device_id:
        description: The device ID.
        example: 015f3850a657000000000001001002ab
        type: string
      endpoint_name:
        description: The endpoint name.
        example: Sensor3222454
        type: string
      last_desired_at:
        description: The last time a write command was initiated on a resource.
        example: 2019-10-20 10:30:55.123000
        format: date-time
        type: string
      last_reported_at:
        description: The last time any resource's reported value was updated.
        example: 2019-10-20 10:30:55.123000
        format: date-time
        type: string
      object:
        description: API Resource name
        example: device-echo
        type: string
      resources:
        description: The list of device resources stored in Device Echo.
        items:
          $ref: '#/definitions/EchoResource'
        type: array
      updated_at:
        description: The time of last registration event of a Device Echo object.
        example: 2019-10-20 10:30:55.123000
        format: date-time
        type: string
    required:
    - id
    type: object
  EchoResource:
    description: The representation of a single resource of the device stored in Device
      Echo.
    properties:
      desired:
        $ref: '#/definitions/EchoResourceDesired'
      reported:
        $ref: '#/definitions/EchoResourceReported'
      resource_path:
        description: The path of the resource.
        example: /3/0/1
        type: string
      subscribed:
        description: System-level subscription status of the resource. If any of the
          applications has placed a subscription, the status is true. Overlapping
          subscriptions from multiple applications do not increase the load on the
          device as the server handles the multiplexing.
        type: boolean
    type: object
  EchoResourceDesired:
    description: Resource value written, or queued to be written to the device.
    properties:
      desired_at:
        description: The time of the latest value write was initiated.
        example: 2019-10-20 10:30:55.123000
        format: date-time
        type: string
      status:
        description: The status of the desired value. 0 = 'pending write', 1 = 'success',
          2 = 'failed'.
        format: integer
        type: number
      status_updated_at:
        description: The time of the last status update.
        example: 2019-10-20 10:30:55.123000
        format: date-time
        type: string
      value:
        description: The desired value in base64 encoded format.
        example: RGVzaXJlZCB2YWx1ZS4=
        format: byte
        type: string
    type: object
  EchoResourceReported:
    description: Reported single resource data received from the device.
    properties:
      content_type:
        description: Content type of the reported resource value.
        example: text/plain
        type: string
      expires_at:
        description: The time after which the reported value is not valid, calculated
          based on the max-age of the resource value the device reported.
        example: 2019-10-20 10:30:55.123000
        format: date-time
        type: string
      reported_at:
        description: The time the last value was reported.
        format: date-time
        type: string
      value:
        description: The reported value in base64 encoded format.
        example: UmVwb3J0ZWQgdmFsdWUu
        format: byte
        type: string
    type: object
  EndpointData:
    properties:
      ep:
        description: Unique Device Management device ID.
        example: 015f3850a657000000000001001002ab
        type: string
      ept:
        description: Endpoint type.
        example: Light
        type: string
      original-ep:
        description: If device registration is initiated with a self-provided endpoint
          name, Device Management provides a new device ID for subsequent use. The
          new platform-provided Device ID is forwarded as the 'ep' property and the
          original self-provided one as the optional 'original-ep' property in a registration
          notification. The name and ID can then be mapped accordingly. Device Management
          saves the original endpoint name in the Device Directory for future device
          registrations so you don't need to do mapping again.
        example: my-device-123
        type: string
      q:
        description: Queue mode (default value is false).
        example: false
        type: boolean
      resources:
        items:
          $ref: '#/definitions/ResourcesData'
        type: array
    type: object
  EnrollmentId:
    properties:
      enrollment_identity:
        description: Enrollment identity.
        example: A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5
        pattern: ^A-[A-Za-z0-9:]{95}$
        type: string
    required:
    - enrollment_identity
    type: object
  EnrollmentIdentities:
    properties:
      after:
        description: ID
        example: 00005a4e027f0a580a01081c00000000
        pattern: ^[A-Za-z0-9]{32}
        type: string
      data:
        items:
          $ref: '#/definitions/EnrollmentIdentity'
        type: array
      has_more:
        example: true
        type: boolean
      limit:
        description: Range 2-1000, or default.
        example: 50
        maximum: 1000
        minimum: 2
        type: integer
      object:
        enum:
        - list
        example: list
        type: string
      order:
        default: ASC
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        example: 100
        format: int32
        minimum: 1
        type: integer
    required:
    - object
    - limit
    - after
    - order
    - has_more
    - total_count
    - data
    type: object
  EnrollmentIdentity:
    properties:
      account_id:
        description: ID
        example: 00005a4e027f0a580a01081c00000000
        type: string
      claimed_at:
        description: The time the device was claimed.
        format: date-time
        type: string
      created_at:
        description: The time of the enrollment identity creation.
        format: date-time
        type: string
      enrolled_device_id:
        description: The ID of the device in the Device Directory once it is registered.
        example: 00005a4e027f0a580a01081c00000000
        pattern: ^[A-Za-z0-9]{32}
        type: string
      enrollment_identity:
        description: Enrollment identity.
        example: A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5
        pattern: ^A-[A-Za-z0-9:]{95}$
        type: string
      etag:
        example: 7642xfaxz
        pattern: '[A-Za-z0-9]{1,256}'
        type: string
      expires_at:
        description: The enrollment claim expiration time. If the device does not
          connect to Device Management before expiration, the claim is removed without
          separate notice.
        format: date-time
        type: string
      id:
        description: Enrollment identity.
        example: 00005a4e027f0a580a01081c00000000
        pattern: ^[A-Za-z0-9]{32}
        type: string
      object:
        enum:
        - enrollment
        example: enrollment
        type: string
    required:
    - object
    - id
    - etag
    - account_id
    - created_at
    - expires_at
    - claimed_at
    - enrollment_identity
    - enrolled_device_id
    type: object
  ErrorObjectResponse:
    properties:
      code:
        description: Error code. Correlates with response status code.
        format: int32
        type: integer
      fields:
        description: A list of request fields that failed validation.
        items:
          $ref: '#/definitions/FieldMessageEntry'
        type: array
      message:
        description: Error message.
        type: string
      object:
        description: 'Entity name: `error`.'
        type: string
      request_id:
        description: Request ID from JWT.
        type: string
      type:
        description: Error type.
        type: string
    required:
    - code
    - fields
    - message
    - object
    - request_id
    - type
    type: object
  ErrorResponse:
    properties:
      code:
        description: HTTP response code
        example: 400
        format: int32
        type: integer
      fields:
        description: Request fields which failed validation.
        items:
          properties:
            message:
              description: Message describing the error condition.
              type: string
            name:
              description: Name of the field which caused the error.
              type: string
          required:
          - name
          - message
          type: object
        type: array
      message:
        description: A human readable informative explanation
        example: Validation error
        type: string
      object:
        description: Entity name, always `error`.
        enum:
        - error
        type: string
      request_id:
        description: ID of the request.
        example: 0161991d63150242ac12000600000000
        type: string
      type:
        description: Error type used to categorise the error.
        example: validation_error
        type: string
    required:
    - code
    - message
    - object
    - request_id
    - type
    type: object
  EstRequestsCounter:
    description: The number of certificate creation requests received from devices
      during bootstrap.
    format: int64
    minimum: 0
    type: integer
  EventType:
    properties:
      campaign_id:
        description: ID of the associated campaign.
        example: 016e652be671000000000001001001e5
        type: string
      count:
        example: 10
        type: integer
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      description:
        example: Update error, nonspecific network error
        type: string
      event_type:
        example: UPD4_FAIL_101
        type: string
      id:
        example: upd_fail_101
        type: string
      object:
        description: 'Entity name: always ''event-type''.'
        example: event-type
        type: string
      summary_status:
        example: FAIL
        type: string
      summary_status_id:
        example: fail
        type: string
    type: object
  EventTypeList:
    properties:
      after:
        description: The entity ID to fetch after the given one.
        example: 'null'
        type: string
      data:
        enum:
        - fail
        - skipped
        - info
        - success
        items:
          $ref: '#/definitions/EventType'
        type: array
      has_more:
        description: A flag indicating whether there are more results.
        example: 'false'
        type: boolean
      limit:
        description: 'The number of results to return, (range: 2-1000), or equals
          to total_count.'
        example: '50'
        type: integer
      object:
        description: 'The entity name: always ''list''.'
        example: list
        type: string
      order:
        description: 'The order of the records to return. Acceptable values: ASC,
          DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        description: The total number or records, if requested. It may be returned
          also for small lists.
        example: '1'
        type: integer
    type: object
  EventTypeSummary:
    properties:
      campaign_id:
        description: ID of the associated campaign.
        example: 016e652be6710000000000010010013d
        type: string
      count:
        example: 10
        type: integer
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        description: ID of the event type description.
        enum:
        - fail
        - success
        - info
        - skipped
        example: fail
        type: string
      object:
        description: 'Entity name: always ''summary_status''.'
        example: summary_status
        type: string
      summary_status:
        description: The event type description.
        enum:
        - FAIL
        - SUCCESS
        - INFO
        - SKIPPED
        example: FAIL
        type: string
    type: object
  EventTypeSummaryList:
    properties:
      after:
        description: The entity ID to fetch after the given one.
        example: 'null'
        type: string
      data:
        items:
          $ref: '#/definitions/EventTypeSummary'
        type: array
      has_more:
        description: A flag indicating whether there are more results.
        example: 'false'
        type: boolean
      limit:
        description: 'The number of results to return, (range: 2-1000), or equals
          to total_count.'
        example: '50'
        type: integer
      object:
        description: 'The entity name: always ''list''.'
        example: list
        type: string
      order:
        description: 'The order of the records to return. Acceptable values: ASC,
          DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        description: The total number or records, if requested. It may be returned
          also for small lists.
        example: '1'
        type: integer
    type: object
  FeaturePolicy:
    description: Represents a feature policy. Either the feature or the resource must
      be specified.
    properties:
      action:
        description: Comma-separated list of actions, empty string represents all
          actions.
        example: GET
        type: string
      allow:
        description: True or false controlling whether an action is allowed or not.
        example: true
        type: boolean
      feature:
        description: Feature name corresponding to this policy.
        example: update-campaigns
        type: string
      inherited:
        description: Flag indicating whether this feature is inherited or overwritten
          specifically.
        example: false
        readOnly: true
        type: boolean
      inherited_from:
        description: An ID indicating where this policy is inherited from.
        example: 016ada3ec2d46665bf66e32e00000000
        pattern: '[a-f0-9]{32}'
        readOnly: true
        type: string
      inherited_type:
        description: Indicates the type of entity this policy is inherited from.
        enum:
        - account
        - template
        - tier_template
        example: account
        readOnly: true
        type: string
      resource:
        description: Resource that is protected by this policy.
        example: /v3/update-campaign
        type: string
    type: object
  Field:
    properties:
      message:
        description: Message describing the erroneous situation.
        type: string
      name:
        description: Name of the erroneous field.
        type: string
    required:
    - message
    - name
    type: object
  FieldMessageEntry:
    properties:
      field:
        description: Field name.
        type: string
      message:
        description: Error message related to the field.
        type: string
    type: object
  FirmwareImage:
    properties:
      created_at: *id014
      datafile:
        description: The firmware image file URL.
        example: http://bucket.com/myimage.elf
        type: string
      datafile_checksum:
        description: The checksum (sha256) generated for the datafile.
        example: e979fe432d6a19b0e70a93b33ac29094cd5fe35a8fd5fbedfd383d8d107d6a7e
        type: string
      datafile_size:
        description: The size of the datafile in bytes.
        format: int64
        type: integer
      description:
        description: The description of the object.
        example: a description
        format: free text
        maxLength: 2000
        type: string
      etag: *id015
      id:
        description: The firmware image ID.
        example: 016e652be671000000000001001001e5
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name:
        description: The firmware image name.
        format: free text
        maxLength: 128
        type: string
      object:
        description: 'Entity name: always ''firmware-image''.'
        example: firmware-image
        type: string
      updated_at: *id016
  FirmwareImageEqNeqFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      datafile:
        type: string
      datafile_checksum:
        type: string
      datafile_size:
        type: integer
      description:
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        example: 015c3029f6f7000000000001001000c3
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name:
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  FirmwareImageGteLteFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  FirmwareImageInNinFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      datafile:
        type: string
      datafile_checksum:
        type: string
      datafile_size:
        type: integer
      description:
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        example: 015c3029f6f7000000000001001000c3
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name:
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  FirmwareImagePage:
    properties:
      after:
        example: null
        type: string
      data:
        items:
          $ref: '#/definitions/FirmwareImage'
        type: array
      has_more:
        type: boolean
      limit:
        format: int32
        type: integer
      object:
        description: 'Entity name: always ''list''.'
        example: list
        type: string
      order:
        description: The order of the records based on creation time, `ASC` or `DESC`;
          by default `ASC`.
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        format: int32
        type: integer
  FirmwareManifest:
    properties:
      created_at: *id014
      datafile:
        description: The URL of the ASN.1 DER-encoded firmware manifest binary.
        example: http://bucket.com/mymanifest.manifest
        format: uri
        type: string
      datafile_size:
        description: The size of the firmware manifest in bytes.
        format: int64
        type: integer
      delivered_payload_digest:
        description: Digest (SHA256, hex-encoded) of the payload to deliver to the
          device.
        example: c520fc771c0482ad39e983d27cf725a7c724fe58c616129a34a420d1941068bc
        format: hex
        type: string
      delivered_payload_size:
        description: The size in bytes of the payload to deliver to the device.
        format: int64
        type: integer
      delivered_payload_type:
        description: Type of the payload to deliver to the device (full or delta image).
        enum:
        - full
        - delta
        type: string
      delivered_payload_url:
        description: The URL of the payload to deliver to the device.
        example: http://bucket.com/myimage.elf
        format: uri
        type: string
      description:
        description: The description of the firmware manifest.
        example: ''
        format: free text
        maxLength: 2000
        type: string
      device_class:
        description: The device class ID.
        example: 42c4d8de-704d-546e-b9d3-1ce1eb316167
        format: uuid
        type: string
      device_vendor:
        description: The device vendor ID.
        example: 5d645eae-c231-5a89-9764-2e655cd94fa8
        format: uuid
        type: string
      etag: *id015
      id:
        description: The firmware manifest ID.
        example: '12345678901234567890123456789012'
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      key_table:
        description: The key table of pre-shared keys for devices.
        example: http://example.com/key-table
        format: uri
        type: string
      manifest_schema_version:
        description: Version of the manifest schema (1 or 3).
        enum:
        - '1'
        - '3'
        type: string
      name:
        description: The name of the manifest.
        example: manifest_name
        format: free text
        maxLength: 128
        type: string
      object:
        description: 'Entity name: always ''firmware-manifest''.'
        example: firmware-manifest
        type: string
      parsed_raw_manifest:
        description: 'Raw manifest in JSON format, parsed from ASN.1 DER encoding.

          Fields may change. Backwards compatibility is not guaranteed.

          Recommended for debugging only.

          '
        type: object
      precursor_payload_digest:
        description: Digest (SHA256, hex-encoded) of the currently installed payload.
        example: 54d640fcd687c9b13420b9be66a265494899002aad1b7370cfb3dbfd7fbec42f
        type: string
      timestamp:
        description: The firmware manifest version as a timestamp.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      update_priority:
        description: Update priority, passed to the application callback when an update
          is performed. Allows the application to make application-specific decisions.
        format: int64
        type: integer
      updated_at: *id016
  FirmwareManifestEqNeqFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      datafile:
        type: string
      datafile_size:
        type: integer
      description:
        type: string
      device_class:
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        example: 015c3029f6f7000000000001001000c3
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name:
        format: free text
        maxLength: 128
        type: string
      timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  FirmwareManifestGteLteFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  FirmwareManifestInNinFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      datafile:
        type: string
      datafile_size:
        type: integer
      description:
        type: string
      device_class:
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        example: 015c3029f6f7000000000001001000c3
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name:
        format: free text
        maxLength: 128
        type: string
      timestamp:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  FirmwareManifestPage:
    properties:
      after:
        example: null
        type: string
      data:
        items:
          $ref: '#/definitions/FirmwareManifest'
        type: array
      has_more:
        type: boolean
      limit:
        format: int32
        type: integer
      object:
        description: 'Entity name: always ''list''.'
        example: list
        type: string
      order:
        description: 'The order of the records to return. Acceptable values: ASC,
          DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        format: int32
        type: integer
  FirmwareUpdatesCounter:
    description: The total number of successful firmware update operations in the
      requested time.
    format: int64
    minimum: 0
    type: integer
  ForbiddenErrorResponse:
    description: 403 Forbidden.
    properties:
      code:
        description: Response code. Always set to 403.
        enum:
        - 403
        type: integer
      message:
        description: A human-readable message with detailed info.
        type: string
      object:
        description: Always set to `error`.
        enum:
        - error
        type: string
      request_id:
        description: Request ID
        type: string
      type:
        description: Error type. Always set to `forbidden`.
        enum:
        - forbidden
        type: string
    required:
    - object
    - message
    - request_id
    - type
    - code
    type: object
  GetTrustAnchorsResponse:
    properties:
      after:
        description: An offset token for the current page.
        example: '01631667477600000000000100100374'
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      data:
        description: The list of trust anchors of the account.
        items:
          $ref: '#/definitions/TrustAnchorResponse'
        type: array
      has_more:
        description: Indicates whether additional results are available.
        example: false
        type: boolean
      limit:
        default: 50
        description: Indicates how many objects to retrieve in the page. The minimum
          limit is 2 and the maximum is 1000. Limit values outside of this range are
          set to the closest limit.
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: The type of this API object is a `list`.
        example: list
        type: string
      order:
        description: Indicates how to order the entries based on when they were created.
        enum:
        - ASC
        - DESC
        example: DESC
        type: string
      total_count:
        example: 1
        format: integer
        type: integer
    type: object
  GlobalSignCredentials:
    description: 'The credentials required to connect to the GlobalSign account.

      The values should be taken from GlobalSign support upon account creation.'
    properties:
      api_key:
        description: Unique ID for API client (provided by GlobalSign).
        example: e510e289e6cd8947
        maxLength: 1000
        type: string
      api_secret:
        description: API secret matching the API key (provided by GlobalSign).
        example: a477a8393d17a55ecb2ba6a61f58feb84770b621
        format: password
        maxLength: 250
        type: string
      client_certificate:
        description: 'The client certificate provided by GlobalSign to allow HTTPS
          connection over TLS/SSL.

          The certificate wraps a public key that matches a private key provided by
          the customer.

          The certificate must be in PEM format.'
        example: '"-----BEGIN CERTIFICATE-----MIIC7zCCAdegAwIBAgIJANTlU4x5S74VMA0GCSqGSIb3DQEBCwUAMA4xDDAKBgNVBAoMA0FybTAeFw0xODAzMTExMzE5MTFaFw0xOTAzMTExMzE5MTFaMA4xDDAKBgNVBAoMA0FybTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJWLStsVMJULZtxdieK9qocM4ymDXMaAusmd9TZLzBgznKQe/CW2yxyA8C8K5e6MmvMYGeKDd4Lkw/ezOj2OsUj2xzNIltUxpGi/GhsNYiN/khNJa/Y1SllLoihJAPm/xbMywOBRu/dM88PiJsNZccOk0I8DYvvyAs9wCTkbKLnfHygl98DCRqXw7nBCplU6F03qpUd/4BUtMtugyqt7yboGH+4YewnUh4Yh4QNOJIvE93Ob++eKjO3pIOYEhQmUxzOLaLNuWXlv2l1WuN281hUP4XBcV8mCzRQfTBBDYTWt+5BEWoLOUkXjW0Um6EAaN3usph1IKDEH6Ia5VHP4Pj0CAwEAAaNQME4wHQYDVR0OBBYEFLsfYZxFcQTjPJKYMjHI2In316fmMB8GA1UdIwQYMBaAFLsfYZxFcQTjPJKYMjHI2In316fmMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAFl08GFsIkkUs6M7QgCWmsnwP6PtD8V87wM1GAqQQlOOeztaeRR2TEOeYiKRZQugYszJ/FVfVp4ggqzepJMn6UZ42j5nmSJs+6t79i23QAzX1zNQ354lr/t7kt3fMdhuL3AP0oZGzdy+EnXXiWeAD22UwzvVmLt38ypJIl+pmTsx9jJy4PN7yoRgtP9k+50m3X6oDxVruehC/JPSeTvEhqyLW3fLcG6IoJMX3vIwfO9uXbFJumTowQeViNJJ9duWvD2KBXn/muOOBe97TPuvAms1gOtMmmPT9/jpo9b4+NsfFiAN6bMici81aIKZzLC+lLGOUmR2fFJyM5OsVLxKsko=-----END
          CERTIFICATE-----"'
        maxLength: 3000
        type: string
      passphrase:
        description: 'The passphrase to decrypt the private key in case it is encrypted.

          Empty if the private key is not encrypted.'
        example: helloworld
        format: password
        maxLength: 1000
        type: string
      private_key:
        description: 'The private key that matches the client certificate to allow
          HTTPS connection over TLS/SSL.

          The private key may be encrypted using a symmetric encryption key derived
          from a passphrase.

          The private key must be in PEM format.'
        example: '"-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info:
          DES-EDE3-CBC,CCAC26A4133947CB\n\np3KJ4FI3wcz3I0MtiLkrznkjWFvprVmoNywySUGb5IqZViJZqCMEsyU9a9iDsSfP\nZ07cg9GviV21WYIPSxZOQrpy1g1VWILzFnH+J6z8dSH4mxXh0PwdOzYgAeqkrIVM\nJ7KRm6t222dZFjjXK3eEcLmBLGo29XwVJxKHx+l4++gU1LZmeHZR5M8fJ4jejUly\n7sqzPlmRF0N3I4lwKVj+PfQTVz43QoCnpxOjuSEL4liBrc2agY2xH1O0PFyHimz9\n3XM9HR/iuPHW0N2D+NPjXlWKacerupH9d4i9IYIagzB+HTgej8limdo03GmmxcZ6\nYNa58n5yQSaqu0TPRU9DsrKeGjadHTlZQGdzfq1SWsROCnHLrXFKE2ozIG3+hxA5\nujBF/QWpX5+inXUwDJhBxp8isHbPEnBEUUd6ZRzCTjvN0jaUti5B9yFhO2G6mbE8\nCvhyzQK8oJqsjZXnlcpPf95LP+9XbcCDjLSIaWJstzXO9tPiv6+x1MVWmivtRHcC\nSTzpx8jAGCiG6ejLqWB87ZXiZm7ujlCBheHSf5RHwNHhUvoP2JEYalDDRxjcDMSx\n4uV42Np4yJlIQEDlGHcBlXoL7vEukFpuWgkYdpcZy/Ou9qz8mXrpLcu8C8MhLmSC\nixGoR5iRhV7cxoHLyuCzj87eYEA73Xu238DQorSEEuiVFnLzQ2+PJMs4qoI14q/L\notlBDz+Ko6DrU/EZROYmiqMkLKXR2sx9zNAJwPYRs6nSH08tZ3dwqzZbgtP3Wazi\nhLWHt5/En7wQRA5a+/dDEHXSoLvvSQ9jvhclhWf+eCYuq2eH+g54oyJGRSY+8GV7\nujhLxkzl/3OZdhZPWoz4U13KpbSTcNWu5Y7oGDoabw19UbvqmLf1PJkpDH/tQgzB\nxYtsLBRUcofpYoeIiIxfAA4do5WilJc8xqrGhkE4WcHfY24HXAiOvsjbxV+BRprX\n1jtgJpV/9nJESMap+8PxipGUFRGjB83/uwJaa6mLftEKflX8i4MZ+HnqraXERsqA\nWRUcDHIWmFfpzIB3iNuxawVvPH8NdCSPmQ9qTb8Cozl0AuOK2E9S+ke8oiYQScWR\nLdu+zhej7GjuQ9R+Ub+wPWqvOA5qLXejqnCexVScDUuN+z9JWM3N2FG1MwxhAzhP\ndEfoQHoBn6uyOmrVGP6fosV3chqhPoec42KeOAm1xDvx692isaIy1jPgIyPxeqhm\n2Tw4E+02R7dlP8Ljf7JzfLm4oKpWHWlcHeqg24x6lY/wXU1RBcWaTa0AQUwoGm2m\nIQCPfIqOEv/QC2HpO7SVCYkl65KwR0oTd1AzYxdxEq3xHQbh69EL0FGZPVxVCPI+\nhEAyifKy1/tm3l91Rf/kGpHY7nIQKCXH49tmFwix8gke2nZJmRgX7/zAdMOAKeKH\nAaIl4nQtv14EbaasMgnn9qgaDYnWzaReEob2QlQ/WYlTor61+KFpGtcf9jAkgudT\n2op+4CF7wT2+aTXdtkVWfmv++iB8GnlqZdxLvyG1cTYjjYHVFbMSWQnxzQqiE2ms\nQgp+byjWCumpsWTMdTO+d9NkDOo80vDpaRxEgebmhJ0MbX+eFjBgVg==\n-----END
          RSA PRIVATE KEY-----"'
        maxLength: 3000
        type: string
    required:
    - api_key
    - api_secret
    - client_certificate
    - private_key
    type: object
  GroupCreationInfo:
    description: This object is used when creating new groups.
    properties:
      members:
        $ref: '#/definitions/SubjectList'
        description: The members of the group as arrays of user and API key IDs.
      name:
        description: The group name.
        maxLength: 100
        type: string
    required:
    - name
    type: object
  GroupIdList:
    items:
      example: 01705c6383f6c85b76f92f4e00000000
      type: string
    type: array
  GroupSummary:
    description: This object contains basic information about groups.
    properties:
      account_id:
        description: The ID of the account this group belongs to.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      apikey_count:
        description: The number of API keys in this group.
        example: 0
        format: int32
        type: integer
        x-deprecation:
          comment: This property is deprecated. See 'application_count' property.
          end_of_life_at: '2021-08-01T00:00:00+00:00'
          issued_at: '2020-08-01T00:00:00+00:00'
          links: []
      application_count:
        description: The number of applications in this group.
        example: 0
        format: int32
        type: integer
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      id:
        description: The ID of the group.
        example: 01619571dec00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      name:
        description: The name of the group.
        example: Administrators
        maxLength: 100
        type: string
      object:
        description: 'Entity name: always `group`.'
        enum:
        - group
        type: string
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
      user_count:
        description: The number of users in this group.
        example: 1
        format: int32
        type: integer
    required:
    - account_id
    - apikey_count
    - etag
    - id
    - name
    - object
    - user_count
    type: object
  GroupSummaryList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/GroupSummary'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return (2-1000), or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  GroupUpdateInfo:
    description: This object is used when Update groups.
    properties:
      name:
        description: The group name.
        maxLength: 100
        type: string
    required:
    - name
    type: object
  IdentityProviderCreationReq:
    description: This object is used for creating new federated identity provider
      module.
    properties:
      description:
        description: Description for the identity provider.
        maxLength: 500
        type: string
      name:
        description: Name of the identity provider.
        maxLength: 100
        type: string
      oidc_attributes:
        $ref: '#/definitions/OIDCInfo'
        description: OIDC specific attributes.
      saml2_attributes:
        $ref: '#/definitions/SAML2Req'
        description: SAML2 specific attributes.
      status:
        description: Status of the identity provider.
        enum:
        - ACTIVE
        - SUSPENDED
        type: string
      type:
        description: Identity provider type.
        enum:
        - SAML2
        - OIDC
        type: string
    required:
    - name
    - type
    type: object
  IdentityProviderInfo:
    properties:
      account_id:
        description: The ID of the account the identity provider belongs to.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      description:
        description: Description for the identity provider.
        maxLength: 500
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      id:
        description: Entity ID.
        example: 01619571d01d0242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      is_default:
        description: Flag indicating whether this is the global default identity provider.
        readOnly: true
        type: boolean
      name:
        description: Name of the identity provider.
        maxLength: 100
        type: string
      object:
        description: 'Entity name: always ''identity-provider'''
        enum:
        - identity-provider
        type: string
      oidc_attributes:
        $ref: '#/definitions/OIDCInfo'
        description: OIDC specific attributes.
      saml2_attributes:
        $ref: '#/definitions/SAML2Info'
        description: SAML2 specific attributes.
      status:
        description: Status of the identity provider.
        enum:
        - ACTIVE
        - SUSPENDED
        type: string
      type:
        description: Identity provider type.
        enum:
        - NATIVE
        - MBED
        - SAML2
        - OIDC
        type: string
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
    required:
    - etag
    - id
    - name
    - object
    - type
    type: object
  IdentityProviderList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/IdentityProviderInfo'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return , or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  IdentityProviderUpdateReq:
    description: Update existing federated identity provider module.
    properties:
      description:
        description: Description for the identity provider.
        maxLength: 500
        type: string
      name:
        description: Name of the identity provider.
        maxLength: 100
        type: string
      oidc_attributes:
        $ref: '#/definitions/OIDCInfo'
        description: OIDC specific attributes.
      saml2_attributes:
        $ref: '#/definitions/SAML2Req'
        description: SAML2 specific attributes.
      status:
        description: Status of the identity provider.
        enum:
        - ACTIVE
        - SUSPENDED
        type: string
      type:
        description: Identity provider type.
        enum:
        - SAML2
        - OIDC
        type: string
    required:
    - name
    - type
    type: object
  IdpPublicKey:
    description: Represents provider's public key and key ID used to sign ID tokens.
      PEM-encoded.
    properties:
      key:
        description: The public key.
        type: string
      kid:
        description: The public key ID.
        type: string
    type: object
  Image:
    format: binary
    type: string
  InternalServerErrorResponse:
    description: 500 Internal server error response.
    properties:
      code:
        description: Response code. Always set to 500.
        enum:
        - 500
        type: integer
      message:
        description: A human-readable message with detailed info.
        type: string
      object:
        description: Always set to `error`.
        enum:
        - error
        type: string
      request_id:
        description: Request ID
        type: string
      type:
        description: Error type. Always set to `internal_error`.
        enum:
        - internal_error
        type: string
    required:
    - object
    - message
    - request_id
    - type
    - code
    type: object
  KeyValue:
    properties:
      key:
        type: string
      value:
        type: string
    required:
    - key
    - value
  ListOfPreSharedKeysWithoutSecret:
    properties:
      after:
        description: An offset token for current page.
        example: 001e001000120010fac8f300487f11e8839a459edde8bd42f07fffffebf07fffffebb1219cc7862b64bbaf775dc545e274810004
        type: string
      continuation_marker:
        description: An offset token for fetching the next page. Note that exactly
          the same limit needs to be used on the request for fetching subsequent pages.
        example: 001e001000120010fac8f300487f11e8839a459edde8bd42f07fffffebf07fffffebb1219cc7862b64bbaf775dc545e274810005
        type: string
      data:
        description: Array of the PSK entries. The array is empty if there are no
          PSKs.
        items:
          $ref: '#/definitions/PreSharedKeyWithoutSecret'
        minLength: 0
        type: array
      has_more:
        description: More results are available.
        example: true
        type: boolean
      limit:
        description: The value of limit query parameter from the request, or default
          if not specified.
        example: 50
        type: integer
      object:
        description: The type of this API object is a "list".
        example: list
        type: string
      order:
        description: Record order based on creation time.
        example: DESC
        type: string
    required:
    - object
    - limit
    - order
    - has_more
    - data
    type: object
  Log:
    properties:
      account_id:
        description: The ID of the account associated with the device.
        example: 0168e7bff4f2263cf4be560700000000
        type: string
      app_name:
        description: A tag indicating which application or software module produced
          the log message.
        example: modbus
        type: string
      created_at:
        description: RFC 3339 UTC timestamp indicating when the resource entity was
          created.
        example: '2017-07-21T17:32:28Z'
        format: date-time
        type: string
      device_id:
        description: Device ID.
        example: 00005a4e027f0a580a01081c00000000
        type: string
      etag:
        description: Entity instance signature, or Unix timestamp of last customer
          update.
        example: stdout
        type: string
      id:
        description: mUUID Entity ID. Each device log has a unique ID.
        example: 2d238a89038b4ddb84699dd36a901063
        pattern: /^[(0-9)(a-f)]{32}$/
        type: string
      level:
        description: Log entry severity level.
        enum:
        - DEBUG
        - TRACE
        - INFO
        - WARNING
        - ERROR
        - CRITICAL
        example: ERROR
        type: string
      message:
        description: Log message body.
        example: 'ModbusRTU Driver: Failed to start undefined'
        type: string
      object:
        description: Device log resource name.
        example: device-log
        type: string
      timestamp:
        description: RFC 3339 UTC timestamp indicating indicating the device time
          the message was printed.
        example: '2017-07-21T17:40:28Z'
        format: date-time
        type: string
      type:
        description: Device log type.
        example: syslog
        type: string
    type: object
  LoginHistory:
    description: Represents an entry in login history.
    properties:
      date:
        description: UTC time RFC3339 for this login attempt.
        example: '2018-02-14T17:52:07Z'
        format: date-time
        type: string
      ip_address:
        description: IP address of the client.
        example: 127.0.0.1
        type: string
      success:
        description: Flag indicating whether login attempt was successful or not.
        example: true
        type: boolean
      user_agent:
        description: User Agent header from the login request.
        example: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36
          (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36
        type: string
    required:
    - date
    - ip_address
    - success
    - user_agent
    type: object
  LoginProfile:
    description: Represents a user login profile in Device Management.
    properties:
      foreign_id:
        description: The ID of the user in the identity provider's service.
        example: fed/user_007
        readOnly: true
        type: string
      id:
        description: ID of the identity provider.
        example: 01619571f3c00242ac12000600000000
        type: string
      name:
        description: Name of the identity provider.
        example: Pelion
        readOnly: true
        type: string
      type:
        description: Identity provider type.
        enum:
        - NATIVE
        - MBED
        - SAML2
        - OIDC
        example: NATIVE
        readOnly: true
        type: string
    required:
    - id
    type: object
  LogsPage:
    properties:
      after:
        description: An offset token for current page.
        type: string
        x-nullable: true
      data:
        items:
          $ref: '#/definitions/Log'
        type: array
      has_more:
        description: Indicates whether more results are available.
        example: false
        type: boolean
      limit:
        description: Limit applied on number of device log resource objects retrieved
          in the page (2-1000).
        example: 100
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: Always `list`.
        example: list
        type: string
      order:
        description: Entry order based on creation time.
        example: DESC
        type: string
      total_count:
        example: 1
        format: integer
        type: integer
    type: object
  NotificationData:
    properties:
      ct:
        description: Content type.
        example: text/plain
        type: string
      ep:
        description: Device Management Device ID.
        example: 015f3850a657000000000001001002ab
        type: string
      max-age:
        description: 'Max age value is an integer number of seconds between 0 and
          2^32-1, but the actual maximum cache time is limited to 3 days.

          Default 60.'
        example: 60
        type: string
      path:
        description: URI path.
        example: /sen/light
        type: string
      payload:
        description: Base64 encoded payload.
        example: My4zMQ==
        type: string
    type: object
  NotificationEntry:
    description: Represents an account notification entry.
    properties:
      account_id:
        description: The ID of the account.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      error_msg:
        description: The error message if there was an error while transmitting the
          account notification.
        example: Connection error.
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      id:
        description: Entity ID.
        example: 01619571d01d0242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      message:
        description: The message contained in this account notification entry.
        example: User limit has been reached.
        type: string
      object:
        description: 'Entity name: always ''notification-entry'''
        enum:
        - notification-entry
        type: string
      receiver:
        description: The receiver this account notification entry.
        example: example@email-receiver.test
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
      subject:
        description: The subject of this account notification entry.
        example: Account locked.
        type: string
      success:
        description: A flag indiciating whether the sending of this account notification
          entry was successful, true or false.
        type: boolean
      type:
        description: The type of this account notification entry.
        example: email
        type: string
    required:
    - etag
    - id
    - object
    type: object
  NotificationEntryList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/NotificationEntry'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return, or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  NotificationMessage:
    properties:
      async-responses:
        items:
          $ref: '#/definitions/AsyncIDResponse'
        type: array
      de-registrations:
        items:
          description: The device ID.
          example: 015f3850a657000000000001001002ab
          type: string
        type: array
      notifications:
        items:
          $ref: '#/definitions/NotificationData'
        type: array
      reg-updates:
        items:
          $ref: '#/definitions/EndpointData'
        type: array
      registrations:
        items:
          $ref: '#/definitions/EndpointData'
        type: array
      registrations-expired:
        items:
          description: The device ID.
          example: 015f3850a657000000000001001002ab
          type: string
        type: array
    type: object
  OIDCClaimMapping:
    description: Mapping for non-standard OIDC claim names.
    properties:
      email:
        description: Custom claim name for 'email'.
        example: email_address
        type: string
        x-nullable: true
      email_verified:
        description: Custom claim name for 'email_verified'.
        example: email_verified
        type: string
        x-nullable: true
      family_name:
        description: Custom claim name for 'family_name'.
        example: family_name
        type: string
        x-nullable: true
      given_name:
        description: Custom claim name for 'given_name'.
        example: given_name
        type: string
        x-nullable: true
      name:
        description: Custom claim name for 'name'.
        example: name
        type: string
        x-nullable: true
      phone_number:
        description: Custom claim name for 'phone_number'.
        example: phone_number
        type: string
        x-nullable: true
      sub:
        description: Custom claim name for 'sub'.
        example: sub
        type: string
        x-nullable: true
      updated_at:
        description: Custom claim name for 'updated_at'.
        example: updated_at
        type: string
        x-nullable: true
      updated_at_pattern:
        description: Custom pattern for claim 'updated_at' as defined by the Java
          SimpleDateFormat class.
        example: yyyy-MM-dd'T'HH:mm:ssXXX
        type: string
        x-nullable: true
    type: object
  OIDCInfo:
    description: Represents OIDC specific attributes.
    properties:
      authorization_endpoint:
        description: URL of the OAuth 2.0 authorization endpoint.
        type: string
        x-nullable: true
      auto_enrollment:
        description: For future use.
        type: boolean
        x-nullable: true
      claim_mapping:
        $ref: '#/definitions/OIDCClaimMapping'
        description: Mapping table for supporting custom OIDC claims.
        x-nullable: true
      client_id:
        description: Client ID needed to authenticate and gain access to identity
          provider's API.
        type: string
        x-nullable: true
      client_secret:
        description: Client secret needed to authenticate and gain access to identity
          provider's API.
        type: string
        x-nullable: true
      end_session_endpoint:
        description: URL of the provider's end session endpoint.
        type: string
        x-nullable: true
      issuer:
        description: Issuer of the identity provider.
        type: string
      jwks_uri:
        description: URL of the provider's JSON web key set document.
        type: string
        x-nullable: true
      keys:
        description: Provider's public keys and key IDs used to sign ID tokens. PEM-encoded.
        items:
          $ref: '#/definitions/IdpPublicKey'
        type: array
        x-nullable: true
      redirect_uri:
        description: The URI needed to authenticate and gain access to identity provider's
          API. Leave this empty to use the default redirect URI.
        type: string
        x-nullable: true
      revocation_endpoint:
        description: URL of the provider's token revocation endpoint.
        type: string
        x-nullable: true
      scopes:
        description: Space-separated list of scopes sent in the authentication request.
          When not configured otherwise, the default scopes are ['openid profile email'](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims).
        example: openid email
        type: string
      token_endpoint:
        description: URL of the OAuth 2.0 authorization endpoint.
        type: string
        x-nullable: true
      token_request_mode:
        default: POST
        description: One way to obtain the access token. Since the request results
          in the transmission of clear-text credentials, the client must use the POST
          mode.
        enum:
        - POST
        - GET
        type: string
      token_response_path:
        description: Path to the standard data in the token response. Levels in the
          JSON structure must be separated by '.' (dot) characters.
        example: oidc.data
        type: string
      userinfo_endpoint:
        description: URL of the OAuth 2.0 UserInfo endpoint.
        type: string
        x-nullable: true
    required:
    - issuer
    type: object
  ObservationsCounter:
    description: The number of resource observation event requests received from devices.
    format: int64
    minimum: 0
    type: integer
  ParentAccountInfo:
    description: Represents parent account contact details in responses.
    properties:
      admin_email:
        description: The email address of the admin user who is the contact person
          of the parent account.
        example: info@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
      admin_name:
        description: The name of the admin user who is the contact person of the parent
          account.
        example: J. Doe
        maxLength: 100
        type: string
      id:
        description: The ID of the parent account.
        example: 01619571dad80242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
    type: object
  PasswordPolicy:
    properties:
      minimum_length:
        description: Minimum length for the password.
        example: '8'
        maximum: 512
        minimum: 8
        type: integer
    required:
    - minimum_length
    type: object
  PelionToDeviceMessagesCounter:
    description: The number of messages from Device Management to the device.
    properties:
      proxy_requests:
        $ref: '#/definitions/ProxyRequestsCounter'
      subscriptions:
        $ref: '#/definitions/SubscriptionsCounter'
      total_count:
        description: The number of all outbound requests sent to devices.
        format: int64
        minimum: 0
        type: integer
    required:
    - total_count
    - proxy_requests
    - subscriptions
    type: object
  PelionToWebappNotificationsCounter:
    description: The number of notifications from Device Management to the web application
      or portal.
    format: int64
    minimum: 0
    type: integer
  PendingServicePackage:
    description: A pending service package.
    properties:
      created:
        description: Service package creation time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      expires:
        description: Service package expiration time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      firmware_update_count:
        description: Size of firmware update quota of this service package.
        format: int32
        type: integer
      id:
        description: ID of this service package.
        type: string
      modified:
        description: Service package latest modified time in RFC3339 date-time with
          millisecond accuracy and UTC time zone.
        format: date-time
        type: string
      previous_id:
        description: Previous service package ID.
        type: string
      start_time:
        description: Service package start time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
    required:
    - id
    - previous_id
    - created
    - modified
    - start_time
    - expires
    - firmware_update_count
    type: object
  PreSharedKey:
    properties:
      endpoint_name:
        description: The unique endpoint identifier that this PSK applies to. 16-64
          [printable](https://en.wikipedia.org/wiki/ASCII#Printable_characters) (non-control)
          ASCII characters.
        example: my-endpoint-0001
        pattern: ^[ -~]{16,64}$
        type: string
      secret_hex:
        description: The secret of the PSK in hexadecimal. It is not case sensitive;
          4a is same as 4A, and it is allowed with or without 0x in the beginning.
          The minimum length of the secret is 128 bits and maximum 256 bits.
        example: 4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a
        pattern: ^(0[xX])?[0-9a-fA-F]{32,64}$
        type: string
    required:
    - endpoint_name
    - secret_hex
    type: object
  PreSharedKeyWithoutSecret:
    properties:
      created_at:
        description: The date-time (RFC3339) when this PSK was uploaded to Device
          Management.
        example: '2017-07-21T17:32:28.012Z'
        format: date-time
        type: string
      endpoint_name:
        description: The unique endpoint identifier that this PSK applies to. 16-64
          [printable](https://en.wikipedia.org/wiki/ASCII#Printable_characters) (non-control)
          ASCII characters.
        example: my-endpoint-0001
        pattern: ^[ -~]{16,64}$
        type: string
    required:
    - endpoint_name
    type: object
  Presubscription:
    properties:
      endpoint-name:
        description: Device Management device ID.
        example: 015f3850a657000000000001001002ab
        type: string
      endpoint-type:
        example: Light
        type: string
      resource-path:
        items:
          description: A resource URI.
          example: /sen/light
          type: string
        minItems: 1
        type: array
    type: object
  PresubscriptionArray:
    items:
      $ref: '#/definitions/Presubscription'
    type: array
  PreviousServicePackage:
    description: Previously active service package.
    properties:
      created:
        description: Service package creation time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      end_time:
        description: Service package end time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      expires:
        description: Service package expiration time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      firmware_update_count:
        description: Size of firmware update quota of this service package.
        format: int32
        type: integer
      id:
        description: ID of this service package.
        type: string
      modified:
        description: Service package latest modified time in RFC3339 date-time with
          millisecond accuracy and UTC time zone.
        format: date-time
        type: string
      next_id:
        description: Next service package ID if this service package has a pending
          renewal or null.
        type: string
      previous_id:
        description: Previous service package ID.
        type: string
      reason:
        description: Reason the service package was ended.
        enum:
        - renewed
        - terminated
        type: string
      start_time:
        description: Service package start time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
    required:
    - id
    - start_time
    - created
    - modified
    - expires
    - end_time
    - firmware_update_count
    - reason
    type: object
  ProxyRequestsCounter:
    description: The number of device command requests sent to devices.
    format: int64
    minimum: 0
    type: integer
  ProxyResponsesCounter:
    description: The number of device command responses received from devices.
    format: int64
    minimum: 0
    type: integer
  QuotaUsageReport:
    description: Account quota usage entry for queried month.
    properties:
      amount:
        description: Amount of quota usage entry. Negative if quota consumption.
        format: int64
        type: integer
      campaign_name:
        description: 'Campaign name of quota usage entry.

          Null if quota usage entry type is not `reservation` or `reservation release`.'
        type: string
      time:
        description: Added time of quota usage entry in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      type:
        description: Type of quota usage entry.
        enum:
        - reservation
        - reservation_release
        - reservation_termination
        - package_renewal
        - package_creation
        - package_termination
        - package_tokens_edit
        type: string
    required:
    - amount
    - type
    - time
    type: object
  RegisterWebsocketChannel:
    properties:
      serialization:
        $ref: '#/definitions/SerializationConfigData'
    type: object
  RegistrationDeletesCounter:
    description: The number of deregistration requests received from devices.
    format: int64
    minimum: 0
    type: integer
  RegistrationUpdatesCounter:
    description: The number of device registration update requests received from devices.
    format: int64
    minimum: 0
    type: integer
  RegistrationsCounter:
    description: The number of full device registration requests received from devices.
    format: int64
    minimum: 0
    type: integer
  ReportAccountContactInfo:
    description: Account contact information.
    properties:
      address_line1:
        type: string
      address_line2:
        type: string
      alias:
        type: string
      business_model:
        description: The business model selected for the account to generate the billing
          reports.
        enum:
        - active_device_business_model
        - api_calls_1_business_model
        type: string
      city:
        type: string
      company:
        type: string
      contact:
        type: string
      country:
        type: string
      customer_subtenant_id:
        description: Account tenant ID, valid only for tenants.
        type: string
      email:
        type: string
      id:
        description: Account ID.
        type: string
      phone_number:
        type: string
      postal_code:
        type: string
      state:
        type: string
    required:
    - id
    - company
    type: object
  ReportBillingData:
    properties:
      active_devices:
        $ref: '#/definitions/ActiveDevicesCounter'
      device_to_pelion_messages:
        $ref: '#/definitions/DeviceToPelionMessagesCounter'
      firmware_updates:
        $ref: '#/definitions/FirmwareUpdatesCounter'
      generated:
        description: Billing report generated time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      pelion_to_device_messages:
        $ref: '#/definitions/PelionToDeviceMessagesCounter'
      pelion_to_webapp_notifications:
        $ref: '#/definitions/PelionToWebappNotificationsCounter'
      period_end:
        description: Billing report end time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      period_start:
        description: Billing report start time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      rest_api_requests_with_api_key_token:
        $ref: '#/definitions/RestApiRequestsWithApiKeyTokenCounter'
      rest_api_requests_with_user_token:
        $ref: '#/definitions/RestApiRequestsWithUserTokenCounter'
      sda_tokens:
        $ref: '#/definitions/SdaTokensCounter'
    required:
    - generated
    - period_start
    - period_end
    - active_devices
    - firmware_updates
    - sda_tokens
    type: object
  ReportNotFoundErrorResponse:
    description: 404 Not found response.
    properties:
      code:
        description: Response code. Always set to 404.
        enum:
        - 404
        type: integer
      message:
        description: A human-readable message with detailed info.
        type: string
      object:
        description: Always set to `error`.
        enum:
        - error
        type: string
      request_id:
        description: Request ID
        type: string
      type:
        description: Error type. Always set to `report_not_found`.
        enum:
        - report_not_found
        type: string
    required:
    - object
    - message
    - request_id
    - type
    - code
    type: object
  ReportResponse:
    description: Billing report response.
    properties:
      account:
        $ref: '#/definitions/ReportAccountContactInfo'
        description: Account contact information.
      aggregated:
        $ref: '#/definitions/ReportBillingData'
        description: Aggregated report billing data including all tenant accounts,
          if any.
      billing_data:
        $ref: '#/definitions/ReportBillingData'
        description: Report billing data.
      id:
        description: Billing report ID.
        type: string
      month:
        description: Month of requested billing report.
        pattern: ^\d{4}-\d{2}$
        type: string
      object:
        description: Billing report response object. Always set to `billing-report`.
        enum:
        - billing-report
        type: string
      service_package:
        $ref: '#/definitions/ServicePackageReport'
        description: Service package report.
      subtenants:
        description: List of billing reports for tenant accounts. Empty list if account
          does not have any tenant account.
        items:
          $ref: '#/definitions/SubtenantAccountReport'
        type: array
    required:
    - id
    - object
    - account
    - billing_data
    - month
    type: object
  Resource:
    properties:
      obs:
        description: '''Determines whether you can subscribe to changes for this resource.
          It can have values `true` or `false`.'''
        example: true
        type: boolean
      rt:
        description: Application-specific resource type that describes this resource,
          created by the [client application](https://www.pelion.com/docs/device-management/current/resources/resource-setup-in-device-management-client.html).
          Not meant to be a human-readable name for the resource. Multiple resource
          types may be included, separated by a space.
        example: light_sensor
        type: string
      type:
        description: 'The content type of the resource.


          We recommend you use the content types listed in the [LwM2M specification](http://www.openmobilealliance.org/wp/omna/lwm2m/lwm2mregistry.html).'
        example: text/plain
        type: string
      uri:
        description: 'The resource URL. This can be the path to:


          - An object; for example, `3303`.

          - An object instance; for example `3303/0`.

          - A resource; for example `3303/0/5602`.


          For more information about the Device Management resource model, please
          see the [Device Management documentation](https://www.pelion.com/docs/device-management/current/resources/resource-model.html).'
        example: /sen/light
        type: string
    required:
    - uri
    type: object
  ResourceArray:
    items:
      $ref: '#/definitions/Resource'
    type: array
  ResourcePath:
    description: A resource URI.
    example: /sen/light
    type: string
  ResourcesData:
    properties:
      ct:
        description: Content type.
        example: text/plain
        type: string
      if:
        description: Interface description that defines a name or URI that indicates
          how to interact with the target resource. It describes a generic interface
          type, such as a 'sensor'.
        example: sensor
        type: string
      obs:
        description: Whether the resource is observable (true/false).
        example: true
        type: boolean
      path:
        description: Resource's URI path.
        example: /sen/light
        type: string
      rt:
        description: 'Application-specific resource type that describes this resource.
          It is created by the [client side application](https://www.pelion.com/docs/device-management/current/resources/resource-setup-in-device-management-client.html).

          Not meant to be a human-readable name for the resource. Multiple resource
          types may be included, separated by a space.'
        example: light_sensor
        type: string
    type: object
  RestApiRequestsWithApiKeyTokenCounter:
    description: The number of REST API requests made with access keys in web applications
      or other service integrations.
    format: int64
    minimum: 0
    type: integer
  RestApiRequestsWithUserTokenCounter:
    description: The number of REST API requests from user sessions in Device Management
      Portal.
    format: int64
    minimum: 0
    type: integer
  SAML2Info:
    description: Represents SAML2 specific attributes in responses.
    properties:
      assertion_endpoint:
        description: URL of the service provider's assertion endpoint. Leave this
          empty to use the default assertion endpoint.
        type: string
        x-nullable: true
      idp_entity_id:
        description: Entity ID of the identity provider.
        type: string
        x-nullable: true
      idp_x509_certs:
        description: List of public X509 certificates of the identity provider in
          PEM format.
        items:
          type: string
        type: array
        x-nullable: true
      slo_endpoint:
        description: URL of the identity provider's SLO endpoint.
        type: string
        x-nullable: true
      sp_entity_id:
        description: Entity ID of the service provider.
        type: string
        x-nullable: true
      sp_x509_cert:
        description: Public X509 certificate of the service provider in PEM format.
          This is a read-only attribute, see API documentation about how to generate
          a new one or how to delete it.
        readOnly: true
        type: string
        x-nullable: true
      sso_endpoint:
        description: URL of the identity provider's SSO endpoint.
        type: string
        x-nullable: true
    type: object
  SAML2Req:
    properties:
      entity_descriptor:
        description: Contains an entity descriptor document for the identity provider.
          Can be used as an alternative method to provide the identity provider's
          attributes.
        format: byte
        maxLength: 65535
        type: string
      idp_entity_id:
        description: Entity ID of the identity provider.
        type: string
      idp_x509_certs:
        description: List of public X509 certificates of the identity provider. Certificates
          must be in PEM format.
        items:
          type: string
        type: array
      slo_endpoint:
        description: URL of the identity provider's SLO endpoint.
        type: string
      sp_entity_id:
        description: Entity ID of the service provider. We recommend that you leave
          it empty and let the system generate it.
        type: string
      sso_endpoint:
        description: URL of the identity provider's SSO endpoint.
        type: string
    type: object
  SdaTokensCounter:
    description: The total number of devices included in the Secure Device Access
      tokens used in the requested time. A single Secure Device Access token can be
      linked to multiple endpoint names.
    format: int64
    minimum: 0
    type: integer
  SerializationConfigData:
    description: Serialization configuration for a channel.
    properties:
      cfg:
        $ref: '#/definitions/SerializationConfigObjectV2'
      max_chunk_size:
        description: Maximum number of messages in NotificationMessage container delivered
          in one request. Default is 10000. Using a very low value for high troughput
          applications may cause lag in notification delivery, as a new chunk is sent
          only after the previous one has been acknowledged. Using a high value is
          recommended and safe, as chunks are sent quickly after notifications are
          received from devices. See [notification sending logic](https://www.pelion.com/docs/device-management/current/integrate-web-app/event-notification.html#notification-sending-logic)
          for more details.
        example: '500'
        maximum: 10000
        minimum: 100
        type: integer
      type:
        default: v2
        description: 'Serialization type: v2 - specified in NotificationMessage.'
        enum:
        - v2
        example: v2
        type: string
    required:
    - type
    type: object
  SerializationConfigObjectV2:
    description: Serialization configuration object according to configuration type.
    properties:
      deregistrations_as_object:
        default: false
        description: 'Defines serialization format for ''de-registrations'' and ''registrations-expired''.
          If set to true,

          de-registration and registration-expired messages will be represented as
          json objects and can have

          additional fields: ''uid'', ''timestamp'', ''original-ep'', together with
          the ''ep'' field. If set to false,

          (default) - de-registration and ''registration-expired'' will be represented
          by a string,

          containing only data from ''ep'' field.

          '
        example: 'true'
        type: boolean
      include_original_ep:
        default: false
        description: 'Include ''original-ep'' message field in serialized objects.
          This is the endpoint_name from the device.

          '
        example: 'true'
        type: boolean
      include_timestamp:
        default: false
        description: 'Include ''timestamp'' message field in serialized objects. The
          timestamp represents the time that the notification service receives the
          message and sorts it into the queue. Timestamp provides information of queue
          length (web-app current time - timestamp = delay).

          '
        example: 'true'
        type: boolean
      include_uid:
        default: false
        description: 'Include ''uid'' message field to serialized objects. This is
          message ID, and can be used for duplicate detection.

          '
        example: 'true'
        type: boolean
    type: object
  ServerCredentialsResponseData:
    properties:
      created_at:
        description: Creation UTC time RFC3339.
        format: date-time
        type: string
      etag:
        description: API resource entity version.
        type: string
      id:
        description: Unique entity ID.
        type: string
      object:
        description: 'Entity name: always `server-credentials`.'
        type: string
      server_certificate:
        description: PEM-format X.509 server certificate used to validate the server
          certificate received during the TLS/DTLS handshake.
        type: string
      server_uri:
        description: Server URI that the client connects to.
        type: string
    type: object
  ServicePackageMetadata:
    description: Account's service package metadata. Value is `null` if service package
      has expired.
    properties:
      end_time:
        description: Service package end time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      remaining_quota:
        description: Current available service package quota.
        format: int64
        minimum: 0
        type: integer
      reserved_quota:
        description: Sum of all open reservations for this account.
        format: int64
        minimum: 0
        type: integer
      start_time:
        description: Service package start time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
    required:
    - start_time
    - end_time
    - remaining_quota
    - reserved_quota
    type: object
  ServicePackageQuota:
    description: Quota of the service package.
    properties:
      object:
        description: Always set to `service-package-quota`.
        enum:
        - service-package-quota
        type: string
      quota:
        description: Available quota for the service package.
        format: int64
        minimum: 0
        type: integer
    required:
    - object
    - quota
    type: object
  ServicePackageQuotaHistoryItem:
    description: Quota history item.
    properties:
      added:
        description: Added time of quota history entry in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      amount:
        description: Negative or positive quota usage.
        format: int64
        type: integer
      id:
        description: Service package quota history ID.
        maxLength: 32
        minLength: 32
        type: string
      reason:
        description: Type of quota usage entry.
        enum:
        - reservation
        - reservation_release
        - reservation_termination
        - package_creation
        - package_renewal
        - package_termination
        - package_tokens_edit
        type: string
      reservation:
        $ref: '#/definitions/ServicePackageQuotaHistoryReservation'
        description: Reservation details if reason is `reservation`, `reservation_release`
          or `reservation_termination`.
        type: object
      service_package:
        $ref: '#/definitions/ServicePackageQuotaHistoryServicePackage'
        description: Service package details if reason is `package_creation`, `package_renewal`,
          `package_termination`, or `package_tokens_edit`.
        type: object
    required:
    - id
    - added
    - amount
    - reason
    type: object
  ServicePackageQuotaHistoryReservation:
    description: Service package quota history reservation object.
    properties:
      account_id:
        description: Account ID.
        maxLength: 250
        minLength: 1
        type: string
      campaign_name:
        description: Campaign name for this reservation.
        maxLength: 250
        minLength: 1
        type: string
      id:
        description: Reservation ID.
        maxLength: 250
        minLength: 1
        type: string
    required:
    - id
    - account_id
    - campaign_name
  ServicePackageQuotaHistoryResponse:
    description: Quota history of the service package.
    properties:
      after:
        description: ID after which to fetch quota history.
        maxLength: 32
        minLength: 32
        type: string
      data:
        description: List of history items. Empty list if no entries are available.
        items:
          $ref: '#/definitions/ServicePackageQuotaHistoryItem'
        type: array
      has_more:
        description: If there is next available quota history paged response to fetch.
        type: boolean
      limit:
        description: Maximum number of quota history entries in one paged response.
        format: int32
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: Always set to `service-package-quota-history`.
        enum:
        - service-package-quota-history
        type: string
      order:
        description: History item record order based on creation time.
        type: string
      total_count:
        description: Sum of all quota history entries that should be returned.
        format: int32
        minimum: 0
        type: integer
    required:
    - object
    - data
    - has_more
    - limit
    - total_count
    - order
    type: object
  ServicePackageQuotaHistoryServicePackage:
    description: Service package quota history service package object.
    properties:
      expires:
        description: Service package expiration time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
      firmware_update_count:
        description: Size of firmware update quota of this service package.
        format: int32
        type: integer
      id:
        description: ID of this service package.
        type: string
      previous_id:
        description: Previous service package ID, or null.
        type: string
      start_time:
        description: Service package start time in RFC3339 date-time with millisecond
          accuracy and UTC time zone.
        format: date-time
        type: string
    required:
    - id
    - start_time
    - expires
    - firmware_update_count
  ServicePackageReport:
    description: Account's current service package data included in reporting.
    properties:
      aggregated_quota_usage:
        items:
          $ref: '#/definitions/AggregatedQuotaUsageReport'
        type: array
      metadata:
        $ref: '#/definitions/ServicePackageMetadata'
        description: '`Null` if service package has expired.'
        x-nullable: true
      quota_usage:
        items:
          $ref: '#/definitions/QuotaUsageReport'
        type: array
    required:
    - quota_usage
    type: object
  ServicePackagesResponse:
    description: Contains service package information for currently active service
      package, currently pending service package, and all previous service packages
      associated with the account.
    properties:
      active:
        $ref: '#/definitions/ActiveServicePackage'
        description: Currently active service package. Can be null.
        type: object
      object:
        description: Always set to `service-packages`.
        enum:
        - service-packages
        type: string
      pending:
        $ref: '#/definitions/PendingServicePackage'
        description: Current pending service package. Can be null.
        type: object
      previous:
        description: List of previous service packages.
        items:
          $ref: '#/definitions/PreviousServicePackage'
        type: array
    required:
    - object
    - previous
  StatisticsReportListResponse:
    properties:
      after:
        description: An offset token for the current page.
        example: '01631667477600000000000100100374'
        type: string
      data:
        description: List of manufacturing statistics.
        items:
          $ref: '#/definitions/StatisticsReportResponse'
        type: array
      end:
        example: '2020-03-30T07:30:00.000'
        format: date-time
        type: string
      has_more:
        description: Indicates whether additional results are available.
        example: false
        type: boolean
      limit:
        description: The number of results to return (2-1000). Values outside of this
          range are set to the closest limit.
        example: 50
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: The API object type. The object type of this API is "list".
        example: list
        type: string
      order:
        description: Record order based on record identifier.
        example: DESC
        type: string
      start:
        example: '2020-03-29T07:30:00.000'
        format: date-time
        type: string
      total_count:
        example: 100
        format: integer
        type: integer
    type: object
  StatisticsReportResponse:
    properties:
      avg_provisioning_time_sec:
        description: Average provisioning time in seconds.
        example: '2.5'
        type: number
      device_count:
        description: Number of manufactured devices.
        example: '103'
        type: integer
      factory_id:
        description: Factory ID.
        example: '164'
        type: integer
      factory_name:
        description: Factory name.
        example: factory 1
        type: string
      id:
        description: Unique row identifier.
        example: 01612df56f3b0a580a010fc700000000
        format: uuid
        pattern: '[a-fA-F0-9]{32}'
        type: string
      max_provisioning_time_sec:
        description: Maximum provisioning time in seconds.
        example: '3.1'
        type: number
      min_provisioning_time_sec:
        description: Minimum provisioning time in seconds.
        example: '2.2'
        type: number
      workstation:
        description: Workstation.
        example: ws_1
        type: string
    type: object
  StatisticsSeriesRecord:
    description: Statistics view record.
    properties:
      active_devices:
        $ref: '#/definitions/ActiveDevicesCounter'
      device_to_pelion_messages:
        $ref: '#/definitions/DeviceToPelionMessagesCounter'
      firmware_updates:
        $ref: '#/definitions/FirmwareUpdatesCounter'
      id:
        description: Metric ID.
        pattern: '[0-9a-fA-F]{32}'
        type: string
      object:
        description: Always `billing-statistics`.
        enum:
        - billing-statistics
        type: string
      pelion_to_device_messages:
        $ref: '#/definitions/PelionToDeviceMessagesCounter'
      pelion_to_webapp_notifications:
        $ref: '#/definitions/PelionToWebappNotificationsCounter'
      rest_api_requests_with_api_key_token:
        $ref: '#/definitions/RestApiRequestsWithApiKeyTokenCounter'
      rest_api_requests_with_user_token:
        $ref: '#/definitions/RestApiRequestsWithUserTokenCounter'
      sda_tokens:
        $ref: '#/definitions/SdaTokensCounter'
      timestamp:
        description: 'The start of the interval for which the data is aggregated,
          in RFC3339 date-time format with millisecond accuracy and UTC time zone.

          Each interval includes data for the time greater than or equal to the timestamp
          and less than the next interval''s starting.'
        format: date-time
        type: string
    required:
    - object
    - id
    - timestamp
    - active_devices
    - firmware_updates
    - sda_tokens
    type: object
  StatisticsViewResponse:
    description: Contains the statistics view of Device Management usage information.
    properties:
      after:
        description: The ID after which to fetch the statistics view.
        pattern: '[0-9a-fA-F]{32}'
        type: string
      data:
        description: List of statistics view records. Empty list if no records are
          available.
        items:
          $ref: '#/definitions/StatisticsSeriesRecord'
        type: array
      has_more:
        description: Indicates whether a new statistics view response is available.
        type: boolean
      limit:
        default: 50
        description: Maximum number of statistics view records on a page.
        format: int32
        maximum: 1000
        minimum: 2
        type: integer
      object:
        description: Always `list`.
        enum:
        - list
        type: string
      order:
        description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        type: string
      total_count:
        description: Sum of all statistics view records to return. Included in the
          response when you use the query parameter include=total_count.
        format: int64
        minimum: 0
        type: integer
    required:
    - object
    - data
    - has_more
    - limit
    - order
    type: object
  SubjectList:
    description: Represents arrays of user and API key IDs.
    properties:
      apikeys:
        description: An array of API key IDs.
        items:
          type: string
        type: array
        x-deprecation:
          comment: This field is deprecated, use 'applications'
          end_of_life_at: '2021-08-01T00:00:00+00:00'
          issued_at: '2020-08-01T00:00:00+00:00'
          links: []
      applications:
        description: An array of applicationIDs.
        items:
          type: string
        type: array
      users:
        description: An array of user IDs.
        items:
          type: string
        type: array
    type: object
  SubscriptionsCounter:
    description: The number of subscription requests sent to devices.
    format: int64
    minimum: 0
    type: integer
  SubscriptionsList:
    description: A list of resource URIs, one per line.
    example: /sen/light
    type: string
  SubtenantAccountReport:
    description: Billing report for tenant account.
    properties:
      account:
        $ref: '#/definitions/SubtenantReportAccountContactInfo'
        description: Tenant account contact information.
      billing_data:
        $ref: '#/definitions/ReportBillingData'
        description: Report billing data.
      service_package:
        $ref: '#/definitions/SubtenantServicePackageReport'
        description: service package report for the tenant.
    required:
    - account
    - billing_data
    type: object
  SubtenantReportAccountContactInfo:
    description: Tenant account contact information.
    properties:
      address_line1:
        type: string
      address_line2:
        type: string
      alias:
        type: string
      business_model:
        description: The business model selected for the account to generate the billing
          reports.
        enum:
        - active_device_business_model
        - api_calls_1_business_model
        type: string
      city:
        type: string
      company:
        type: string
      contact:
        type: string
      country:
        type: string
      customer_subtenant_id:
        description: Account tenant ID, valid only for tenants.
        type: string
      email:
        type: string
      id:
        description: Account ID.
        type: string
      phone_number:
        type: string
      postal_code:
        type: string
      state:
        type: string
    required:
    - id
    - company
    - customer_subtenant_id
    type: object
  SubtenantServicePackageReport:
    properties:
      quota_usage:
        items:
          $ref: '#/definitions/QuotaUsageReport'
        type: array
    required:
    - quota_usage
    type: object
  TierHistory:
    properties:
      tier:
        description: 'The tier level of the account; `0`: free tier, `1`: commercial
          account, `2`: partner tier. Other values are reserved for the future.'
        example: '1'
        type: string
      updatedAt:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
    type: object
  TokenRequest:
    properties:
      aud:
        description: 'Array of \<type\>:\<identity\> tuples representing devices for
          which access is being requested. There must be at least one id/ep tuple.<br/>
          \<type\> ::= id|ep <br/> \<identity\>::=[a-zA-Z0-9+/=- ]+ <br/>\<audience\>
          :== \<type\> ":" \<identity\>  <br/> \<identity\> can be up to 60 characters
          long, and can contain spaces. <br/>

          The audience array can contain up to 50 tuples. If IAM does not authorize
          even one item in the list, Secure Device Access does not authorize the whole
          request and does not return an access token (access denied).'
        items:
          $ref: '#/definitions/AudienceItem'
        maxItems: 50
        minItems: 1
        type: array
      cnf:
        description: The Android application proof-of-possession public key.
        format: The public key in PEM format.
        type: string
      grant_type:
        description: Hardcoded - can only be "client_credentials".
        type: string
      scope:
        description: The space-delimited list of operations that user is requesting
          permission for. The array must contain at least one scope item. A scope
          item can have up to 60 characters. A scope list can hold up to 20 scope
          items. <br/> \<scope\>::=[a-zA-Z][a-zA-Z0-9-]* <br/> \<scope-list\>::= \<scope\>
          | \<scope\> " " | \<scope\> " " \<scope-list\> <br/> The scope being requested
          must match the action that the Android application eventually performs on
          the IoT device. The device matches the scope in the access token to the
          action requested in the operation bundle.
        format: scope-item scope-item ...
        type: string
    required:
    - grant_type
    - aud
    - scope
    - cnf
    type: object
  TokenResponse:
    properties:
      access_token:
        description: The generated CWT (CBOR Web Token) access token as a Base64 string.
        format: byte
        type: string
      granted_until:
        description: Grant expiration UTC time RFC3339.
        format: date-time
        type: string
    type: object
  TransactionsCounter:
    description: A transaction is a data block of 512 bytes processed by Device Management.
      It can be sent either by the device (device --> Device Management) or received
      by the device (Device Management --> device). A transaction does not include
      IP, TCP or UDP, TLS or DTLS packet overhead. It only contains the packet payload
      (full CoAP packet including CoAP headers).
    format: int64
    minimum: 0
    type: integer
  TrustAnchorResponse:
    properties:
      created_at: *id017
      description:
        description: The updated notes about the trust anchor.
        format: free text
        maxLength: 256
        minLength: 1
        type: string
      etag: *id018
      fingerprint:
        description: The SHA256 of the trust anchor public key; the prefix 'mbed.ta.'
          followed by the trust anchor public key as a SHA256 hash in Base64-encoded
          DER format.
        format: byte
        type: string
      id: *id019
      object: *id020
      public_key:
        description: The trust anchor public key in PEM format.
        format: byte
        type: string
      public_key_der:
        description: The generated trust anchor public key in Base64-encoded DER format.
        format: byte
        type: string
      updated_at: *id021
    type: object
  TrustedCertificateReq:
    description: Represents a trusted certificate in upload requests.
    properties:
      certificate:
        description: A chain of X509.v3 trusted certificates in PEM format. The chain
          must contain all certificates from root to leaf. Otherwise, the signature
          parameter is required.
        type: string
      description:
        description: Human readable description of this certificate.
        maxLength: 500
        type: string
        x-nullable: true
      enrollment_mode:
        description: 'DEPRECATED: Certificate is used in enrollment mode. Default
          value is false.'
        type: boolean
        x-deprecation:
          comment: This field is deprecated, do not use it anymore.
          end_of_life_at: '2021-11-01T00:00:00+00:00'
          issued_at: '2020-11-01T00:00:00+00:00'
          links: []
      name:
        description: Certificate name.
        maxLength: 100
        type: string
      service:
        description: Service name where the certificate must be used.
        enum:
        - lwm2m
        - bootstrap
        type: string
      signature:
        description: 'DEPRECATED: Base64 encoded signature of the account ID signed
          by the certificate to upload. The signature must be hashed with SHA256.'
        type: string
      status:
        description: Status of the certificate.
        enum:
        - ACTIVE
        - INACTIVE
        type: string
    required:
    - certificate
    - name
    - service
    type: object
  TrustedCertificateResp:
    description: Represents a trusted certificate in responses.
    properties:
      account_id:
        description: The ID of the account.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      certificate:
        description: X509.v3 trusted certificate in PEM format.
        example: '-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----'
        type: string
      certificate_fingerprint:
        description: A SHA-256 fingerprint of the certificate.
        example: a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      description:
        description: Human readable description of this certificate.
        example: Certificate created by me.
        maxLength: 500
        type: string
        x-nullable: true
      device_execution_mode:
        description: Device execution mode where 1 means a developer certificate.
        example: 1
        format: int32
        type: integer
      enrollment_mode:
        description: 'DEPRECATED: Certificate is used in enrollment mode. Default
          value is false.'
        example: false
        type: boolean
        x-deprecation:
          comment: This field is deprecated, do not use it anymore.
          end_of_life_at: '2021-11-01T00:00:00+00:00'
          issued_at: '2020-11-01T00:00:00+00:00'
          links: []
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      id:
        description: Entity ID.
        example: 01619571d01d0242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      issuer:
        description: Issuer of the certificate.
        example: CN=issuer
        type: string
      name:
        description: Certificate name.
        example: My certificate
        maxLength: 100
        type: string
      object:
        description: 'Entity name: always ''trusted-cert'''
        enum:
        - trusted-cert
        type: string
      owner_id:
        description: The ID of the owner.
        example: 01619571dad80242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
        x-nullable: true
      service:
        description: Service name where the certificate is used.
        enum:
        - lwm2m
        - bootstrap
        type: string
      status:
        description: Status of the certificate.
        enum:
        - ACTIVE
        - INACTIVE
        example: ACTIVE
        type: string
      subject:
        description: Subject of the certificate.
        example: CN=subject
        type: string
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
      valid:
        description: This read-only flag indicates whether the certificate is valid
          or not.
        example: true
        readOnly: true
        type: boolean
      validity:
        description: Expiration time in UTC formatted as RFC3339.
        example: '2038-02-14T15:24:14Z'
        format: date-time
        type: string
    required:
    - account_id
    - certificate
    - certificate_fingerprint
    - etag
    - id
    - issuer
    - name
    - object
    - service
    - subject
    - validity
    type: object
  TrustedCertificateRespList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/TrustedCertificateResp'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return (2-1000), or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  TrustedCertificateUpdateReq:
    description: Represents a trusted certificate in update requests.
    properties:
      certificate:
        description: A chain of X509.v3 trusted certificates in PEM format. The chain
          must contain all certificates from root to leaf. Otherwise, the signature
          parameter is required.
        type: string
      description:
        description: Human readable description of this certificate.
        maxLength: 500
        type: string
        x-nullable: true
      enrollment_mode:
        description: Certificate is used in enrollment mode. Default value is false.
        type: boolean
      name:
        description: Certificate name.
        maxLength: 100
        type: string
      service:
        description: Service name where the certificate must be used. Service cannot
          be updated for developer certificates.
        enum:
        - lwm2m
        - bootstrap
        type: string
      signature:
        description: 'DEPRECATED: Base64 encoded signature of the account ID signed
          by the certificate to be uploaded. The signature must be hashed with SHA256.'
        type: string
      status:
        description: Status of the certificate.
        enum:
        - ACTIVE
        - INACTIVE
        type: string
    type: object
  UnauthorizedErrorResponse:
    description: 401 Unauthorized response.
    properties:
      code:
        description: Response code. Always set to 401.
        enum:
        - 401
        type: integer
      message:
        description: A human-readable message with detailed info.
        type: string
      object:
        description: Always set to `error`.
        enum:
        - error
        type: string
      request_id:
        description: Request ID
        type: string
      type:
        description: Error type. Always set to `unauthorized`.
        enum:
        - unauthorized
        type: string
    required:
    - object
    - message
    - request_id
    - type
    - code
    type: object
  UpdateCampaign:
    properties:
      active_at:
        description: The time the campaign entered the active state.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      approval_required:
        description: Flag indicating whether approval is needed to start the campaign.
        example: 'false'
        type: boolean
      archived_at:
        description: The time the campaign was archived.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      autostop:
        description: Flag indicating whether the campaign should be auto-stopped on
          reaching a threshold.
        example: 'false'
        type: boolean
      autostop_reason:
        description: Text description of why a campaign failed to start or why a campaign
          stopped.
        example: Insufficient billing credit.
        type: string
      autostop_success_percent:
        description: Percent of successful device updates to auto stop the campaign.
        example: '85.00'
        format: double
        type: number
      campaign_strategy: &id022
        default: one-shot
        description: How the campaign adds devices. A `one-shot` campaign does not
          add new devices after it has started. A `continuous` campaign means that
          devices may be added to the campaign after it has started. The default is
          `one-shot`.
        enum:
        - one-shot
        - continuous
        type: string
      created_at: *id014
      description:
        description: An optional description of the campaign.
        example: This campaign updates Class XX devices to version 1.34
        maxLength: 2000
        type: string
      device_filter:
        description: The filter for the devices the campaign targets. Refer to this
          using the filter ID.
        example: state__eq=registered
        type: string
      etag: *id015
      finished:
        description: The time the campaign finished.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        description: The campaign ID.
        example: 016e83ddc648000000000001001000f5
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name:
        description: The campaign name.
        example: campaign
        maxLength: 128
        type: string
      object:
        description: 'Entity name: always ''update-campaign''.'
        example: update-campaign
        type: string
      phase:
        description: The phase of the campaign.
        enum:
        - draft
        - awaiting_approval
        - timed
        - starting
        - active
        - stopping
        - stopped
        - deleted
        - archived
        type: string
      root_manifest_id:
        description: The ID of the manifest that will be sent to the device as part
          of the campaign.
        example: 016e83dce36a00000000000100100102
        type: string
      root_manifest_url:
        description: The URL for the manifest that will be sent to the device as part
          of the campaign.
        example: https://api.us-east-1.mbedcloud.com/v3/firmware-manifests/016e83dce36a00000000000100100102
        type: string
      started_at:
        description: The time the campaign was started.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      starting_at:
        description: The time the campaign will be started.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      state:
        description: The state of the campaign.
        enum:
        - draft
        - scheduled
        - allocatingquota
        - allocatedquota
        - quotaallocationfailed
        - checkingmanifest
        - checkedmanifest
        - devicefetch
        - devicecopy
        - devicecheck
        - publishing
        - deploying
        - deployed
        - manifestremoved
        - expired
        - stopping
        - autostopped
        - userstopped
        - conflict
        type: string
        x-deprecation:
          comment: Use phase instead
          end_of_life_at: '2020-03-18T14:55:20+00:00'
          issued_at: '2019-03-18T14:55:20+00:00'
          links: []
      stopped_at:
        description: The time the campaign was stopped.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      stopping_at:
        description: The time the campaign will be stopped.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      updated_at: *id016
      when:
        description: The scheduled start time for the campaign. The campaign will
          start within 1 minute when then start time has elapsed.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
        x-nullable: true
  UpdateCampaignEqNeqFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      description:
        type: string
      device_filter:
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      finished:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name:
        type: string
      root_manifest_id:
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      started_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      state:
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      when:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  UpdateCampaignGteLteFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      finished:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      started_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      when:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
        x-nullable: true
  UpdateCampaignInNinFilter:
    properties:
      created_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      description:
        type: string
      device_filter:
        type: string
      etag:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      finished:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      id:
        example: 015c3029f6f7000000000001001000c3
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name:
        type: string
      root_manifest_id:
        example: 015c6029f6f9000000000001001000f4
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      started_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      state:
        type: string
      updated_at:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
      when:
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
  UpdateCampaignPage:
    properties:
      after:
        example: null
        type: string
      data:
        items:
          $ref: '#/definitions/UpdateCampaign'
        type: array
      has_more:
        type: boolean
      limit:
        type: integer
      object:
        description: 'Entity name: always ''list''.'
        example: list
        type: string
      order:
        description: 'The order of the records to return. Acceptable values: ASC,
          DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        type: integer
  UpdateCampaignPostRequest:
    properties:
      approval_required:
        default: false
        type: boolean
      autostop:
        default: true
        type: boolean
      autostop_success_percent:
        default: 100.0
        type: number
      campaign_strategy: *id022
      description:
        description: An optional description of the campaign.
        example: a description
        maxLength: 2000
        type: string
      device_filter:
        description: The filter for the devices the campaign targets. Refer to this
          using the filter ID.
        example: state__eq=registered
        type: string
      name:
        default: default_object_name
        description: The name for this campaign.
        maxLength: 128
        type: string
      root_manifest_id:
        example: 016e83b46477000000000001001001f3
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      state:
        description: 'DEPRECATED: The state of the campaign (use phase instead)'
        enum:
        - draft
        - scheduled
        type: string
        x-deprecation:
          comment: Use phase instead
          end_of_life_at: '2020-03-18T14:55:20+00:00'
          issued_at: '2019-03-18T14:55:20+00:00'
          links: []
      when:
        description: The scheduled start time for the update campaign. Not in use.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
        x-nullable: true
    required:
    - device_filter
  UpdateCampaignPutRequest:
    properties:
      approval_required:
        default: false
        type: boolean
      autostop:
        default: true
        type: boolean
      autostop_success_percent:
        default: 100.0
        type: number
      description:
        description: An optional description of the campaign.
        example: description
        format: free text
        maxLength: 2000
        type: string
      device_filter:
        description: The filter for the devices the campaign targets. Refer to this
          using the filter ID.
        example: state__eq=registered
        type: string
      name:
        description: The campaign's name.
        example: campaign
        format: free text
        maxLength: 128
        type: string
      root_manifest_id:
        example: 016e83dce36a00000000000100100201
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      state:
        description: 'DEPRECATED: The state of the campaign (use phase instead).'
        enum:
        - draft
        - scheduled
        - allocatingquota
        - allocatedquota
        - quotaallocationfailed
        - checkingmanifest
        - checkedmanifest
        - devicefetch
        - devicecopy
        - devicecheck
        - publishing
        - deploying
        - deployed
        - manifestremoved
        - expired
        - stopping
        - autostopped
        - userstopped
        - conflict
        type: string
        x-deprecation:
          comment: Use phase instead
          end_of_life_at: '2020-03-18T14:55:20+00:00'
          issued_at: '2019-03-18T14:55:20+00:00'
          links: []
      when:
        description: The scheduled start time for the update campaign. Not in use.
        example: '2017-05-22T12:37:55.576563Z'
        format: date-time
        type: string
        x-nullable: true
  UpdateTrustAnchorRequest:
    properties:
      description:
        description: The new description for the trust anchor.
        format: free text
        maxLength: 256
        minLength: 1
        type: string
    required:
    - description
    type: object
  UpdateTrustAnchorResponse:
    properties:
      created_at: *id017
      description:
        description: The updated notes about the trust anchor.
        format: free text
        maxLength: 256
        minLength: 1
        type: string
      etag: *id018
      fingerprint:
        description: The SHA256 of the trust anchor public key; the prefix 'mbed.ta.'
          followed by the trust anchor public key as a SHA256 hash in Base64-encoded
          DER format.
        format: byte
        type: string
      id: *id019
      object: *id020
      public_key:
        description: The trust anchor public key in PEM format.
        format: byte
        type: string
      public_key_der:
        description: The generated trust anchor public key in Base64-encoded DER format.
        format: byte
        type: string
      updated_at: *id021
    type: object
  UploadChunkInfo:
    properties:
      created_at: *id014
      etag: *id015
      hash:
        description: The hash of the chunk. The default hash is MD5. If no Content-MD5
          header is supplied as part of uploading the chunk then this will be empty.
        type: string
      id:
        description: The chunk number.
        example: 1
        type: integer
      length:
        description: The length of the chunk.
        example: 1234
        type: integer
      object:
        description: 'Entity name: always ''upload-info''.'
        example: upload-info
        type: string
      updated_at: *id016
      upload_job_id:
        description: The upload job ID.
        example: '00000000000000000000000000000000'
        type: string
    type: object
  UploadChunkInfoPage:
    properties:
      after:
        example: null
        type: string
      data:
        items:
          $ref: '#/definitions/UploadChunkInfo'
        type: array
      has_more:
        type: boolean
      limit:
        format: int32
        type: integer
      object:
        description: 'Entity name: always ''list''.'
        example: list
        type: string
      order:
        description: 'The order of the records to return. Acceptable values: ASC,
          DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        format: int32
        type: integer
  UploadJob:
    properties:
      complete:
        description: A flag that indicates job completion.
        example: false
        type: boolean
      created_at: *id014
      description: &id035
        description: Human-readable description.
        example: New Linux update for my devices
        maxLength: 2000
        type: string
      etag: *id015
      firmware_image_id:
        description: ID of the firmware image - empty until the upload job is complete.
        example: 016e652be671000000000001001001a8
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      id:
        description: The upload job ID.
        example: 016e652be671000000000001001001e5
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      name: &id036
        description: Human-readable name.
        example: New Linux update
        maxLength: 128
        type: string
      object:
        description: 'Entity name: always ''upload-job''.'
        example: upload-job
        type: string
      status:
        description: Status of the upload job.
        example: in_progress
        type: string
      updated_at: *id016
    type: object
  UploadJobPage:
    properties:
      after:
        example: null
        type: string
      data:
        items:
          $ref: '#/definitions/UploadJob'
        type: array
      has_more:
        type: boolean
      limit:
        format: int32
        type: integer
      object:
        description: 'Entity name: always ''list''.'
        example: list
        type: string
      order:
        description: 'The order of the records to return. Acceptable values: ASC,
          DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      total_count:
        format: int32
        type: integer
  UserInfoReq:
    description: Represents a user in requests towards Device Management.
    properties:
      address:
        description: Address.
        maxLength: 100
        type: string
        x-nullable: true
      email:
        description: The email address.
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
      full_name:
        description: The full name of the user.
        maxLength: 100
        type: string
        x-nullable: true
      groups:
        description: A list of IDs of the groups this user belongs to.
        items:
          type: string
        type: array
      is_gtc_accepted:
        description: A flag indicating that the user has accepted General Terms and
          Conditions.
        type: boolean
      is_marketing_accepted:
        description: A flag indicating that the user has consented to receive marketing
          information.
        type: boolean
      login_profiles:
        description: A list of login profiles for the user. Specified as the identity
          providers the user should be associated with. Only the ID attribute of the
          login profile should be set in the request object.
        items:
          $ref: '#/definitions/LoginProfile'
        type: array
      password:
        description: The password for a new user. Generated when not present in the
          request.
        type: string
        x-nullable: true
      phone_number:
        description: Phone number.
        maxLength: 100
        type: string
        x-nullable: true
      username:
        description: A username.
        pattern: '[\w\-,._@+=]{4,30}'
        type: string
        x-nullable: true
    required:
    - email
    type: object
  UserInfoResp:
    description: Represents a user in Device Management.
    properties:
      account_id:
        description: The ID of the account.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      active_sessions:
        description: List of active user sessions.
        items:
          $ref: '#/definitions/ActiveSession'
        type: array
      address:
        description: Address.
        example: 110 Fulbourn Rd, Cambridge, United Kingdom
        type: string
        x-nullable: true
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      creation_time:
        description: A timestamp of the user creation in the storage, in milliseconds.
        example: 1518630727683
        format: int64
        type: integer
      custom_fields:
        additionalProperties:
          type: string
        description: User's account-specific custom properties. The value is a string.
        type: object
        x-nullable: true
      email:
        description: The email address.
        example: user@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
      email_verified:
        description: A flag indicating whether the user's email address has been verified
          or not.
        example: true
        type: boolean
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      full_name:
        description: The full name of the user.
        example: User Doe
        maxLength: 100
        type: string
        x-nullable: true
      groups:
        description: A list of IDs of the groups this user belongs to.
        items:
          type: string
        type: array
      id:
        description: The ID of the user.
        example: 01619571e2e89242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      is_gtc_accepted:
        description: A flag indicating that the user has accepted General Terms and
          Conditions.
        example: true
        type: boolean
      is_marketing_accepted:
        description: A flag indicating that the user has consented to receive marketing
          information.
        example: true
        type: boolean
      is_totp_enabled:
        description: A flag indicating whether two-factor authentication (TOTP) has
          been enabled.
        example: true
        type: boolean
      last_login_time:
        description: A timestamp of the latest login of the user, in milliseconds.
        example: 1518630727688
        format: int64
        type: integer
      login_history:
        description: Timestamps, succeedings, IP addresses and user agent information
          of the last five logins of the user, with timestamps in RFC3339 format.
        items:
          $ref: '#/definitions/LoginHistory'
        maxItems: 5
        type: array
      login_profiles:
        description: A list of login profiles for the user. Specified as the identity
          providers the user is associated with.
        items:
          $ref: '#/definitions/LoginProfile'
        type: array
        x-nullable: true
      object:
        description: 'Entity name: always `user`.'
        enum:
        - user
        type: string
      password:
        description: The password when creating a new user. It will be generated when
          not present in the request.
        example: PZf9eEUH43DAPE9ULINFeuj
        type: string
        x-nullable: true
      password_changed_time:
        description: A timestamp of the latest change of the user password, in milliseconds.
        example: 1518630727688
        format: int64
        type: integer
      phone_number:
        description: Phone number.
        example: +44 (1223) 400 400
        maxLength: 100
        type: string
        x-nullable: true
      status:
        description: The status of the user. ENROLLING state indicates that the user
          is in the middle of the enrollment process. INVITED means that the user
          has not accepted the invitation request. RESET means that the password must
          be changed immediately. INACTIVE users are locked out and not permitted
          to use the system.
        enum:
        - ENROLLING
        - INVITED
        - ACTIVE
        - RESET
        - INACTIVE
        example: ACTIVE
        type: string
      totp_scratch_codes:
        description: A list of scratch codes for the two-factor authentication. Visible
          only when 2FA is requested to be enabled or the codes regenerated.
        items:
          type: string
        type: array
        x-nullable: true
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
      username:
        description: A username.
        example: admin
        pattern: '[\w\-,._@+=]{4,30}'
        type: string
        x-nullable: true
    required:
    - account_id
    - email
    - etag
    - id
    - object
    - status
    type: object
  UserInfoRespList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/UserInfoResp'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return (2-1000), or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  UserInvitationReq:
    description: Represents a user invitation in requests towards Device Management.
    properties:
      email:
        description: The email address.
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
      groups:
        description: A list of IDs of the groups this user has been invited to.
        items:
          type: string
        type: array
      login_profiles:
        description: A list of login profiles for the user. Specified as the identity
          providers the user should be associated with. Only the ID attribute of the
          login profile should be set in the request object.
        items:
          $ref: '#/definitions/LoginProfile'
        type: array
      valid_for_days:
        default: 30
        description: Specifies how many days the invitation will be valid for.
        format: int32
        maximum: 100
        minimum: 1
        type: integer
    required:
    - email
    type: object
  UserInvitationResp:
    description: Represents an user invitation in responses.
    properties:
      account_id:
        description: The ID of the account the user is invited to.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      created_at:
        description: Creation UTC time RFC3339.
        example: '2018-02-13T09:35:20Z'
        format: date-time
        type: string
      email:
        description: Email address of the invited user.
        example: friend@arm.com
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
      etag:
        description: API resource entity version.
        example: '1'
        type: string
      expiration:
        description: Invitation expiration as UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
      groups:
        description: A list of IDs of the groups the user is invited to.
        items:
          type: string
        type: array
      id:
        description: The ID of the invitation.
        example: 01619571e2e89242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      login_profiles:
        description: A list of login profiles for the user. Specified as the identity
          providers the user is associated with.
        items:
          $ref: '#/definitions/LoginProfile'
        type: array
        x-nullable: true
      object:
        description: 'Entity name: always ''user-invitation'''
        enum:
        - user-invitation
        type: string
      updated_at:
        description: Last update UTC time RFC3339.
        example: '2018-02-14T15:24:14Z'
        format: date-time
        type: string
      user_id:
        description: The ID of the invited user.
        example: 01619571e2e90242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
    required:
    - account_id
    - email
    - etag
    - id
    - object
    - user_id
    type: object
  UserInvitationRespList:
    properties:
      after:
        description: The entity ID to retrieve after the given one.
        example: 01619571f3c00242ac12000600000000
        pattern: '[a-f0-9]{32}'
        type: string
      data:
        description: A list of entities.
        items:
          $ref: '#/definitions/UserInvitationResp'
        type: array
      has_more:
        description: Flag indicating whether there are more results.
        example: false
        type: boolean
      limit:
        description: The number of results to return (2-1000), or equal to `total_count`.
        example: 50
        format: int32
        type: integer
      object:
        description: 'Entity name: always `list`.'
        enum:
        - list
        type: string
      order:
        description: 'The order of the records to return based on creation time. Available
          values: ASC, DESC; by default ASC.'
        enum:
        - ASC
        - DESC
        type: string
      total_count:
        description: The total number of records, if requested.
        example: 20
        format: int32
        type: integer
    required:
    - data
    - has_more
    - limit
    - object
    - total_count
    type: object
  UserUpdateReq:
    description: Represents a user in requests towards Device Management.
    properties:
      address:
        description: Address.
        maxLength: 100
        type: string
        x-nullable: true
      email:
        description: The email address. Not allowed to update other user's email address.
        pattern: ^(?=.{3,254}$).+\@.+
        type: string
        x-nullable: true
      full_name:
        description: The full name of the user.
        maxLength: 100
        type: string
        x-nullable: true
      groups:
        description: A list of group IDs this user belongs to. Can be updated by the
          Account Admin only.
        items:
          type: string
        type: array
        x-nullable: true
      is_gtc_accepted:
        description: A flag indicating that the user has accepted General Terms and
          Conditions.
        type: boolean
        x-nullable: true
      is_marketing_accepted:
        description: A flag indicating that the user has consented to receive marketing
          information.
        type: boolean
        x-nullable: true
      is_totp_enabled:
        description: A flag indicating whether two-factor authentication (TOTP) is
          enabled. An account administrator can disable it, but cannot enable it for
          other users.
        type: boolean
        x-nullable: true
      login_profiles:
        description: '''A list of login profiles for the user, specified as identity
          providers associated with the user. Only the ID attribute of the login profile
          should be set in the request object. The list cannot be empty. Only an account
          admin may update login profiles.'''
        items:
          $ref: '#/definitions/LoginProfile'
        type: array
        x-nullable: true
      phone_number:
        description: Phone number.
        maxLength: 100
        type: string
        x-nullable: true
      status:
        description: The status of the user. ENROLLING indicates that the user is
          in the middle of the enrollment process. INVITED means that the user has
          not accepted the invitation request. RESET means that the password must
          be changed immediately. INACTIVE users are locked out and not permitted
          to use the system. Can be changed by the Aggregator Admin only.
        enum:
        - ENROLLING
        - INVITED
        - ACTIVE
        - RESET
        - INACTIVE
        example: ACTIVE
        type: string
        x-nullable: true
      username:
        description: A username.
        pattern: '[\w\-,._@+=]{4,30}'
        type: string
        x-nullable: true
    type: object
  Webhook:
    properties:
      headers:
        additionalProperties:
          type: string
        description: The headers (key/value) sent with the notification. Optional.
        example: '{"authorization" : "f4b93d6e-4652-4874-82e4-41a3ced0cd56"}'
        type: object
      serialization:
        $ref: '#/definitions/SerializationConfigData'
      url:
        description: The URL to which the notifications are sent. We recommend that
          you serve this URL over HTTPS.
        example: https://www.example.com/my-webhook
        type: string
    required:
    - url
    type: object
  WebsocketChannel:
    properties:
      queue_size:
        default: 0
        description: Number of events in the channel's event queue waiting to be delivered.
          If the server cannot determine the queue size the value will be set to `-1`.
        example: 0
        type: integer
      serialization:
        $ref: '#/definitions/SerializationConfigData'
      status:
        default: disconnected
        description: Channel status is 'connected' when the channel has an active
          WebSocket bound to it. The status is 'disconnected' when either the channel
          or the WebSocket bound to it is closed and 'unknown' when the server cannot
          determine it.
        enum:
        - connected
        - disconnected
        - unknown
        example: disconnected
        type: string
    type: object
  error-response:
    properties:
      code:
        description: HTTP response code.
        format: int32
        type: integer
      fields:
        description: Details of the error fields.
        items:
          $ref: '#/definitions/fields'
        type: array
      message:
        description: Description of the error.
        type: string
      object:
        description: Response type, always "error".
        type: string
      request_id:
        description: Request ID.
        type: string
      type:
        description: Type of error.
        type: string
    type: object
  fields:
    properties:
      message:
        description: Error description.
        type: string
      name:
        description: The field name in the request for which the validation has failed.
        type: string
    type: object
  metric:
    properties:
      bootstraps_failed:
        description: The number of failed bootstraps the account has performed. Bootstrap
          is the process of provisioning a Lightweight Machine to Machine Client to
          a state where it can initiate a management session to a new Lightweight
          Machine to Machine Server.
        format: int64
        type: integer
      bootstraps_pending:
        description: The number of pending bootstraps the account has performed. Bootstrap
          is the process of provisioning a Lightweight Machine to Machine Client to
          a state where it can initiate a management session to a new Lightweight
          Machine to Machine Server.
        format: int64
        type: integer
      bootstraps_successful:
        description: The number of successful bootstraps the account has performed.
          Bootstrap is the process of provisioning a Lightweight Machine to Machine
          Client to a state where it can initiate a management session to a new Lightweight
          Machine to Machine Server.
        format: int64
        type: integer
      connect_rest_api_error:
        description: The number of failed [Connect API](/docs/current/service-api-references/device-management-connect.html)
          requests that have been performed using the account. This metric does not
          consider the response from the device, it includes only the responses to
          the HTTP requests used to manage the device. This metric includes only messages
          handled by the Connect service, it does not include any HTTP errors returned
          by firewall as result of malformed messages. The number of failed [Connect
          API](https://www.pelion.com/docs/device-management-api/connect/) requests
          that have been performed using the account. This metric does not consider
          the response from the device, it includes only the responses to the HTTP
          requests used to manage the device. This metric includes only messages handled
          by the Connect service, not any HTTP errors returned by the firewall as
          a result of incorrect messages.
        format: int64
        type: integer
      connect_rest_api_success:
        description: The number of successful [Connect API](/docs/current/service-api-references/device-management-connect.html)
          requests that have been performed using the account. This metric does not
          consider the response from the device, it includes only the responses to
          the HTTP requests used to manage the device. The number of successful [Connect
          API](https://www.pelion.com/docs/device-management-api/connect/) requests
          that have been performed using the account. This metric does not consider
          the response from the device, only the responses to the HTTP requests used
          to manage the device.
        format: int64
        type: integer
      deleted_registrations:
        description: The number of deleted registrations (deregistrations) linked
          to the account. Deregistration is the process of removing the device registration
          from the Device Management Connect registry. The deregistration is usually
          initiated by the device. Device Management Connect no longer handles requests
          for a deregistered device.
        format: int64
        type: integer
      device_observations:
        description: '**(Beta)** The number of notifications received by the Device
          Management Connect service from the devices linked to the account. The device
          pushes notifications to Device Management Connect when you have successfully
          subscribed to the device resources using [Connect API](https://www.pelion.com/docs/device-management-api/connect/)
          endpoints.

          '
        format: int64
        type: integer
      device_proxy_request_error:
        description: '**(Beta)** The number of failed proxy requests from the Device
          Management Connect service to devices linked to the account. Device Management
          Connect makes proxy requests to devices when you try to read or write values
          to device resources using [Connect API](https://www.pelion.com/docs/device-management-api/connect/)
          endpoints.

          '
        format: int64
        type: integer
      device_proxy_request_success:
        description: '**(Beta)** The number of successful proxy requests from the
          Device Management Connect service to devices linked to the account. Device
          Management Connect makes proxy requests to devices when you try to read
          or write values to device resources using [Connect API](https://www.pelion.com/docs/device-management-api/connect/)
          endpoints.

          '
        format: int64
        type: integer
      device_subscription_request_error:
        description: '**(Beta)** The number of failed subscription requests from the
          Device Management Connect service to devices linked to the account. Device
          Management Connect makes subscription requests to devices when you try to
          subscribe to a resource path using [Connect API](https://www.pelion.com/docs/device-management-api/connect/)
          endpoints.

          '
        format: int64
        type: integer
      device_subscription_request_success:
        description: '**(Beta)** The number of successful subscription requests from
          the Device Management Connect service to devices linked to the account.
          Device Management Connect makes subscription requests to devices when you
          try to subscribe to a resource path using [Connect API](https://www.pelion.com/docs/device-management-api/connect/)
          endpoints.

          '
        format: int64
        type: integer
      expired_registrations:
        description: The number of expired registrations linked to the account. Device
          Management Connect removes the device registrations when the devices cannot
          update their registration before the expiry of the lifetime. Device Management
          Connect no longer handles requests for a device whose registration has expired
          already.
        format: int64
        type: integer
      full_registrations:
        description: The number of full registrations linked to the account. Full
          registration is the process of registering a device with Device Management
          Connect by providing its lifetime and capabilities such as the resource
          structure.The registered status of the device does not guarantee that the
          device is active and accessible from Device Management Connect at any point
          of time.
        format: int64
        type: integer
      handshakes_successful:
        description: The number of successful TLS handshakes the account has performed.
          The SSL or TLS handshake enables the SSL or TLS client and server to establish
          the secret keys with which they communicate. A successful TLS handshake
          is required for establishing a connection with Device Management Connect
          for any operaton such as registration, registration update and deregistration.
        format: int64
        type: integer
      id:
        description: A unique metric ID.
        type: string
      registration_updates:
        description: The number of registration updates linked to the account. Registration
          update is the process of updating the registration status with Device Management
          Connect to update or extend the lifetime of the device.
        format: int64
        type: integer
      timestamp:
        description: UTC time in RFC3339 format. The timestamp is the starting point
          of the interval for which the data is aggregated. Each interval includes
          data for the time greater than or equal to the timestamp and less than the
          next interval's starting point.
        format: date-time
        type: string
      transactions:
        description: The number of transaction events from or to devices linked to
          the account. A transaction is a 512-byte block of data processed by Device
          Management. It can be either sent by the device (device --> Device Management)
          or received by the device (Device Management --> device). A transaction
          does not include IP, TCP or UDP, TLS or DTLS packet overhead. It only contains
          the packet payload (full CoAP packet including CoAP headers).
        format: int64
        type: integer
    type: object
  successful-response:
    properties:
      after:
        description: The metric ID included in the request or null.
        type: string
      data:
        items:
          $ref: '#/definitions/metric'
        type: array
      has_more:
        description: Indicates whether there are more results for you to fetch in
          the next page.
        type: boolean
      limit:
        description: The limit used in the request to retrieve the results.
        type: integer
      object:
        description: API resource name.
        type: string
      total_count:
        description: The total number of records available.
        type: integer
    type: object
host: api.us-east-1.mbedcloud.com
info:
  description: Pelion Device Management API build from the publicly defined API definitions.
  title: Pelion Device Management API
  version: '3'
paths:
  //ace-auth/token:
    post:
      description: "Generate a signed CWT (CBOR Web Token). The SDA Android SDK uses\
        \ this API to gain access to perform actions on the devices specified in the\
        \ audience (aud).\n<br>\nAuthorized for roles: Service, ServiceAdministrator\n\
        <br>\n**Usage example:**\n```\ncurl -X POST https://api.us-east-1.mbedcloud.com/ace-auth/token\
        \ \\\n-H 'Authorization: <valid JWT>' \\\n-H 'content-type: application/json;charset=UTF-8'\
        \ \\\n-d '{\n  \"grant_type\":\"client_credentials\",\n  \"aud\":[\"id:f90b1017e52f4c70ad92684e802c9249\"\
        ,\"ep:dev1\"],\n  \"scope\":\"turn-led-on\",\n  \"cnf\":\"-----BEGIN PUBLIC\
        \ KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ...XwIDAQAB-----END PUBLIC KEY-----\"\
        \n}'\n```\n"
      operationId: createAceAuthToken
      parameters:
      - description: Create access token request.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TokenRequest'
      responses:
        '200':
          description: A signed CWT (CBOR Web Token) access token.
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: 'Bad request. Returns the standard error object detailing the
            error message and, optionally, the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: 'Authentication failure. The provided header is invalid or
            missing.

            Returns the standard error object detailing the error message and, optionally,
            the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an access token to use with a device.
      tags:
      - Security and identity - secure device access
      x-origin: /home/circleci/project/sda-service/public/sda.yaml
  //v3/trust-anchors:
    get:
      description: 'Get all trust anchors that match the account ID specified in the
        JWT.

        <br>

        Authorized for roles: Service, ServiceAdministrator

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/trust-anchors \

        -H ''Authorization: <valid JWT>''

        ```

        '
      operationId: getTrustAnchors
      parameters:
      - description: Indicates how many objects to retrieve in the page. The minimum
          limit is 2 and the maximum is 1000. Limit values outside of this range are
          set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: Indicates how to order the entries based on when they were created.
          `ASC` by default.
        enum:
        - ASC
        - DESC
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        pattern: '[A-Fa-f0-9]{32}'
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      responses:
        '200':
          description: 'Returns the list of trust anchors associated to the account_id
            specified in the access token.

            '
          schema:
            $ref: '#/definitions/GetTrustAnchorsResponse'
        '400':
          description: 'Bad request. Returns the standard error object detailing the
            error message and, optionally, the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: 'Authentication failure. The provided header is invalid or
            missing.

            Returns the standard error object detailing the error message and, optionally,
            the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get the account's trust anchor used to sign the access token.
      tags:
      - Security and identity - secure device access
      x-origin: /home/circleci/project/sda-service/public/sda.yaml
    post:
      description: "Create a trust anchor key pair and return the public key and creation\
        \ time.\nEach account can have one trust anchor only. This API fails if a\
        \ trust anchor already exists for the account.\n<br>\nAuthorized for roles:\
        \ Service, ServiceAdministrator\n<br>\n**Usage example:**\n```\ncurl -X POST\
        \ https://api.us-east-1.mbedcloud.com/v3/trust-anchors \\\n-H 'Authorization:\
        \ <valid JWT>' \\\n-H 'content-type: application/json;charset=UTF-8' \\\n\
        -d '{\n  \"description\": \"Trust anchor for room lighting controller.\"\n\
        }'\n```\n"
      operationId: createTrustAnchor
      parameters:
      - description: Request a new trust anchor.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateTrustAnchorRequest'
      responses:
        '201':
          description: Trust anchor created.
          schema:
            $ref: '#/definitions/CreateTrustAnchorResponse'
        '400':
          description: 'Bad request. Returns the standard error object detailing the
            error message and, optionally, the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: 'Authentication failure. The provided header is invalid or
            missing.

            Returns the standard error object detailing the error message and, optionally,
            the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: 'Account limit exceeded. There is already a trust anchor defined
            for the account.

            Returns the standard error object detailing the error message.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new trust anchor for the account.
      tags:
      - Security and identity - secure device access
      x-origin: /home/circleci/project/sda-service/public/sda.yaml
  //v3/trust-anchors/{trust_anchor_id}:
    delete:
      description: 'Delete the specified trust anchor. Unrecoverable.

        <br>

        Authorized for roles: Service, ServiceAdministrator

        <br>

        **Usage example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/trust-anchors/8e0a9494cc95b750ec6c81464eb06725
        \

        -H ''Authorization: <valid JWT>'' \

        ```

        '
      operationId: deleteTrustAnchor
      parameters:
      - description: The id of the trust anchor to be deleted
        in: path
        name: trust_anchor_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '204':
          description: Trust anchor deleted.
        '400':
          description: 'Bad request. Returns the standard error object detailing the
            error message and, optionally, the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: 'Authentication failure. The provided header is invalid or
            missing.

            Returns the standard error object detailing the error message and, optionally,
            the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The trust anchor to be deleted was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a trust anchor.
      tags:
      - Security and identity - secure device access
      x-origin: /home/circleci/project/sda-service/public/sda.yaml
    put:
      description: "Updates a trust anchor description attribute.\n<br>\nAuthorized\
        \ for roles: Service, ServiceAdministrator\n<br>\n**Usage example:**\n```\n\
        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/trust-anchors/8e0a9494cc95b750ec6c81464eb06725\
        \ \\\n-H 'Authorization: <valid JWT>' \\\n-H 'content-type: application/json;charset=UTF-8'\
        \ \\\n-d '{\n  \"description\": \"Trust anchor for ambient light module\"\n\
        }'\n```\n"
      operationId: updateTrustAnchor
      parameters:
      - description: The id of the trust anchor to be updated
        in: path
        name: trust_anchor_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: Update trust anchor request.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateTrustAnchorRequest'
      responses:
        '200':
          description: Trust anchor updated.
          schema:
            $ref: '#/definitions/UpdateTrustAnchorResponse'
        '400':
          description: 'Bad request. Returns the standard error object detailing the
            error message and, optionally, the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: 'Authentication failure. The provided header is invalid or
            missing.

            Returns the standard error object detailing the error message and, optionally,
            the invalid fields.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The trust anchor to be updated was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update trust anchor attributes (description).
      tags:
      - Security and identity - secure device access
      x-origin: /home/circleci/project/sda-service/public/sda.yaml
  /downloads/fcu/factory_configurator_utility.zip:
    get:
      description: 'Downloads the Factory Configurator Utility (FCU) archive .zip
        file for the account ID associated with the access token.

        <br>

        **Example:**

        <br>

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/downloads/fcu/factory_configurator_utility.zip
        \

        -H ''Authorization: Bearer <access_key>''

        ```

        '
      operationId: downloadFactoryTool
      produces:
      - application/zip
      responses:
        '200':
          description: The archive file was downloaded successfully.
        '400':
          description: Validation error or bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Access denied.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal server error.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Download the Factory Configurator Utility archive.
      tags:
      - Manufacturing - Factory Configurator Utility (FCU)
      x-origin: /home/circleci/project/factory-tool-download/public/swagger.yaml
  /downloads/fcu/info:
    get:
      description: "Returns information about the Factory Configurator Utility (FCU)\
        \ archive.\n<br>\n**Example:**\n<br>\n```\ncurl -X GET https://api.us-east-1.mbedcloud.com/downloads/fcu/inf\
        \ \\\n-H 'Authorization: Bearer <access_key>' \n```\n"
      operationId: getFactoryToolInfo
      produces:
      - application/json
      responses:
        '200':
          description: Successful response of the archive information.
          schema:
            $ref: '#/definitions/ArchiveInfoResponse'
        '400':
          description: Validation error or bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Access denied.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal server error.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Download information about the Factory Configurator Utility archive.
      tags:
      - Manufacturing - Factory Configurator Utility (FCU)
      x-origin: /home/circleci/project/factory-tool-download/public/swagger.yaml
  /downloads/fcu/release_notes:
    get:
      description: 'Downloads the Factory Configurator Utility (FCU) release notes.

        <br>

        **Example:**

        <br>

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/downloads/fcu/release_notes
        \

        -H ''Authorization: Bearer <access_key>''

        ```

        '
      operationId: getFactoryToolReleaseNotes
      produces:
      - text/markdown ; charset=UTF-8
      - application/json
      responses:
        '200':
          description: The release notes were downloaded successfully.
        '400':
          description: Validation error or bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Access denied.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal server error.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Download Factory Configurator Utility release notes.
      tags:
      - Manufacturing - Factory Configurator Utility (FCU)
      x-origin: /home/circleci/project/factory-tool-download/public/swagger.yaml
  /v2/device-requests/{device-id}:
    post:
      consumes:
      - application/json
      description: "This API provides an interface to call CoAP (Constrained Application\
        \ Protocol) methods on a device and send commands to device resources.\n\n\
        As part of the request body, you must specify the CoAP method you want to\
        \ call on the device:\n\n- Use the GET method to read resource values.\n\n\
        \    For example, to read the value of resource `/3200/0/5501`, use:\n\n \
        \   ```\n    curl -X POST https://api.us-east-1.mbedcloud.com/v2/device-requests/{device_id}?async-id={async-response-id}\
        \ \\\n    -H 'Authorization: Bearer {access_key}' \\\n    -H 'content-type:\
        \ application/json' \\\n    -d '{\"method\": \"GET\", \"uri\": \"/3200/0/5501\"\
        }'\n    ```\n\n> For `GET` methods, the API may fetch values from an internal\
        \ cache, instead of contacting the device.\n> If the value is not in the cache,\
        \ the read command goes all the way to the device.\n\n\n- Use the PUT method\
        \ to write [notification rules](https://www.pelion.com/docs/device-management/current/resources/resource-change-webapp.html)\
        \ or resource values for a resource.\n\n  Example payload to write a notification\
        \ rule:\n\n    ```\n    { \"method\": \"PUT\", \"uri\": \"/5/0/1?lt=10&gt=60&pmax=120\"\
        \ }\n    ```\n\n- Example payload to write a value to resource `/5/0/1`:\n\
        \n    ```\n    { \"method\": \"PUT\", \"uri\": \"/5/0/1?k1=v1&k2=v2\", \"\
        accept\": \"text/plain\", \"content-type\": \"text/plain\", \"payload-b64\"\
        : \"dmFsdWUxCg==\" }\n    ```\n\n- Use the POST method to execute or create\
        \ a resource on a LWM2M supporting device.\n\n  When you create a resource,\
        \ `uri` must refer to an object, and `payload-b64` must be in LWM2M TLV format\
        \ for example:\n\n    ```\n    { \"method\": \"POST\", \"uri\": \"/123\",\
        \ \"content-type\": \"application/vnd.oma.lwm2m+tlv\", \"payload-b64\": \"\
        BwHFAnZhbHVl\" }\n    ```\n\n- Use the POST method to execute resource on\
        \ a LWM2M supporting device.\n\n  Example payload to execute LWM2M resource\
        \ `/123/1/1`:\n\n    ```\n    { \"method\": \"POST\", \"uri\": \"/123/1/1\"\
        \ }\n    ```\n\n- Device Management sends responses through the currently\
        \ configured notification channel as `AsyncIDResponse`.\n\n  Example `AsyncIDResponse`\
        \ delivered through the notification channel:\n\n    ```\n    { \"async-responses\"\
        : [ { \"id\": \"123e4567-e89b-12d3-a456-426655440000\", \"status\": 200, \"\
        payload\": \"dmFsdWUxCg==\", \"ct\": \"text/plain\", \"max-age\": 600 } ]\
        \ }\n    ```\n\n    ```\n    { \"async-responses\": [ { \"id\": \"123e4567-e89b-12d3-a456-426655440000\"\
        , \"status\": 504, \"error\": \"TIMEOUT\" } ] }\n    ```\n\n> If it cannot\
        \ reach the device at the time of the request, Device Management puts the\
        \ requests in a queue.\n\n**Queueing behavior**\n\nIf Device Management does\
        \ not reach the device, or the device fails to respond, the server queues\
        \ the request and retries the delivery, for the period of time defined by\
        \ `expiry-seconds`, the next time the device contacts the server.\n\nThe queue\
        \ is limited to 20 requests.\n\nDevice Management delivers requests from the\
        \ queue in the order of insertion, one at a time, and not concurrently.\n\n\
        Delivery attempts follow protocol-specific retransmission logic. There can\
        \ be multiple transmissions, depending on the protocol. For CoAP, the retransmissions\
        \ have an exponential backoff of 2, 4, 8, 16, and up to 64 seconds, taking\
        \ in total over two minutes.\nIf the device does not respond within this two-minute\
        \ period, the delivery fails, Device Management performs one retry and then\
        \ puts the request back into the queue until the retry count reaches its limit.\n\
        \nDevice Management attempts to redeliver the request when the device next\
        \ contacts the server.\n\nWhen Device Management reaches the `retry` or `expiry-seconds`\
        \ limit, the server discards the request and sends an error in `AsyncIDResponse`.\n\
        \nFor example:\n\n- Retries could be exhausted if the device periodically\
        \ contacts the server and receives the request from the queue, but then fails\
        \ to respond to the server.\n\n- The device may lose its network connectivity,\
        \ and the requests in the queue may expire and get discarded before the device\
        \ regains connectivity. When Device Management delivers the request to the\
        \ device, the status code in `AsyncIDResponse` is *2xx* or *4xx*, based on\
        \ the device's response. If Device Management could not deliver the request,\
        \ the server generates a status code of *429* or *5xx*."
      operationId: createAsyncRequest
      parameters:
      - description: The device ID generated by Device Management.
        format: uuid, 32 hexadecimal characters
        in: path
        name: device-id
        required: true
        type: string
      - description: A client-generated ID that lets the REST client track the end-to-end
          flow and prevents race conditions with the notification channel. The `async-id`
          can be, for example, a UUID or the web application session ID along with
          the device ID and the resource.
        format: 1-40 alphanumeric characters and dashes.
        in: query
        name: async-id
        pattern: ^[\w\-]{1,40}$
        required: true
        type: string
      - description: The number of attempts to deliver the request to the device after
          the first delivery attempt. For example, two retries sums up to the total
          of three delivery attempts. When retries are exhausted, Device Management
          discards the request and delivers an error in the AsyncIDResponse. The default
          number of retries for a non-queue mode device is `0`. The default number
          of retries for a queue-mode device is `2`.
        in: query
        maximum: 10
        minimum: 0
        name: retry
        required: false
        type: integer
      - description: The time period during which the delivery is attempted, in seconds.
          If the device is not reachable within this period, Device Management discards
          the request and delivers an error in the AsyncIDResponse. The default time
          period during which the delivery is attempted is two hours for a non-queue
          mode device and three days for a queue-mode device.
        in: query
        maximum: 2592000
        minimum: 60
        name: expiry-seconds
        required: false
        type: integer
      - description: 'Device request to send. The body element has `method`, `uri`,
          `accept`, `content-type` and `payload-b64` fields.

          - The `method` is one of `GET`, `PUT`, `POST`, `DELETE`.

          - The `uri` field is the path to the LwM2M object and can include query
          parameters. This can include key-value pairs, for example, `/5/0/1?key1=value1;key2=value2`.

          - The `accept` field defines the content type that the requesting client
          will accept.

          - The `content-type` describes the content type of the base-64 encoded `payload-b64`
          field.

          - The `payload-b64` is the payload to send to the device in base-64 encoded
          form.'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeviceRequest'
      produces:
      - application/json
      responses:
        202:
          description: Accepted.
        400:
          description: 'Bad request. Contains one of the errors RESOURCE_NOT_FOUND,
            DEVICE_NOT_CONNECTED, MALFORMED_JSON_CONTENT,

            MALFORMED_ASYNC_ID and QUEUE_IS_FULL'
          schema:
            type: string
        401:
          description: Authentication failure.
        404:
          description: "Contains one of the following errors:\n<table>\n  <thead>\n\
            \    <tr>\n      <th>Error message</th>\n      <th>Description</th>\n\
            \    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><b>DEVICE_NOT_FOUND</b></td>\n\
            \      <td>The device is not in the device registry. It has either requested\
            \ for register delete\n      or it has not connected in time and is expired.</td>\n\
            \    </tr>\n    <tr>\n      <td><b>URI_PATH_DOES_NOT_EXISTS</b></td>\n\
            \      <td>The device does not have requested resource. Check the resource\
            \ path is correct.</td>\n    </tr>\n  </tbody>\n</table>"
          schema:
            type: string
      summary: Send an asynchronous request to read, write or post to a device resource.
      tags:
      - Device data - requests
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
  /v2/device-shared-keys:
    get:
      consumes:
      - application/json
      description: 'Retrieve pre-shared keys (PSKs) with pagination. Default page
        size of 50 entries.


        **Example:**


        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/device-shared-keys \

        -H "Authorization: Bearer <access_key>"

        ```'
      operationId: listPreSharedKeys
      parameters:
      - default: 50
        description: The number of objects to retrieve on a page (2-1000). Values
          outside the range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        required: false
        type: integer
      - description: An offset token for fetching a specific page. Provided by the
          server.
        in: query
        name: after
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: List of PSKs.
          schema:
            $ref: '#/definitions/ListOfPreSharedKeysWithoutSecret'
        400:
          description: Bad request. Contains the error as a string, either TOKEN_NOT_FOUND
            or INVALID_LIMIT.
      summary: List PSKs.
      tags:
      - Security and identity - pre-shared keys
      x-origin: /home/circleci/project/connector-bootstrap/public/swagger.yaml
    post:
      consumes:
      - application/json
      description: "Upload a PSK for an endpoint to allow it to bootstrap. The existing\
        \ key cannot be overwritten, but needs\nto be deleted first in the case of\
        \ re-setting a PSK for an endpoint.\n\n**Note**: The PSK APIs are available\
        \ only to accounts that have this feature enabled.\n\n**Example:**\n```\n\
        curl -X POST https://api.us-east-1.mbedcloud.com/v2/device-shared-keys \\\n\
        -H \"Authorization: Bearer <access_key>\" \\\n-H \"content-type: application/json\"\
        \  \\\n     -d '{ \"endpoint_name\": \"my-endpoint-0001\", \"secret_hex\"\
        : \"4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a\" }'\n```"
      operationId: uploadPreSharedKey
      parameters:
      - description: PSK to upload.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/PreSharedKey'
      produces:
      - application/json
      responses:
        201:
          description: Successfully created.
        400:
          description: Bad request. Contains comma-separated errors INVALID_ENDPOINT_NAME,
            INVALID_SECRET_HEX, and MALFORMED_JSON_CONTENT.
          schema:
            type: string
        401:
          description: Authentication failure.
        403:
          description: Forbidden. You need to read and accept the PSK license in Device
            Management Portal.
        409:
          description: Conflict. The PSK for the endpoint already exists and cannot
            be overwritten. Contains error KEY_ALREADY_EXISTS_FOR_ENDPOINT.
          schema:
            type: string
      summary: Upload a PSK to Pelion Device Management.
      tags:
      - Security and identity - pre-shared keys
      x-origin: /home/circleci/project/connector-bootstrap/public/swagger.yaml
  /v2/device-shared-keys/{endpoint_name}:
    delete:
      description: 'Remove a PSK.


        **Example:**


        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v2/device-shared-keys/my-endpoint-0001
        \

        -H "Authorization: Bearer <access_key>"

        ```'
      operationId: deletePreSharedKey
      parameters:
      - description: The unique endpoint identifier that this PSK applies to. [Reserved
          characters](https://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_reserved_characters)
          must be percent-encoded.
        in: path
        name: endpoint_name
        required: true
        type: string
      responses:
        204:
          description: Successfully deleted. Responds even if the endpoint does not
            have an associated PSK.
        400:
          description: Bad request. Endpoint name validation failed. Contains error
            INVALID_ENDPOINT_NAME.
          schema:
            type: string
        401:
          description: Authentication failure.
      summary: Remove a PSK.
      tags:
      - Security and identity - pre-shared keys
      x-origin: /home/circleci/project/connector-bootstrap/public/swagger.yaml
    get:
      description: 'Check if a PSK for an endpoint exists or not. The response does
        not contain the secret itself.


        **Example:**


        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/device-shared-keys/my-endpoint-0001
        \

        -H "Authorization: Bearer <access_key>"

        ```'
      operationId: getPreSharedKey
      parameters:
      - description: The unique endpoint identifier that this PSK applies to. [Reserved
          characters](https://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_reserved_characters)
          must be percent-encoded.
        in: path
        name: endpoint_name
        required: true
        type: string
      responses:
        200:
          description: Pre-shared key for the device (does not contain secret).
          schema:
            $ref: '#/definitions/PreSharedKeyWithoutSecret'
        400:
          description: Bad request. Endpoint name validation failed. Contains error
            INVALID_ENDPOINT_NAME.
          schema:
            type: string
        401:
          description: Authentication failure.
        404:
          description: The PSK does not exist.
      summary: Get a PSK.
      tags:
      - Security and identity - pre-shared keys
      x-origin: /home/circleci/project/connector-bootstrap/public/swagger.yaml
  /v2/endpoints/{device-id}:
    get:
      description: 'Retrieves information about the resource structure for a device
        from Device Management. This call does not reach the device.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/endpoints/{device-id} \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getEndpointResources
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful response with an array of resources.
          schema:
            $ref: '#/definitions/ResourceArray'
        404:
          description: Endpoint not found.
      summary: List the resources on a device.
      tags:
      - Device data - resources
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
  /v2/endpoints/{device-id}/{resourcePath}:
    delete:
      deprecated: true
      description: '(DEPRECATED) A request to delete a resource path must be handled
        by both Device Management Client and Device Management

        Connect.


        All resource APIs are asynchronous. These APIs respond only if the device
        is on and connected to Device Management Connect, and there is an active notification
        channel.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v2/endpoints/{device-id}/{resourcePath}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteResourcePath
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      - description: The resource URL.
        in: path
        name: resourcePath
        required: true
        type: string
      - description: 'If you make a request with `noResp=true`, Device Management
          Connect makes a CoAP non-confirmable request to the device. Such requests
          are not guaranteed to arrive at the device, and do not return an async-response-id.


          When calls with this parameter enabled succeed, they return with the status
          code `204 No Content`. If the underlying protocol does not support non-confirmable
          requests, or if the endpoint is registered in queue mode, the response is
          status code `409 Conflict`.'
        in: query
        name: noResp
        required: false
        type: boolean
      responses:
        202:
          description: Accepted. Returns an asynchronous response ID.
          schema:
            $ref: '#/definitions/AsyncID'
        400:
          description: Bad request.
        404:
          description: "Requested endpoint\u2019s resource is not found."
        409:
          description: Conflict. If `noResp=true`, the non-confirmable request is
            not supported by the used protocol.
        410:
          description: Gone. Endpoint not found.
        429:
          description: 'Cannot accept the request at the moment: the queue is full.'
        502:
          description: TCP or TLS connection to endpoint cannot be established.
      summary: (DEPRECATED) Delete a resource path.
      tags:
      - Device data - resources
      x-deprecation:
        comment: /v2/endpoints/{device-id}/{resourcePath} is replaced by /v2/device-requests/{device-id}.
        end_of_life_at: '2020-05-17T00:00:00+00:00'
        issued_at: '2019-05-17T15:23:00+00:00'
        links:
        - https://www.pelion.com/docs/device-management-api/connect/
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
    get:
      deprecated: true
      description: '(DEPRECATED) Requests the resource value either from the device
        or cache. If the value is not in the cache, the request goes all the

        way to the device. When the response is available, an `AsyncIDResponse` JSON
        object is received in the notification channel.

        The resource values can also be in cache based on `max_age` defined by the
        device. The value found from the cache is returned

        immediately in the response.


        The preferred way to get resource values is to use the **subscribe** and **callback**
        methods.


        All resource APIs are asynchronous. These APIs only respond if the device
        is on and connected to Device Management.


        See also how [resource caching](https://www.pelion.com/docs/device-management/current/connecting/device-guidelines.html#resource-cache)
        works.


        Please see the [Lightweight Machine to Machine Technical specification](http://www.openmobilealliance.org/release/LightweightM2M/V1_0-20170208-A/OMA-TS-LightweightM2M-V1_0-20170208-A.pdf)
        for more information.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/endpoints/{device-id}/{resourcePath}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getResourceValue
      parameters:
      - description: Unique Device Management device ID for the endpoint. The ID must
          be an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      - description: The resource URL.
        in: path
        name: resourcePath
        required: true
        type: string
      - description: 'If true, the response comes only from the cache. Default: false.
          Device Management Connect caches the received resource values for the time
          of [max_age](https://www.pelion.com/docs/device-management/current/resources/working-with-the-resources.html)
          defined in the client.'
        in: query
        name: cacheOnly
        required: false
        type: boolean
      - description: 'If a request is made with `noResp=true`, Device Management Connect
          makes a CoAP non-confirmable request to the device. Such requests are not
          guaranteed to arrive on the device, and no `async-response-id` returns.


          Successful calls return with the status code `204 No Content`. If the underlying
          protocol does not support non-confirmable requests, or if the endpoint is
          registered in queue mode, the response is status code `409 Conflict`.'
        in: query
        name: noResp
        required: false
        type: boolean
      responses:
        200:
          description: Resource value found in cache. Returns the string value of
            the resource.
        202:
          description: Accepted. Returns an asynchronous response ID.
          schema:
            $ref: '#/definitions/AsyncID'
        205:
          description: No cache available for the resource.
        400:
          description: Bad request.
        404:
          description: "Requested endpoint\u2019s resource is not found."
        409:
          description: Conflict. If `noResp=true`, the non-confirmable request is
            not supported by the used protocol.
        410:
          description: Gone. Endpoint not found.
        429:
          description: 'Cannot accept the request at the moment: the queue is full.'
        502:
          description: TCP or TLS connection to endpoint cannot be established.
      summary: (DEPRECATED) Read from a resource.
      tags:
      - Device data - resources
      x-deprecation:
        comment: /v2/endpoints/{device-id}/{resourcePath} is replaced by /v2/device-requests/{device-id}.
          The /v2/device-requests/{device-id} endpoint lets you use your own async-id,
          and simplifies integration by returning all resource values, cached and
          non-cached, through the event notification channel.
        end_of_life_at: '2020-05-17T00:00:00+00:00'
        issued_at: '2019-05-17T15:23:00+00:00'
        links:
        - https://www.pelion.com/docs/device-management-api/connect/
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
    post:
      consumes:
      - text/plain
      - application/xml
      - application/octet-stream
      - application/exi
      - application/json
      - application/link-format
      - application/senml+json
      - application/nanoservice-tlv
      - application/vnd.oma.lwm2m+text
      - application/vnd.oma.lwm2m+opaq
      - application/vnd.oma.lwm2m+tlv
      - application/vnd.oma.lwm2m+json
      deprecated: true
      description: '(DEPRECATED) [Execute a function](https://www.pelion.com/docs/device-management/current/resources/handle-resource-webapp.html#the-execute-operation)
        on an existing resource and create a new Object instance on the device. The
        resource path does not have to exist; you can set it with the call. The maximum
        length of the resource path is 255 characters.


        All resource APIs are asynchronous. These APIs respond only if the device
        is on and connected to Device Management Connect, and there is an active notification
        channel.


        Supported content types depend on the device and its resource. Device Management
        translates HTTP to the equivalent CoAP content type.


        **Example:**


        This example resets the min and max values of the [temperature sensor](http://www.openmobilealliance.org/tech/profiles/lwm2m/3303.xml)
        instance 0 by executing Resource 5605 ''Reset Min and Max Measured Values''.


        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v2/endpoints/{device-id}/3303/0/5605
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: executeOrCreateResource
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      - description: The resource URL.
        in: path
        name: resourcePath
        required: true
        type: string
      - description: This value is not needed. Most of the time, resources do not
          accept a function; they have their own functions predefined. You can use
          this to trigger them. If a function is included, the body of this request
          is passed as a char* to the function in Device Management Client.
        in: body
        name: resourceFunction
        required: false
        schema:
          type: string
      - description: 'If you make a request with `noResp=true`, Device Management
          Connect makes a CoAP non-confirmable request to the device. Such requests
          are not guaranteed to arrive in the device, and you do not get back an async-response-id.


          When calls with this parameter enabled succeed, they return with the status
          code `204 No Content`. If the underlying protocol does not support non-confirmable
          requests, or if the endpoint is registered in queue mode, the response is
          status code `409 Conflict`.'
        in: query
        name: noResp
        required: false
        type: boolean
      responses:
        202:
          description: Accepted. Returns an asynchronous response ID.
          schema:
            $ref: '#/definitions/AsyncID'
        400:
          description: Bad request.
        404:
          description: "Requested endpoint\u2019s resource not found."
        409:
          description: Conflict. If `noResp=true`, the non-confirmable request is
            not supported by the used protocol.
        410:
          description: Gone. Endpoint not found.
        429:
          description: 'Cannot accept the request at the moment: the queue is full.'
        502:
          description: TCP or TLS connection to endpoint cannot be established.
      summary: (DEPRECATED) Execute a function on a Resource or create new Object
        instance.
      tags:
      - Device data - resources
      x-deprecation:
        comment: /v2/endpoints/{device-id}/{resourcePath} is replaced by /v2/device-requests/{device-id}.
        end_of_life_at: '2020-05-17T00:00:00+00:00'
        issued_at: '2019-05-17T15:23:00+00:00'
        links:
        - https://www.pelion.com/docs/device-management-api/connect/
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
    put:
      consumes:
      - text/plain
      - application/xml
      - application/octet-stream
      - application/exi
      - application/json
      - application/link-format
      - application/senml+json
      - application/nanoservice-tlv
      - application/vnd.oma.lwm2m+text
      - application/vnd.oma.lwm2m+opaq
      - application/vnd.oma.lwm2m+tlv
      - application/vnd.oma.lwm2m+json
      deprecated: true
      description: '(DEPRECATED) With this API, you can [write a new value to existing
        Resources](https://www.pelion.com/docs/device-management/current/resources/handle-resource-webapp.html)
        or use the **write** attribute to set [notification rules](https://www.pelion.com/docs/device-management/current/resources/resource-change-webapp.html)
        for the Resources. The notification rules only work on the device client side
        and may not be supported by all clients.


        This API can also be used to transfer files to the device. Device Management
        Connect LwM2M server implements Option 1 from RFC7959. The maximum block size
        is 1024 bytes.

        Note block size versus transferred file size in low-quality networks. The
        customer application needs to know what type of file is transferred (for example,
        TXT)

        and the customer can encrypt the payload. The maximum payload size is 1048576
        bytes.


        All resource APIs are asynchronous. These APIs respond only if the device
        is on and connected to Device Management Connect, and there is an active notification
        channel.


        Supported content types depend on the device and its resource. Device Management
        translates HTTP to equivalent CoAP content type.


        **Example:**


        This example sets the alarm on a buzzer. The command writes the [Buzzer](http://www.openmobilealliance.org/tech/profiles/lwm2m/3338.xml)
        instance 0, "On/Off" boolean resource to ''1''.


        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v2/endpoints/{device-id}/3338/0/5850
        \

        -H "content-type: text/plain" \

        -H ''Authorization: Bearer <access_key>'' \

        -d ''1''

        ```'
      operationId: updateResourceValue
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      - description: Resource URL.
        in: path
        name: resourcePath
        required: true
        type: string
      - description: The value to set to the resource.
        in: body
        name: resourceValue
        required: true
        schema:
          type: string
      - description: 'If you make a request with `noResp=true`, Device Management
          Connect makes a CoAP non-confirmable request to the device. Such requests
          are not guaranteed to arrive to the device, and do not return an `async_response_id`.


          When a call with this parameter enabled succeeds, it return status code
          `204 No Content`. If the underlying protocol does not support non-confirmable
          requests, or if the endpoint is registered in queue mode, the response is
          status code `409 Conflict`.'
        in: query
        name: noResp
        required: false
        type: boolean
      responses:
        202:
          description: Accepted. Returns an asynchronous response ID.
          schema:
            $ref: '#/definitions/AsyncID'
        400:
          description: Bad request.
        409:
          description: '''Conflict. If `noResp=true`, the non-confirmable request
            is not supported by the used protocol.'''
        410:
          description: Gone. Endpoint not found.
        429:
          description: 'Cannot accept the request at the moment: the queue is full.'
        502:
          description: TCP or TLS connection to endpoint cannot be established.
      summary: (DEPRECATED) Write to a Resource or use write-attributes (notification
        rules) for a Resource.
      tags:
      - Device data - resources
      x-deprecation:
        comment: /v2/endpoints/{device-id}/{resourcePath} is replaced by /v2/device-requests/{device-id}.
        end_of_life_at: '2020-05-17T00:00:00+00:00'
        issued_at: '2019-05-17T15:23:00+00:00'
        links:
        - https://www.pelion.com/docs/device-management-api/connect/
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
  /v2/notification/callback:
    delete:
      description: 'Deletes the callback URL.


        Deleting the callback URL also removes the channel''s notification queue.
        Any unsent notifications are lost when the channel is deleted.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v2/notification/callback
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deregisterWebhook
      responses:
        204: &id025
          description: Successfully deleted.
        401: &id023
          description: Unauthorized.
        403: &id024
          description: Forbidden. The authorization token used is not an access key.
        404:
          description: Callback URL does not exist.
      summary: Delete callback URL.
      tags:
      - Device data - notifications
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
    get:
      description: 'Shows the current callback URL if it exists.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/notification/callback \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getWebhook
      produces:
      - application/json
      responses:
        200:
          description: URL found.
          schema:
            $ref: '#/definitions/Webhook'
        401: *id023
        403: *id024
        404:
          description: The callback URL does not exist.
      summary: Check callback URL.
      tags:
      - Device data - notifications
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
    put:
      consumes:
      - application/json
      description: "Register a URL to which the server delivers notifications of changes\
        \ to the subscribed resource. To push notifications, you must first place\
        \ subscriptions. The maximum length of the URL, header keys, and values, all\
        \ combined, is 400 characters.\n\nNotifications are delivered as PUT requests\
        \ to the HTTP server, which the client defines with a subscription server\
        \ message. The given URL must be accessible, and respond to the PUT request\
        \ with a response code of 200 or 204.\n\nDevice Management Connect tests the\
        \ callback URL with an empty JSON payload `{}` when the URL is registered.\
        \ Callback implementation does not support URL redirection. For more information\
        \ on notification messages, see [NotificationMessage](#NotificationMessage).\n\
        \n**Optional headers in a callback message:**\n\nYou can set optional headers\
        \ to a callback in a **Webhook** object. Device Management Connect includes\
        \ the header and key pairs in the notification messages send them to callback\
        \ URL. The callback URLs and headers are application-specific.\n\nOne possible\
        \ use for additional headers is checking the origin of a PUT request, as well\
        \ as distinguishing the application to which the notification belongs.\n\n\
        **Note**: Only one callback URL for each application can be active. If you\
        \ register a new URL while another one is active, it replaces the active one.\
        \ There can be only one notification channel at a time for each application.\
        \ If another type of channel is already present, you need to delete it before\
        \ setting the callback URL.\n\n**Expiration of a callback URL:**\n\nA callback\
        \ can expire when Device Management cannot deliver a notification due to a\
        \ connection timeout or error response (4xx or 5xx). After each delivery failure,\
        \ Device Management sets an exponential back-off time and makes a retry attempt\
        \ after that. The first retry delay is 1 second, then 2s, 4s, 8s, up to a\
        \ maximum delay of two minutes. The retry delay is applied when the response\
        \ is received, or in case of timeout, after the timeout expires. The request\
        \ timeout is 20 seconds; in the case of timeout, the first retry happens 20\
        \ + 1 seconds after the first delivery attempt, then 20 + 2 seconds, and so\
        \ on. The callback URL is removed if all retries fail within 24 hours. More\
        \ about [notification sending logic](https://www.pelion.com/docs/device-management/current/integrate-web-app/event-notification.html#notification-sending-logic)\
        \ in the Device Management documentation.\n\n**Supported callback URL protocols:**\n\
        \nCurrently, only HTTP and HTTPS protocols are supported.\n\n**HTTPS callback\
        \ URLs:**\n\nWhen delivering a notification to an HTTPS-based callback URL,\
        \ Device Management Connect identifies itself with a valid client certificate.\
        \ The certificate is signed by a trusted certificate authority (GlobalSign),\
        \ with a Common Name (CN) set to `notifications.mbedcloud.com`.\n\n**Configuration\
        \ options:**\n\nThe event notification channel provides configurations options\
        \ defined in [Serialization config](#SerializationConfigObjectV2).\n\n**Example:**\n\
        \nThis example command shows how to set your callback URL. It also sets an\
        \ optional header authorization. When Device Management Connect calls your\
        \ callback URL, the call contains the authorization header with the defined\
        \ value.\n\n```\ncurl -X PUT https://api.us-east-1.mbedcloud.com/v2/notification/callback\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n-H 'content-type: application/json'\
        \ \\\n-d '{\n  \"url\": \"{callback-url}\",\n  \"headers\": {\"authorization\"\
        : \"f4b93d6e-4652-4874-82e4-41a3ced0cd56\"},\n  \"serialization\": {\"type\"\
        : \"v2\", \"max_chunk_size\": \"100\",\n    \"cfg\": {\"deregistrations_as_object\"\
        : \"true\", \"include_uid\": \"true\", \"include_timestamp\": \"true\", \"\
        include_original_ep\": \"true\"\n    }\n  }\n}'\n```"
      operationId: registerWebhook
      parameters:
      - description: A JSON object that contains the optional headers and URL where
          notifications are sent.
        in: body
        name: webhook
        required: true
        schema:
          $ref: '#/definitions/Webhook'
      responses:
        204:
          description: Successfully subscribed.
        400:
          description: Given URL is not accessible, or other type of channel already
            exists.
        401: *id023
        403: *id024
        415:
          description: Unsupported Media Type.
      summary: Register a callback URL.
      tags:
      - Device data - notifications
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
  /v2/notification/channel:
    get:
      description: "Get channel delivery mechanism.\n\n**Example:**\n\n    curl -X\
        \ GET https://api.us-east-1.mbedcloud.com/v2/notification/channel \\\n   \
        \ -H 'Authorization: Bearer <access_key>'\n"
      operationId: getChannelMetadata
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/ChannelMetadata'
        404:
          description: Channel was not found.
      summary: Get channel metadata.
      tags:
      - Device data - notifications
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
  /v2/notification/pull:
    delete:
      deprecated: true
      description: 'Delete a notification Long Poll channel. This is required to change
        the channel from Long Poll to another type. Do not make a GET `/v2/notification/pull`
        call for two minutes after deleting the channel, because it can implicitly
        recreate the pull channel. You can also have some random responses with payload
        or 410 GONE with "CHANNEL_DELETED" as a payload or 200/204 until the old channel
        is purged.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v2/notification/pull \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteLongPollChannel
      responses:
        200:
          description: Success. The body can contain "REMOVED" if it was deleted with
            this call or "ALREADY_DELETED" if it was deleted before and not purged
            yet.
        401: *id023
      summary: Delete notification Long Poll channel.
      tags:
      - Device data - notifications
      x-deprecation:
        comment: Long polling is deprecated and should be used for development purposes
          only.
        end_of_life_at: '2020-06-30T00:00:00+00:00'
        issued_at: '2017-02-10T15:23:00+00:00'
        links:
        - https://www.pelion.com/docs/device-management/current/integrate-web-app/event-notification.html
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
    get:
      deprecated: true
      description: 'In this case, notifications are delivered through HTTP long poll
        requests. The HTTP request is kept open until one or more event notifications
        are delivered to the client, or the request times out (response code 204).
        In both cases, the client should open a new polling connection after the previous
        one closes. Only a single long polling connection per application can be ongoing
        at any given time. We recommend using a persistent connection (Connection
        keep-alive header in the request) to avoid excess TLS handshakes.


        The pull channel is implicitly created by the first GET call to `/v2/notification/pull`.
        It refreshes on each GET call. If the channel is not polled for a long time
        (10 minutes), it expires and is deleted. This means that no notifications
        will stay in the queue between polls. A channel can be also be deleted explicitly
        with a DELETE call.


        **Note:** If you cannot have a public-facing callback URL, for example, when
        developing on your local machine, you can use long polling to check for new
        messages. However, **long polling is deprecated** and will likely be replaced
        in the future. It is meant only for experimentation, not commercial use. The
        proper method to receive notifications is a **notification callback**.


        There can only be one notification channel per application in Device Management
        Connect. If a notification channel of other type already exists for the application,
        delete it before creating a long poll notification channel.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/notification/pull \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: longPollNotifications
      produces:
      - application/json
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/NotificationMessage'
        204:
          description: No new notifications.
        400:
          description: Other type of channel already exists.
        401: *id023
        409:
          description: Conflict. Long poll request exists already.
        410:
          description: Pull channel was deleted and waiting to be purged. This code
            is a result of incorrect client behavior (delete channel and then pull),
            which can prevent the creation of a callback channel after the pull channel
            is deleted. The channel can be (randomly) recreated by this call when
            deleted and not purged. This client behaviour can set the channel in an
            undefined state for some time. The channel may respond with 410 GONE or
            200/204 codes randomly for some time. Finally, the channel enters a valid
            "channel exists" state.
      summary: Get notifications using Long Poll
      tags:
      - Device data - notifications
      x-deprecation:
        comment: Long polling is deprecated and should be used for development purposes
          only.
        end_of_life_at: '2020-06-30T00:00:00+00:00'
        issued_at: '2017-02-10T15:23:00+00:00'
        links:
        - https://www.pelion.com/docs/device-management/current/integrate-web-app/event-notification.html
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
  /v2/notification/websocket:
    delete:
      description: 'Delete a notification websocket channel bound to the application.
        This is required to change the channel from websocket to another type.


        Deleting the websocket channel also removes the channel''s notification queue.
        Any unsent notifications are lost when the channel is deleted.

        **Example:**


        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v2/notification/websocket
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteWebsocket
      responses:
        204: *id025
        401: *id023
        403: *id024
        404:
          description: Websocket channel doesn't exist.
      summary: Delete websocket channel.
      tags:
      - Device data - notifications
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
    get:
      description: 'Returns 200 with websocket connection status, if websocket channel
        exists.


        **Note**: The current version does not yet have the capability to determine
        the channel status and will always return status ''unknown'' and queue size
        ''-1''.


        **Example:**


        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/notification/websocket
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getWebsocket
      produces:
      - application/json
      responses:
        200:
          description: Websocket found.
          schema:
            $ref: '#/definitions/WebsocketChannel'
        401: *id023
        403: *id024
        404:
          description: No channel has been registered.
      summary: Get websocket channel information.
      tags:
      - Device data - notifications
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
    put:
      consumes:
      - application/json
      description: "Register (or update) a channel using websocket connection to deliver\
        \ notifications. The websocket channel should be opened by client using `/v2/notification/websocket-connect`\
        \ endpoint. To get notifications pushed, you must place subscriptions. For\
        \ more information on notification messages, see [NotificationMessage](#NotificationMessage).\n\
        \nA websocket channel can have only one active websocket connection at a time.\
        \ If a websocket connection for a channel exists and a new connection to the\
        \ same channel is made, the connection is accepted and the older connection\
        \ is closed.\n\n**Note**: Only one websocket channel for each application\
        \ can be active at a time. If you register a new websocket channel while another\
        \ one is active, it replaces the previously active one. If another type of\
        \ channel is already present, you need to delete it before registering a websocket\
        \ channel.\n\n**Note**: The current version does not yet have the capability\
        \ to determine the channel status and will always return status 'unknown'\
        \ and queue size '-1'.\n\n**Expiration of a websocket:**\n\nA websocket channel\
        \ is expired if the channel does not have an opened websocket connection for\
        \ a 24-hour period. Channel expiration means the channel is deleted and any\
        \ undelivered notifications stored in its internal queue is removed. As long\
        \ as the channel has an opened websocket connection or time between successive\
        \ websocket connections is less than 24 hours,\nthe channel is considered\
        \ active, notifications are stored in its internal queue and delivered when\
        \ a websocket connection is active. A channel can be also deleted explicitly\
        \ with a DELETE call.\n\nMore about [notification sending logic](https://www.pelion.com/docs/device-management/current/integrate-web-app/event-notification.html#notification-sending-logic).\n\
        \n**Configuration options:**\n\nThe event notification channel provides configurations\
        \ options defined in [Serialization config](#SerializationConfigObjectV2)\n\
        \n**Example:**\n```\ncurl -X PUT https://api.us-east-1.mbedcloud.com/v2/notification/websocket\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n-d '{\n  \"serialization\"\
        : {\"type\": \"v2\", \"max_chunk_size\": \"100\",\n    \"cfg\": {\"deregistrations_as_object\"\
        : \"true\", \"include_uid\": \"true\", \"include_timestamp\": \"true\", \"\
        include_original_ep\": \"true\"\n    }\n  }\n}\n```"
      operationId: registerWebsocket
      responses:
        200:
          description: Channel successfully updated. In the current v2 implementation
            this operation has no effect, and any subsequent PUT call from a client
            previously registered to a channel results in a 200 OK response.
          schema:
            $ref: '#/definitions/RegisterWebsocketChannel'
        201:
          description: Channel succesfully registered.
          schema:
            $ref: '#/definitions/WebsocketChannel'
        400:
          description: Other type of channel already exists.
        401: *id023
        403: *id024
      summary: Register a websocket channel.
      tags:
      - Device data - notifications
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
  /v2/notification/websocket-connect:
    get:
      description: "\nA websocket channel can have only one active connection at a\
        \ time. If a websocket connection for a channel exists and a new connection\
        \ to the same channel is made, the connection is accepted and the older connection\
        \ is closed.\n\nA websocket client library should be used when connecting\
        \ to this endpoint.\n\nOnce the socket has been opened, the server may close\
        \ it with one of the following status codes.\n\n<table>\n  <thead>\n    <tr>\n\
        \      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n\
        \  <tbody>\n    <tr>\n      <td><b>1000</b></td>\n      <td>Socket closed\
        \ normally by the client, or by the server when the channel is deleted with\
        \ a REST call.</td>\n    </tr>\n    <tr>\n      <td><b>1001</b></td>\n   \
        \   <td>Going away. Set when another socket opens on the used channel.</td>\n\
        \    </tr>\n    <tr>\n      <td><b>1006</b></td>\n      <td>Abnormal closure.\
        \ The client should reconnect after receiving this status code. A short reconnect\
        \ delay is recommended.</td>\n    </tr>\n    <tr>\n      <td><b>1008</b></td>\n\
        \      <td>Policy violation. Set if the access key is lost or invalidated\
        \ after a successful WebSocket handshake.</td>\n    </tr>\n    <tr>\n    \
        \  <td><b>1011</b></td>\n      <td>Unexpected condition. The socket is closed\
        \ with this status in an attempt to open a socket to a nonexistent channel\
        \ (without a prior PUT request). This code is also used to indicate a closing\
        \ socket for any other unexpected condition in the server.</td>\n    </tr>\n\
        \    <tr>\n      <td><b>1012</b></td>\n      <td>Service restart. Set when\
        \ the server restarts for update, maintenance, and so on. The client should\
        \ reconnect after receiving this status code. A short reconnect delay is recommended.</td>\n\
        \    </tr>\n  </tbody>\n</table>\n\n**Expected client behaviour:**\n\nIf the\
        \ connection is closed with code 1006 or 1012, the client should try to reconnect\
        \ to maintain the notification flow. The client might disconnect several times\
        \ in a relatively short period, for example, during service updates. This\
        \ is normal. The desired client behavior is to reconnect after each disconnect.\n\
        \n**Example:**\n\nThe example is meant only for testing. For production devices,\
        \ use a WebSocket client library. Websocat (https://github.com/vi/websocat)\
        \ is a command-line client for WebSockets, like netcat or cURL. The example\
        \ command opens a new WebSocket, waits for any data sent to the socket from\
        \ the server, and prints it to `stdout`.\n\n```\nwebsocat wss://api.us-east-1.mbedcloud.com/v2/notification/websocket-connect\
        \ \\\n-H \"Sec-WebSocket-Protocol:wss,pelion_ak_<access_key>\"\n```"
      operationId: connectWebsocket
      parameters:
      - default: Upgrade
        in: header
        name: Connection
        required: true
        type: string
      - default: websocket
        in: header
        name: Upgrade
        required: true
        type: string
      - description: 'Access key or user token must be present in the `Sec-WebSocket-Protocol`
          header **if Authorization header cannot be provided**: `Sec-WebSocket-Protocol:"wss,pelion_ak_{access_key}"`.

          Refer to the notification service documentation for examples.'
        in: header
        name: Sec-WebSocket-Protocol
        required: false
        type: string
      - description: Originating host of the request.
        in: header
        name: Origin
        required: true
        type: string
      - default: 13
        description: WebSocket version. Must be 13.
        in: header
        name: Sec-WebSocket-Version
        required: true
        type: integer
      - description: The value of this header field must be a nonce consisting of
          a randomly selected 16-byte value that has been base64-encoded (see Section
          4 of [RFC4648]). The nonce must be selected randomly for each connection.
        in: header
        name: Sec-WebSocket-Key
        required: true
        type: string
      responses:
        101:
          description: Switching protocols.
        400:
          description: Required header(s) missing.
        401: *id023
        426:
          description: Upgrade required. Connect and/or Upgrade headers missing.
        429:
          description: While a WebSocket handshake is still in progress, no new WebSocket
            requests with the same authorization token will be accepted.
      summary: Open the websocket.
      tags:
      - Device data - notifications
      x-origin: /home/circleci/project/notification-service/public/swagger.yaml
  /v2/subscriptions:
    delete:
      description: 'Remove presubscriptions.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v2/subscriptions \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deletePreSubscriptions
      responses:
        204:
          description: Successfully removed subscriptions.
        401:
          description: Unauthorized.
        403:
          description: 'Forbidden: the authorization token used is not an access key.'
      summary: Remove presubscriptions.
      tags:
      - Device data - subscriptions
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
    get:
      description: 'Retrieve presubscription data. The server returns a JSON structure.
        If there are no presubscribed resources, the server returns an empty array.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/subscriptions \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getPreSubscriptions
      produces:
      - application/json
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/PresubscriptionArray'
        401:
          description: Unauthorized.
        403:
          description: 'Forbidden: the authorization token used is not an access key.'
      summary: View presubscriptions.
      tags:
      - Device data - subscriptions
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
    put:
      consumes:
      - application/json
      description: "A presubscription is a set of rules you define to subscribe to\
        \ specific resources automatically when certain devices register or does a\
        \ register update.\nYou can set subscription rules based on the endpoint ID\
        \ (optionally having an `*` character at the end), endpoint type, a list of\
        \ resources, or expressions with an `*` character at the end.\nWhen a device\
        \ that meets the subscription rules registered, Device Management Connect\
        \ automatically sends subscription requests to the device for the resources\
        \ you specify.\nTo remove the presubscription data, put an empty array as\
        \ a rule.\nTo place dynamic observation rules for individual object instances\
        \ and resources and define when the device sends observations, set [notification\
        \ rules](https://www.pelion.com/docs/device-management/current/resources/resource-change-webapp.html).\n\
        \n**Note:** The subscription is bound to the application you are using. To\
        \ get notifications of the resource value changes, you need to create an [event\
        \ notification channel](https://www.pelion.com/docs/device-management/current/integrate-web-app/event-notification.html)\
        \ with an access key of the same application.\n\n**Example request:**\n```\n\
        curl -X PUT https://api.us-east-1.mbedcloud.com/v2/subscriptions \\\n-H 'Authorization:\
        \ Bearer <access_key>' \\\n-H 'content-type: application/json' \\\n-d '[\n\
        \       {\n         \"endpoint-name\": \"node-001\",\n         \"resource-path\"\
        : [\"/dev\"]\n       },\n       {\n         \"endpoint-type\": \"Light\",\n\
        \         \"resource-path\": [\"/sen/*\"]\n       },\n       {\n         \"\
        endpoint-name\": \"node*\"\n       },\n       {\n         \"endpoint-type\"\
        : \"Sensor\"\n       },\n       {\n         \"resource-path\": [\"/dev/temp\"\
        ,\"/dev/hum\"]\n       }\n    ]'\n```\n\n- Subscribe to `/dev` resource of\
        \ endpoint named `node-001`.\n- Subscribe to `Light` type of endpoints and\
        \ their resources prefixed with `/sen/`.\n- Subscribe to all observable resources\
        \ of endpoint names prefixed with `node`.\n- Subscribe to all observable resources\
        \ of `Sensor` type endpoints.\n- Subscribe to `/dev/temp` and `/dev/hum` resources\
        \ of all endpoints.\n\n**Limits**:\n\n- The maximum length of the endpoint\
        \ name and endpoint type is 64 characters.\n- The maximum length of the resource\
        \ path is 128 characters.\n- You can subscribe to 256 separate resource paths.\n\
        - The maximum number of presubscription entries is 1024.\n\n**Note**: To save\
        \ bandwidth and avoid unnecessary traffic, use resource path patterns to limit\
        \ the matching resources in the presubscription data. This prevents your web\
        \ application from receiving unwanted resource notifications. See [Subscribe\
        \ only to what you need](https://www.pelion.com/docs/device-management/current/resources/resource-change-webapp.html)."
      operationId: updatePreSubscriptions
      parameters:
      - description: Array of presubscriptions.
        in: body
        name: presubscription
        required: true
        schema:
          $ref: '#/definitions/PresubscriptionArray'
      produces:
      - text/plain
      responses:
        204:
          description: Successfully created.
        400:
          description: Bad request, malformed content.
        401:
          description: Unauthorized.
        403:
          description: 'Forbidden: the authorization token used is not an access key.'
      summary: Set presubscriptions.
      tags:
      - Device data - subscriptions
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
  /v2/subscriptions/{device-id}:
    delete:
      description: 'Delete all resource subscriptions in a single device.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v2/subscriptions/{device-id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteEndpointSubscriptions
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      responses:
        204:
          description: Successfully removed.
      summary: Delete all subscriptions on a device.
      tags:
      - Device data - subscriptions
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
    get:
      description: 'Retrieve a list of all subscribed resources on a single device.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v2/subscriptions/{device-id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getEndpointSubscriptions
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      produces:
      - text/uri-list
      responses:
        200:
          description: List of subscribed resources.
          schema:
            description: A list of resource URIs, one per line.
            example: /sen/light
            type: string
        404:
          description: Endpoint not found, or there are no subscriptions for that
            endpoint.
      summary: View all subscriptions on a device.
      tags:
      - Device data - subscriptions
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
  /v2/subscriptions/{device-id}/{resourcePath}:
    delete:
      description: 'Remove an existing subscription to a resource.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v2/subscriptions/{device-id}/{resourcePath}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteResourceSubscription
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      - description: 'The resource URL. This can be the path to:


          - An object; for example, `3303`.

          - An object instance; for example `3303/0`.

          - A resource; for example `3303/0/5602`.


          For more information about the Device Management resource model, please
          see the [Device Management documentation](https://www.pelion.com/docs/device-management/current/resources/resource-model.html).'
        in: path
        name: resourcePath
        required: true
        type: string
      responses:
        204:
          description: Successfully removed subscription.
      summary: Remove a subscription.
      tags:
      - Device data - subscriptions
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
    get:
      description: Check whether you are subscribed to receive resource content updates
        for a specific resource.
      operationId: checkResourceSubscription
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      - description: 'The resource URL. This can be the path to:


          - An object; for example, `3303`.

          - An object instance; for example `3303/0`.

          - A resource; for example `3303/0/5602`.


          For more information about the Device Management resource model, please
          see the [Device Management documentation](https://www.pelion.com/docs/device-management/current/resources/resource-model.html).'
        in: path
        name: resourcePath
        required: true
        type: string
      responses:
        200:
          description: Resource is subscribed.
        404:
          description: Resource is not subscribed.
      summary: Read the subscription status for a specific resource.
      tags:
      - Device data - subscriptions
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
    put:
      description: '

        Subscribe to a resource to receive updated resource content, periodically
        or based on a more sophisticated solution-dependent logic.


        To place dynamic observation rules for individual object instances and resources
        and define when the device sends observations, set [notification rules](https://www.pelion.com/docs/device-management/current/resources/resource-change-webapp.html).


        **Note:** Device Management removes all manual subscriptions during a full
        device registration, at which point applications must re-subscribe. To avoid
        this, use `/subscriptions` to set a presubscription.


        You can subscribe to resources, objects and object instances.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v2/subscriptions/{device-id}/{resourcePath}
        \

        -H ''Authorization: Bearer <access_key>''

        ```


        **Important:** You must also call a [`/notification/callback`](https://www.pelion.com/docs/device-management-api/notifications/)
        method for Device Management Connect to push resource change notifications.'
      operationId: addResourceSubscription
      parameters:
      - description: The device ID generated by Device Management. The ID must be
          an exact match. Do not use wildcards.
        in: path
        name: device-id
        required: true
        type: string
      - description: 'The resource URL. This can be the path to:


          - An object; for example, `3303`.

          - An object instance; for example `3303/0`.

          - A resource; for example `3303/0/5602`.


          For more information about the Device Management resource model, please
          see the [Device Management documentation](https://www.pelion.com/docs/device-management/current/resources/resource-model.html).'
        in: path
        name: resourcePath
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successfully subscribed.
        202:
          description: Accepted. Returns an asynchronous response ID used to reference
            the future asynchronous response.
          schema:
            $ref: '#/definitions/AsyncID'
        400:
          description: Bad request, malformed content.
        404:
          description: Endpoint or its resource not found.
        429:
          description: 'Cannot accept the request at the moment: the queue is full.'
        502:
          description: 'Subscription failed: endpoint not connected.'
      summary: Subscribe to a resource to receive updates about resource changes.
      tags:
      - Device data - subscriptions
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
  /v3/access-keys:
    get:
      description: 'Retrieve an array of access keys.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/access-keys \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccessKeys
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Status filter.
        in: query
        name: status__eq
        required: false
        type: string
      - description: Application filter.
        in: query
        name: application_id__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKeyList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all access keys.
      tags:
      - Account - access keys
      x-filter:
        application_id:
        - eq
        status:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/access-keys/{access_key_id}:
    get:
      description: 'Retrieve details of an access key.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/access-keys/{access_key_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccessKey
      parameters:
      - description: The ID of the access key to retrieve.
        in: path
        name: access_key_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKey'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An access key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get access key.
      tags:
      - Account - access keys
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts:
    get:
      description: 'Retrieve an array of tenant accounts, optionally filtered by status
        and tier level.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccounts
      parameters:
      - description: An optional filter for account status, ENROLLING, ACTIVE, RESTRICTED,
          or SUSPENDED.
        in: query
        name: status__eq
        required: false
        type: string
      - description: An optional filter to retrieve accounts with a specified set
          of statuses.
        in: query
        name: status__in
        required: false
        type: string
      - description: An optional filter to exclude accounts with a specified set of
          statuses.
        in: query
        name: status__nin
        required: false
        type: string
      - description: An optional filter for tier level. Must be 0, 1, 2, 98, 99, or
          omitted.
        in: query
        name: tier__eq
        required: false
        type: string
      - description: An optional filter for parent account ID.
        in: query
        name: parent__eq
        required: false
        type: string
      - description: An optional filter for account end market.
        in: query
        name: end_market__eq
        required: false
        type: string
      - description: 'An optional filter for account country. Finds all matches where
          the filter value is a case-insensitive substring of the result. Example:
          country__like=LAND matches Ireland.'
        in: query
        name: country__like
        required: false
        type: string
      - default: 1000
        description: The number of results to return (2-1000). Default 1000.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          limits, policies, sub_accounts, history.'
        in: query
        name: include
        required: false
        type: string
      - description: 'Format information for the query response. Supported: format=breakdown.'
        in: query
        name: format
        required: false
        type: string
      - description: Property name returned from account-specific properties.
        in: query
        name: properties
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccountInfoList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all accounts.
      tags:
      - Tenant accounts - accounts
      x-filter:
        country:
        - like
        end_market:
        - eq
        parent:
        - eq
        status:
        - eq
        - in
        - nin
        tier:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new account.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"display_name": "MyAccount1", "aliases": [ "my-account" ], "admin_name":
        "accountAdmin1", "email": "example_admin@myaccount.info", "country": "United
        Kingdom", "end_market": "Smart City", "address_line1": "110 Fulbourn Rd",
        "city": "Cambridge", "contact": "J. Doe", "company": "Arm"}''

        ```'
      operationId: createAccount
      parameters:
      - description: Details of the account to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccountCreationReq'
      - default: create
        description: 'Action, either `create` or `enroll`.

          <ul>

          <li>`create` creates the account where its admin user has ACTIVE status
          if `admin_password` was defined in the request, or RESET status if no `admin_password`
          was defined. If the user already exists, its status is not modified. </li>

          <li>`enroll` creates the account where its admin user has ENROLLING status.
          If the user already exists, its status is not modified. Email to finish
          enrollment or notify the existing user about the new account is sent to
          the `admin_email` defined in the request. </li></ul>'
        in: query
        name: action
        required: false
        type: string
      produces:
      - application/json
      responses:
        '201':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccountCreationResp'
        '400':
          description: Error in input data, for example, invalid username.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Account with the specified alias exists already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new account.
      tags:
      - Tenant accounts - accounts
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/me:
    get:
      description: 'Retrieve information about the account.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/me?include=policies
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getMyAccountInfo
      parameters:
      - description: 'Comma-separated additional data to return. Currently supported:
          limits, policies, sub_accounts.'
        in: query
        name: include
        required: false
        type: string
      - description: Property name to return from account-specific properties.
        in: query
        name: properties
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccountInfo'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get account information.
      tags:
      - Account - profile
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update the account.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/me \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"phone_number": "12345678"}''

        ```'
      operationId: updateMyAccount
      parameters:
      - description: Details of the account to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccountUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccountInfo'
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates attributes of the account.
      tags:
      - Account - profile
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/me/notifications:
    get:
      description: Retrieve an array of email notification logs.
      operationId: getNofificationEntries
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/NotificationEntryList'
        '400':
          description: Error in input data, or missing or invalid parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get logs of email notifications.
      tags:
      - Account - email notification logs
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/me/notifications/{notification_id}:
    get:
      description: Retrieve an email notification log entry.
      operationId: getNofificationEntry
      parameters:
      - description: The ID of the log entry to be retrieved.
        in: path
        name: notification_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NotificationEntry'
        '400':
          description: Error in input data, missing or invalid parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: No entry found for the given ID.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an email notification.
      tags:
      - Account - email notification logs
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}:
    get:
      description: 'Retrieve detailed information about an account.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**


        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id} \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountInfo
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          limits, policies, sub_accounts, history.'
        in: query
        name: include
        required: false
        type: string
      - description: Property name to return from account-specific properties.
        in: query
        name: properties
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccountInfo'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account with the given ID not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get account information.
      tags:
      - Tenant accounts - accounts
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update an account.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**


        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id} \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"phone_number": "12345678"}''

        ```'
      operationId: updateAccount
      parameters:
      - description: The ID of the account to update.
        in: path
        name: account_id
        required: true
        type: string
      - description: Details of the account to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccountUpdateRootReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccountInfo'
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account with the given ID not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Account with the specified new alias exists already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update attributes of an existing account.
      tags:
      - Tenant accounts - accounts
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/access-keys:
    get:
      description: 'Retrieve an array of access keys.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/access-keys
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountAccessKeys
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Status filter.
        in: query
        name: status__eq
        required: false
        type: string
      - description: Application filter.
        in: query
        name: application_id__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKeyList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all access keys.
      tags:
      - Tenant accounts - access keys
      x-filter:
        application_id:
        - eq
        status:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/access-keys/{access_key_id}:
    get:
      description: 'Retrieve details of an access key.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/access-keys/{access_key_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountAccessKey
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the access key to retrieve.
        in: path
        name: access_key_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKey'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or access key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get access key.
      tags:
      - Tenant accounts - access keys
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/api-keys:
    get:
      deprecated: true
      description: 'Retrieve an array of API keys, optionally filtered by the owner.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountApiKeys
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: API key filter. Do not include the private portion of the API
          key (the last 32 characters).
        in: query
        name: key__eq
        required: false
        type: string
      - description: Owner name filter.
        in: query
        name: owner__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all API keys.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-filter:
        key:
        - eq
        owner:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Create a new API key. There is no default value for the owner
        ID, and it must be from the same account where the new API key is created.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "MyKey1"}''

        ```'
      operationId: createAccountApiKey
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: Details of the API key to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKeyInfoReq'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data, for example, missing API key name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new API key.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/api-keys/{apikey_id}:
    delete:
      deprecated: true
      description: 'Delete an API key.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteAccountApiKey
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key to delete.
        in: path
        name: apikey_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete the API key.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys/{access_key_id}
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      deprecated: true
      description: "Retrieve details of an API key.\n<b>Note:</b> This endpoint is\
        \ restricted to administrators.\n\n**Example:**\n```\ncurl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}\
        \ \\\n -H 'Authorization: Bearer <access_key>'\n```"
      operationId: getAccountApiKey
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key to retrieve.
        in: path
        name: apikey_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get API key details.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys/{access_key_id}
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      deprecated: true
      description: 'Update API key details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestApiKey25"}''

        ```'
      operationId: updateAccountApiKey
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key to update.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: New API key attributes to be stored.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKeyUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data, for example, invalid API key name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account ID or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update API key details.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys/{access_key_id}
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/api-keys/{apikey_id}/groups:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API key from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}/groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeAccountApiKeyFromGroups
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key to remove from the group.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API key from groups.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}/groups/remove/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      deprecated: true
      description: 'Retrieve an array of policy groups associated with an API key.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}/groups
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getGroupsOfAccountApikey
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key.
        in: path
        name: apikey_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups of an API key.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/groups
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Add API key to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}/groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addAccountApiKeyToGroups
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key to add to the group.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: A list of IDs of groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API key to a list of groups.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}/groups/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/api-keys/{apikey_id}/groups/add:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Add an API key to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}/groups/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addAccountApiKeyToListedGroups
      parameters:
      - description: The ID of the Account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key to add to the group.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: A list of IDs of groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API key to a list of groups.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys/groups/add
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/api-keys/{apikey_id}/groups/remove:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove an API key from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}/groups/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeAccountApiKeyFromListedGroups
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key to remove from the group.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API key from groups.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/groups/remove
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/api-keys/{apikey_id}/reset-secret:
    post:
      deprecated: true
      description: 'Reset the secret key of the API key.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/api-keys/{apikey_id}/reset-secret
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: resetAccountApiKeySecret
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the API key to reset.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: New API key attributes to be stored.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ApiKeyUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Reset the secret key.
      tags:
      - Tenant accounts - API keys
      x-deprecation:
        comment: This endpoint is deprecated.
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/applications:
    get:
      description: 'Retrieve an array of applications.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountApplications
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Status filter.
        in: query
        name: status__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApplicationList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all applications.
      tags:
      - Tenant accounts - applications
      x-filter:
        status:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications
        -d ''{"name": "MyApplication1"}'' \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json''

        ```'
      operationId: createAccountApplication
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The details of the application to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Application'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/Application'
        '400':
          description: Error in input data, for example, missing name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new application.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/applications/{application_id}:
    delete:
      description: 'Delete the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteAccountApplication
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application to delete.
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete application.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve details of an application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountApplication
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application to retrieve.
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Application'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get application.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      description: 'Update application details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestApplication25"}''

        ```'
      operationId: updateAccountApplication
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application to update.
        in: path
        name: application_id
        required: true
        type: string
      - description: New applicationattributes to store.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Application'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data, for example, invalid display name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update application details.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/applications/{application_id}/access-keys:
    get:
      description: 'Retrieve an array of access keys associated with the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountApplicationAccessKeys
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Status filter.
        in: query
        name: status__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKeyList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all access keys associated with the application.
      tags:
      - Tenant accounts - applications
      x-filter:
        status:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new access key for the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys
        -d ''{"name": "MyKey1"}'' \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json''

        ```'
      operationId: createAccountApplicationAccessKey
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - description: The details of the access key to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccessKey'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/AccessKey'
        '400':
          description: Error in input data, for example, missing display name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new application access key.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/applications/{application_id}/access-keys/{access_key_id}:
    delete:
      description: 'Delete the access key associated with the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys/{access_key_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteAccountApplicationAccessKey
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - description: The ID of the access key to delete.
        in: path
        name: access_key_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account, application or access key with the specified ID
            does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete access key associated with the application.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve details of an access key associated with the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys/{access_key_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountApplicationAccessKey
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - description: The ID of the access key to retrieve.
        in: path
        name: access_key_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKey'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account, application or access key with the specified ID
            does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get access key.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      description: 'Update access key details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/access-keys/{access_key_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestAccessKey"}''

        ```'
      operationId: updateAccountApplicationAccessKey
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - description: The ID of the access key to update.
        in: path
        name: access_key_id
        required: true
        type: string
      - description: New access key attributes to store.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccessKey'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKey'
        '400':
          description: Error in input data, for example, invalid display name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account, application or access key with the specified ID
            does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update access key details.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/applications/{application_id}/groups:
    get:
      description: 'Retrieve an array of policy groups associated with an application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/groups
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getGroupsOfAccountApplication
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or application with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups of an application.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/applications/{application_id}/groups/add:
    post:
      consumes:
      - application/json
      description: 'Add application to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/groups/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addAccountApplicationToGroups
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application to add to the group.
        in: path
        name: application_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '204':
          description: Successful operation.
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account, a group or application with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The application is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add application to a list of groups.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/applications/{application_id}/groups/remove:
    post:
      consumes:
      - application/json
      description: 'Remove application from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/applications/{application_id}/groups/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeAccountApplicationFromGroups
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the application to remove from the group.
        in: path
        name: application_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '204':
          description: Successful operation.
        '400':
          description: Error in input data, for example, invalid group ID.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or application with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove application from groups.
      tags:
      - Tenant accounts - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-colors:
    delete:
      description: 'Delete account branding colors for all themes.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllAccountColors
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account or branding colors not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete all colors.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-colors/dark:
    delete:
      description: 'Delete account dark theme branding colors.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors/dark
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllAccountDarkColors
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account or branding colors not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete colors in the dark theme.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve dark theme branding colors for an account.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors/dark
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountDarkColors
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingColorList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get dark theme branding colors.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: "Update an array of dark theme branding colors.\n<b>Note:</b> This\
        \ endpoint is restricted to administrators.\n\n**Example:**\n```\ncurl -X\
        \ PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id)/branding-colors/dark\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n-H 'content-type: application/json'\
        \ \\\n'[{ \"reference\": \"primary\",\n   \"color\": \"#f3f93e\" }]'\n```"
      operationId: bulkSetAccountDarkColors
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: List of branding colors.
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/BrandingColorUpdate'
          type: array
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been set successfully.
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates an array of dark theme branding colors.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-colors/dark/{reference}:
    delete:
      description: 'Resets the branding color to its dark theme default.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors/dark/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: resetAccountDarkColor
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Reset branding color to default.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the requested dark theme branding color.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors/dark/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountDarkColor
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingColor'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get dark theme branding color.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update a dark theme branding color.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id)/branding-colors/dark/primary
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "color": "#f3f93e" }''

        ```'
      operationId: setAccountDarkColor
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      - description: The branding color.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/BrandingColor'
      produces:
      - application/json
      responses:
        '200':
          description: Color has been set successfully.
          schema:
            $ref: '#/definitions/BrandingColor'
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates a dark theme branding color.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-colors/light:
    delete:
      description: 'Delete account light theme branding colors.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors/light
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllAccountLightColors
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account or branding colors not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete colors in the light theme.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve light theme branding colors for an account.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors/light
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountLightColors
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingColorList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get light theme branding colors.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: "Update an array of light theme branding colors.\n<b>Note:</b>\
        \ This endpoint is restricted to administrators.\n\n**Example:**\n```\ncurl\
        \ -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id)/branding-colors/light\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n-H 'content-type: application/json'\
        \ \\\n'[{ \"reference\": \"primary\",\n   \"color\": \"purple\" }]'\n```"
      operationId: bulkSetAccountLightColors
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: List of branding colors.
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/BrandingColorUpdate'
          type: array
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been set successfully.
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates an array of light theme branding colors.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-colors/light/{reference}:
    delete:
      description: 'Resets the branding color to its light theme default.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors/light/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: resetAccountLightColor
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Reset branding color to default.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the requested light theme branding color.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-colors/light/{reference}

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountLightColor
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingColor'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get light theme branding color.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update a light theme branding color.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id)/branding-colors/light/primary
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "color": "purple" }''

        ```'
      operationId: setAccountLightColor
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      - description: The branding color.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/BrandingColor'
      produces:
      - application/json
      responses:
        '200':
          description: Color set successfully.
          schema:
            $ref: '#/definitions/BrandingColor'
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates light theme branding color.
      tags:
      - Tenant user interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images:
    delete:
      description: 'Delete account branding images for all themes.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllAccountImages
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Images have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account or branding images not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete all images.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/dark:
    delete:
      description: 'Delete account dark theme branding images.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/dark
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllAccountDarkImages
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Images have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account or branding images not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete images in the dark theme.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the metadata of all dark theme branding images.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/dark
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountDarkImageData
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingImageList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata of all dark theme images.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/dark/{reference}:
    get:
      description: 'Retrieve metadata of one account dark theme branding image.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/dark/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountDarkImageData
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingImage'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference, or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata of a dark theme image.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/dark/{reference}/clear:
    post:
      description: 'Revert an account branding image to dark theme default.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/dark/{reference}/clear
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: clearAccountDarkImage
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Image reverted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference, or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Revert an image to dark theme default.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/dark/{reference}/upload:
    post:
      consumes:
      - image/png
      - image/jpeg
      description: 'Upload a new account dark theme branding image in PNG or JPEG
        format.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/dark/{reference}/upload
        \

        -H ''Authorization: Bearer <access_key>''

        -H ''content-type: image/png''  --data-binary ''@myimage.png''

        ```'
      operationId: uploadAccountDarkImage
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      - description: The image in PNG or JPEG format.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Image'
      produces:
      - application/json
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Content-Location:
              description: Location of the image metadata.
              type: string
            Location:
              description: Location of the image binary.
              type: string
          schema:
            $ref: '#/definitions/BrandingImage'
        '400':
          description: Error in input data format, for example, image is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference, or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a dark theme image.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/dark/{reference}/upload-multipart:
    post:
      consumes:
      - multipart/form-data
      description: 'Upload a new account dark theme branding image as form data in
        PNG or JPEG format.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: uploadAccountDarkImageMultipart
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      - description: The image in PNG or JPEG format as multipart form data.
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Content-Location:
              description: Location of the image metadata.
              type: string
            Location:
              description: Location of the image binary.
              type: string
          schema:
            $ref: '#/definitions/BrandingImage'
        '400':
          description: Error in input data format, for example, image is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a dark theme image.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/light:
    delete:
      description: 'Delete account light theme branding images.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/light
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllAccountLightImages
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Images have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account or branding images not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete images in the light theme.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the metadata of all light theme branding images.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/light
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountLightImageData
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingImageList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata of all light theme images.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/light/{reference}:
    get:
      description: 'Retrieve metadata for one account light theme branding image.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/light/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountLightImageData
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingImage'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference, or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata of a light theme image.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/light/{reference}/clear:
    post:
      description: 'Revert an account branding image to light theme default.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/light/{reference}/clear
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: clearAccountLightImage
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Image reverted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference, or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Revert an image to light theme default.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/light/{reference}/upload:
    post:
      consumes:
      - image/png
      - image/jpeg
      description: 'Upload a new account light theme branding image in PNG or JPEG
        format.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/branding-images/light/{reference}/upload
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: image/png'' --data-binary ''@myimage.png''

        ```'
      operationId: uploadAccountLightImage
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      - description: The image in PNG or JPEG format.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Image'
      produces:
      - application/json
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Content-Location:
              description: Location of image metadata.
              type: string
            Location:
              description: Location of the image binary.
              type: string
          schema:
            $ref: '#/definitions/BrandingImage'
        '400':
          description: Error in input data format, for example, image is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference, or account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a light theme image.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/branding-images/light/{reference}/upload-multipart:
    post:
      consumes:
      - multipart/form-data
      description: 'Upload a new account branding image as form data in PNG or JPEG
        format.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: uploadAccountLightImageMultipart
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      - description: The image in PNG or JPEG format as multipart form data.
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Content-Location:
              description: Location of the image metadata.
              type: string
            Location:
              description: Location of the image binary.
              type: string
          schema:
            $ref: '#/definitions/BrandingImage'
        '400':
          description: Error in input data format, for example, image is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a light theme image.
      tags:
      - Tenant user interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/identity-providers:
    get:
      consumes:
      - application/json
      description: 'Retrieve an array of identity providers.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: getAllAccountIdentityProviders
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/IdentityProviderList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all identity providers.
      tags:
      - Tenant accounts - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new identity provider.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: createAccountIdentityProvider
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - allowEmptyValue: true
        description: 'Indicates that the OpenID Connect endpoints and keys should
          be set using the OpenID Connect Discovery mechanism. The following parameters
          are set automatically: * authorization_endpoint * token_endpoint * userinfo_endpoint
          * revocation_endpoint * jwks_uri * keys'
        in: query
        name: discovery
        type: boolean
      - description: Details of the identity provider to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/IdentityProviderCreationReq'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          headers:
            Content-Location:
              description: /v3/accounts/{account_id}/identity-providers/{identity_provider_id}
              type: string
            Location:
              description: /v3/accounts/{account_id}/identity-providers/{identity_provider_id}
              type: string
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '400':
          description: Error in input data, for example, too long name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new identity provider.
      tags:
      - Tenant accounts - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/identity-providers/{identity_provider_id}:
    delete:
      description: 'Delete an identity provider by ID.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: deleteAccountIdentityProvider
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the identity provider to delete.
        in: path
        name: identity_provider_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, or identity provider is in use.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete an identity provider by ID.
      tags:
      - Tenant accounts - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve an identity provider.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: getAccountIdentityProvider
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the identity provider to retrieve.
        in: path
        name: identity_provider_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an identity provider.
      tags:
      - Tenant accounts - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update an existing identity provider.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: updateAccountIdentityProvider
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the identity provider to update.
        in: path
        name: identity_provider_id
        required: true
        type: string
      - allowEmptyValue: true
        description: 'Indicates that the OpenID Connect endpoints and keys should
          be set using the OpenID Connect Discovery mechanism. The following parameters
          are set automatically: * authorization_endpoint * token_endpoint * userinfo_endpoint
          * revocation_endpoint * jwks_uri * keys'
        in: query
        name: discovery
        type: boolean
      - description: Details of the identity provider to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/IdentityProviderUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '400':
          description: Error in input data, for example, missing name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update an existing identity provider.
      tags:
      - Tenant accounts - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/identity-providers/{identity_provider_id}/delete-sp-certificate:
    post:
      consumes:
      - application/json
      description: 'Delete a service provider certificate.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: deleteAccountSpCertificate
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the identity provider whose certificate should be deleted.
        in: path
        name: identity_provider_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          headers:
            Content-Location:
              description: /v3/accounts/{account_id}/identity-providers/{identity_provider_id}
              type: string
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete the service provider certificate.
      tags:
      - Tenant accounts - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/identity-providers/{identity_provider_id}/generate-sp-certificate:
    post:
      consumes:
      - application/json
      description: 'Generate a new service provider certificate.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: generateAccountSpCertificate
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the identity provider for which to generate a certificate.
        in: path
        name: identity_provider_id
        required: true
        type: string
      - description: Details of the service provider certificate to be generated.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CertificateGenerationReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          headers:
            Content-Location:
              description: /v3/accounts/{account_id}/identity-providers/{identity_provider_id}
              type: string
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '400':
          description: Error in input data, for example, invalid certificate validity
            value.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Generate a new service provider certificate.
      tags:
      - Tenant accounts - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/identity-providers/{identity_provider_id}/refresh-jwks:
    post:
      consumes:
      - application/json
      description: 'Refresh an OIDC IdP''s signing keys.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: refreshAccountJwks
      parameters:
      - description: The ID of the account to be managed.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the identity provider for which to refresh the signing
          keys.
        in: path
        name: identity_provider_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          headers:
            Content-Location:
              description: /v3/accounts/{account_id}/identity-providers/{identity_provider_id}
              type: string
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '400':
          description: Not an OIDC IdP or JWKS URI is unspecified.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Refresh the OIDC signing keys.
      tags:
      - Tenant accounts - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/limitations:
    get:
      description: 'Retrieve an array of entitlement limitations.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: aggregatorGetAccountLimitations
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: Filter for finding account limitations by inheritance. True returns
          also inherited limitations. False returns only non-inherited ones.
        in: query
        name: inherited__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountLimitationList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the given ID not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get entitlement limitations.
      tags:
      - Tenant accounts - entitlement limitations
      x-filter:
        inherited:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/limitations/{limitation_id}:
    get:
      description: 'Retrieve an entitlement limitation.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: aggregatorGetAccountLimitation
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the limitation to be fetched.
        in: path
        name: limitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountLimitation'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Limitation or account with the given ID not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an entitlement limitation.
      tags:
      - Tenant accounts - entitlement limitations
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/notifications:
    get:
      description: 'Retrieve an array of email notification logs.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: getAccountNofificationEntries
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/NotificationEntryList'
        '400':
          description: Error in input data, or missing or invalid parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the given ID not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get email notifications.
      tags:
      - Tenant accounts - email notification logs
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/notifications/{notification_id}:
    get:
      description: 'Retrieve an email notifications log entry.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: getAccountNofificationEntry
      parameters:
      - description: The ID of the account for which this notification should be retrieved.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the notification entry to be retrieved.
        in: path
        name: notification_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NotificationEntry'
        '400':
          description: Error in input data, missing or invalid parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: No entry found for the given ID.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an email notification.
      tags:
      - Tenant accounts - email notification logs
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups:
    get:
      description: 'Retrieve an array of policy groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountGroups
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Filter for group name.
        in: query
        name: name__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups.
      tags:
      - Tenant accounts - policy groups
      x-filter:
        name:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "MyGroup1"}''

        ```'
      operationId: createAccountGroup
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: Details of the group to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupCreationInfo'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, invalid group name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: A group with that name already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}:
    delete:
      description: 'Delete a group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteAccountGroup
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to delete.
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, or Administrators group cannot be removed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve policy group details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountGroupSummary
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to retrieve.
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Add users and API keys to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"users": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]}''

        ```'
      operationId: addSubjectsToAccountGroup
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to update.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of users and API keys to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the user or API key does
            not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user of this API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add members to a group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update a group name.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestGroup2"}''

        ```'
      operationId: updateAccountGroupName
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to update.
        in: path
        name: group_id
        required: true
        type: string
      - description: Details of the group to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupUpdateInfo'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the group name is too long.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update the group name.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/api-keys:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API keys from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/api-keys
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"apikeys": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]}''

        ```'
      operationId: removeApiKeysFromAccountGroup
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to remove API keys from.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the array of API keys is
            missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API keys from a group.
      tags:
      - Tenant accounts - policy groups
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/api-keys/remove
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      deprecated: true
      description: 'Retrieve an array of API keys associated with a policy group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/api-keys
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getApiKeysOfAccountGroup
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to retrieve API keys for.
        in: path
        name: group_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get API keys in a group.
      tags:
      - Tenant accounts - policy groups
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/applications
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      deprecated: true
      description: 'Add API keys to account groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/api-keys
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: addApiKeysToAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to retrieve API keys for.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API Key is a member of the group or account already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API keys to Account group.
      tags:
      - Tenant accounts - policy groups
      x-deprecation:
        comment: This endpoint is deprecated. use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/api-keys/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/api-keys/add:
    post:
      deprecated: true
      description: 'Add API keys to account groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/api-keys/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"apikeys": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]}''

        ```'
      operationId: addListedApiKeysToAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to remove API keys from.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the account group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API keys to account group.
      tags:
      - Tenant accounts - policy groups
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/applications/add
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/api-keys/remove:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API keys from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/api-keys/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"apikeys": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]}''

        ```'
      operationId: removeListedApiKeysFromAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to remove API keys from.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the array of API keys is
            missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API keys from a group.
      tags:
      - Tenant accounts - policy groups
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/applications/remove
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/applications:
    get:
      description: 'Retrieve an array of applications associated with a policy group.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/applications
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getApplicationsOfAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to retrieve applications for.
        in: path
        name: group_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApplicationList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get applications in a group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/applications/add:
    post:
      description: 'Add applications to account groups.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/applications/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"applications": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]}''

        ```'
      operationId: addListedApplicationsToAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to add applications to.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of applications to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The application is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add applications to account group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/applications/remove:
    post:
      consumes:
      - application/json
      description: 'Remove applications from groups.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/applications/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"applications": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]}''

        ```'
      operationId: removeListedApplicationsFromAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to remove applications from.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of applications to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the array of applications
            is missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove applications from a group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/users:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: "Remove users from groups.\n<b>Note:</b> This endpoint is restricted\
        \ to administrators.\n\n**Example:**\n```\ncurl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/users\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n -H 'content-type: application/json'\
        \ \\\n-d '{\"users\": [\"0162056a9a1586f30242590700000000\",\"0117056a9a1586f30242590700000000\"\
        ]}'\n```"
      operationId: removeUsersFromAccountGroup
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to remove users from.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of users to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the last user to remove from
            Administrators group.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove users from a group.
      tags:
      - Tenant accounts - policy groups
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/users/remove/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve an array of users associated with a policy group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/users
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getUsersOfAccountGroup
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to retrieve users for.
        in: path
        name: group_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: An optional filter to retrieve users by status.
        in: query
        name: status__eq
        required: false
        type: string
      - description: An optional filter to retrieve users with a specified set of
          statuses.
        in: query
        name: status__in
        required: false
        type: string
      - description: An optional filter to exclude users with a specified set of statuses.
        in: query
        name: status__nin
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get users in a policy group.
      tags:
      - Tenant accounts - policy groups
      x-filter:
        status:
        - eq
        - in
        - nin
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      deprecated: true
      description: 'Add users to account group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/users
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: addUsersToAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to add users to.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of user IDs to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user is a member of the account group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add users to account group.
      tags:
      - Tenant accounts - policy groups
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/users/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/users/add:
    post:
      description: 'Add users to account group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/users/add
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: addListedUsersToAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to retrieve users for.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of users to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user is a member of the account group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add users to account group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/policy-groups/{group_id}/users/remove:
    post:
      consumes:
      - application/json
      description: "Remove users from groups.\n<b>Note:</b> This endpoint is restricted\
        \ to administrators.\n\n**Example:**\n```\ncurl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/policy-groups/{group_id}/users/remove\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n -H 'content-type: application/json'\
        \ \\\n-d '{\"users\": [\"0162056a9a1586f30242590700000000\",\"0117056a9a1586f30242590700000000\"\
        ]}'\n```"
      operationId: removeListedUsersFromAccountGroup
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the group to remove users from.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of users to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the last user to remove from
            Administrators group.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove users from a group.
      tags:
      - Tenant accounts - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/trusted-certificates:
    get:
      description: 'Retrieve an array of trusted certificates.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountCertificates
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Filter for certificate name.
        in: query
        name: name__eq
        required: false
        type: string
      - description: Filter for service.
        in: query
        name: service__eq
        required: false
        type: string
      - description: Filter for expire.
        format: int32
        in: query
        name: expire__eq
        required: false
        type: integer
      - description: Filter for developer certificates.
        format: int32
        in: query
        name: device_execution_mode__eq
        required: false
        type: integer
      - description: Filter for not developer certificates.
        format: int32
        in: query
        name: device_execution_mode__neq
        required: false
        type: integer
      - description: Owner name filter.
        in: query
        name: owner__eq
        required: false
        type: string
      - description: Enrollment mode filter.
        in: query
        name: enrollment_mode__eq
        required: false
        type: boolean
      - description: Filter for certificate status.
        in: query
        name: status__eq
        required: false
        type: string
      - description: 'Filter for issuer. Finds all matches where the filter value
          is a case-insensitive substring of the result. Example: issuer__like=cn=iss
          matches CN=issuer.'
        in: query
        name: issuer__like
        required: false
        type: string
      - description: 'Filter for subject. Finds all matches where the filter value
          is a case-insensitive substring of the result. Example: subject__like=cn=su
          matches CN=subject.'
        in: query
        name: subject__like
        required: false
        type: string
      - description: Filter for certificate fingerprint.
        in: query
        name: certificate_fingerprint__eq
        required: false
        type: string
      - description: Filter for finding certificates by validity. True returns certificates
          which are not yet expired. False returns certificates which have expired.
        in: query
        name: valid__eq
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/TrustedCertificateRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, only available for administrators of commercial
            accounts.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get trusted certificates.
      tags:
      - Tenant security and identity - certificates
      x-filter:
        certificate_fingerprint:
        - eq
        device_execution_mode:
        - eq
        - neq
        enrollment_mode:
        - eq
        expire:
        - eq
        issuer:
        - like
        name:
        - eq
        owner:
        - eq
        service:
        - eq
        status:
        - eq
        subject:
        - like
        valid:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Upload new trusted certificate.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d {"name": "myCert1", "description": "very important cert", "certificate":
        "certificate_data", "service": "lwm2m"}

        ```'
      operationId: addAccountCertificate
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: A trusted certificate object with attributes. Signature is optional.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TrustedCertificateReq'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/TrustedCertificateResp'
        '400':
          description: Invalid certificate data, certificate validation failed, certificate
            already expired or certificate uses unsupported, or weak cipher.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, only available for administrators of commercial
            accounts.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload new trusted certificate.
      tags:
      - Tenant security and identity - certificates
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/trusted-certificates/{cert_id}:
    delete:
      description: 'Delete a trusted certificate.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates/{cert_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteAccountCertificate
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the trusted certificate to delete.
        in: path
        name: cert_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, only available for administrators of commercial
            accounts.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or certificate with the given ID not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a trusted certificate by ID.
      tags:
      - Tenant security and identity - certificates
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve a trusted certificate.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates/{cert_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountCertificate
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the trusted certificate to retrieve.
        in: path
        name: cert_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/TrustedCertificateResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, only available for administrators of commercial
            accounts.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or certificate with the given ID not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a trusted certificate.
      tags:
      - Tenant security and identity - certificates
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: "Update a trusted certificate.\n<b>Note:</b> This endpoint is restricted\
        \ to administrators.\n\n**Example:**\n```\ncurl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates/{cert_id}\
        \ \\\n -H 'Authorization: Bearer <access_key>' \\\n -H 'content-type: application/json'\
        \ \\\n -d {\"description\": \"very important cert\"}\n ```"
      operationId: updateAccountCertificate
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the trusted certificate to update.
        in: path
        name: cert_id
        required: true
        type: string
      - description: A trusted certificate object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TrustedCertificateUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/TrustedCertificateResp'
        '400':
          description: Invalid certificate data, certificate validation failed, certificate
            already expired or certificate uses unsupported, or weak cipher.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, only available for administrators of commercial
            accounts.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or certificate with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update trusted certificate.
      tags:
      - Tenant security and identity - certificates
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/user-invitations:
    get:
      description: 'Retrieve an array of active user invitations.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/user-invitations
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountInvitations
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: Filter to retrieve user invitations by a specified login profile.
        in: query
        name: login_profiles__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInvitationRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get user invitations.
      tags:
      - Tenant accounts - user invitations
      x-filter:
        login_profiles:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Invite a new or existing user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accouns/{account_id}/user-invitations
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d {"email": "myemail@company.com"}

        ```'
      operationId: createAccountInvitation
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: A user invitation object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserInvitationReq'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/UserInvitationResp'
        '400':
          description: Error in input data, for example, invalid email address.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a user invitation.
      tags:
      - Tenant accounts - user invitations
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/user-invitations/{invitation_id}:
    delete:
      description: 'Delete an active user invitation sent to a new or existing user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/user-invitations/{invitation_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteAccountInvitation
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the invitation to delete.
        in: path
        name: invitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or invitation with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a user invitation.
      tags:
      - Tenant accounts - user invitations
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve details of an active user invitation sent for a new or
        existing user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/user-invitations/{invitation_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountInvitation
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the invitation to retrieve.
        in: path
        name: invitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInvitationResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or invitation with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Details of a user invitation.
      tags:
      - Tenant accounts - user invitations
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/users:
    get:
      description: 'Retrieve an array of users.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllAccountUsers
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Filter for email address.
        in: query
        name: email__eq
        required: false
        type: string
      - description: Filter for status.
        in: query
        name: status__eq
        required: false
        type: string
      - description: An optional filter to retrieve users with a specified set of
          statuses.
        in: query
        name: status__in
        required: false
        type: string
      - description: An optional filter to exclude users with a specified set of statuses.
        in: query
        name: status__nin
        required: false
        type: string
      - description: An optional filter to retrieve users with a specified login profile.
        in: query
        name: login_profiles__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get users.
      tags:
      - Tenant accounts - users
      x-filter:
        email:
        - eq
        login_profiles:
        - eq
        status:
        - eq
        - in
        - nin
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create or invite a new user to the account. Only email address
        is used; other attributes are set in the second step.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d {"email": "myemail@company.com"}

        ```'
      operationId: createAccountUser
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: A user object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserInfoReq'
      - default: create
        description: Create or invite user.
        in: query
        name: action
        required: false
        type: string
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data, for example, an invalid email address.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: A user with the given username or email already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new user.
      tags:
      - Tenant accounts - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/users/{user_id}:
    delete:
      description: 'Delete a user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteAccountUser
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user to delete.
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '400':
          description: Bad request, for example, trying to delete an active user.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or user with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a user.
      tags:
      - Tenant accounts - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve user details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAccountUser
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user to retrieve.
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or user with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Details of the user.
      tags:
      - Tenant accounts - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update user details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"username": "myusername"}''

        ```'
      operationId: updateAccountUser
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user to update.
        in: path
        name: user_id
        required: true
        type: string
      - description: A user object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data, for example, an invalid email address.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or user with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: A user with the given username or email already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user details.
      tags:
      - Tenant accounts - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/users/{user_id}/groups:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove user from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeAccountUserFromGroups
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user to remove from the group.
        in: path
        name: user_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account, user, or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove user from groups.
      tags:
      - Tenant accounts - users
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/groups/remove/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve an array of policy groups associated with a user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/groups
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getGroupsOfAccountUser
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or user with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups for a user.
      tags:
      - Tenant accounts - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Add user to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addAccountUserToGroups
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user to add to the group.
        in: path
        name: user_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account, user, or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add user to a list of groups.
      tags:
      - Tenant accounts - users
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/groups/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/users/{user_id}/groups/add:
    post:
      consumes:
      - application/json
      description: 'Add a user to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/groups/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addAccountUserToListedGroups
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user to add to the group.
        in: path
        name: user_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account, user, or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add user to a list of groups.
      tags:
      - Tenant accounts - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/users/{user_id}/groups/remove:
    post:
      consumes:
      - application/json
      description: 'Remove a user from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/groups/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeAccountUserFromListedGroups
      parameters:
      - description: The ID of the account.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user to remove from the group.
        in: path
        name: user_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account, user, or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove user from groups.
      tags:
      - Tenant accounts - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/accounts/{account_id}/users/{user_id}/validate-email:
    post:
      description: 'Validate user email.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/validate-email
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: validateAccountUserEmail
      parameters:
      - description: Account ID.
        in: path
        name: account_id
        required: true
        type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Email validation successfully requested.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An account or user with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Validate the user email.
      tags:
      - Tenant accounts - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys:
    get:
      deprecated: true
      description: 'Retrieve an array of API keys, optionally filtered by the owner.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/api-keys \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllApiKeys
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: API key filter. Do not include the private portion of the API
          key (the last 32 characters).
        in: query
        name: key__eq
        required: false
        type: string
      - description: 'Owner name filter.

          <b>Note:</b> This parameter is restricted to administrators.'
        in: query
        name: owner__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all API keys.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-filter:
        key:
        - eq
        owner:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Create a new API key.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys -d ''{"name":
        "MyKey1"}'' \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json''

        ```'
      operationId: createApiKey
      parameters:
      - description: The details of the API key to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKeyInfoReq'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data, for example, missing API key name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new API key.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/me:
    get:
      deprecated: true
      description: 'Retrieve details of current API key.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/api-keys/me \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getMyApiKey
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get current API key.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated.
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      deprecated: true
      description: 'Update API key details.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/api-keys/me \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestApiKey25"}''

        ```'
      operationId: updateMyApiKey
      parameters:
      - description: New API key attributes to store.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKeyUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data, for example, invalid API key name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update API key details.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated.
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/me/groups:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API key from groups.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeMyApiKeyListedGroups
      parameters:
      - description: A list of IDs of groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API key from groups.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups/remove/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      deprecated: true
      description: 'Retrieve an array of policy groups associated with the current
        API key.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getGroupsOfMyApiKey
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups of the current API key.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated.
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Add API key to groups.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addMyApiKeyToGroups
      parameters:
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden. Adding API key to the 'Administrators' group is
            restricted to administrators.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API key to a list of groups.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/me/groups/add:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Add API key to groups.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups/add/
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addMyApiKeyToListedGroups
      parameters:
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden. Adding API key to the 'Administrators' group is
            restricted to administrators.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API key to a list of groups.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/groups/add
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/me/groups/remove:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API key from groups.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeMyApiKeyFromListedGroups
      parameters:
      - description: A list of IDs of groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API key from groups.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/groups/remove
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/{apikey_id}:
    delete:
      deprecated: true
      description: 'Delete the API key.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteApiKey
      parameters:
      - description: The ID of the API key to delete.
        in: path
        name: apikey_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden. Only the owner of the API key or an administrator
            can delete an API key.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete API key.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use DELETE https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys/{access_key_id}
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      deprecated: true
      description: 'Retrieve details of an API key.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id} \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getApiKey
      parameters:
      - description: The ID of the API key to retrieve.
        in: path
        name: apikey_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get API key.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys/{access_key_id}
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      deprecated: true
      description: 'Update API key details.


        **Example:**

        `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id} \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestApiKey25"}''

        ```'
      operationId: updateApiKey
      parameters:
      - description: The ID of the API key to update.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: New API key attributes to store.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKeyUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data, for example, invalid API key name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden. Only the owner of the API key or an administrator
            can update an API key.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update API key details.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use PUT https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys/{access_key_id}
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/{apikey_id}/groups:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API key from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}/groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeApiKeyFromGroups
      parameters:
      - description: The ID of the API key to remove from the group.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An API key with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API key from groups.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}/groups/remove/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      deprecated: true
      description: 'Retrieve an array of policy groups associated with an API key.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}/groups
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getGroupsOfApikey
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: The ID of the API key.
        in: path
        name: apikey_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An API key with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups of an API key.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use GET https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/groups
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Add API key to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}/groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addApiKeyToGroups
      parameters:
      - description: The ID of the API key to add to the group.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group or API key with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API key to a list of groups.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}/groups/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/{apikey_id}/groups/add:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Add API key to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}/groups/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addApiKeyToListedGroups
      parameters:
      - description: The ID of the API key to add to the group.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group or API key with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API key to a list of groups.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/groups/add
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/{apikey_id}/groups/remove:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API key from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}/groups/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeApiKeyFromListedGroups
      parameters:
      - description: The ID of the API key to remove from the group.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An API key with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API key from groups.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/groups/remove
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/api-keys/{apikey_id}/reset-secret:
    post:
      deprecated: true
      description: 'Reset the secret key of the API key.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id}/reset-secret
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: resetSecret
      parameters:
      - description: The ID of the API key to reset.
        in: path
        name: apikey_id
        required: true
        type: string
      - description: New API key attributes to be stored.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ApiKeyUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An API key with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Reset the secret key.
      tags:
      - Account - API keys
      x-deprecation:
        comment: This endpoint is deprecated.
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/applications:
    get:
      description: 'Retrieve an array of applications.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/applications \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllApplications
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Status filter.
        in: query
        name: status__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApplicationList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all applications.
      tags:
      - Account - applications
      x-filter:
        status:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/applications -d ''{"name":
        "MyApplication1"}'' \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json''

        ```'
      operationId: createApplication
      parameters:
      - description: The details of the application to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Application'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/Application'
        '400':
          description: Error in input data, for example, missing name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new application.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/applications/{application_id}:
    delete:
      description: 'Delete the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteApplication
      parameters:
      - description: The ID of the application to delete.
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete application.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve details of an application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getApplication
      parameters:
      - description: The ID of the application to retrieve.
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Application'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get application.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      description: 'Update application details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestApplication25"}''

        ```'
      operationId: updateApplication
      parameters:
      - description: The ID of the application to update.
        in: path
        name: application_id
        required: true
        type: string
      - description: New applicationattributes to store.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Application'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoResp'
        '400':
          description: Error in input data, for example, invalid display name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update applicationdetails.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/applications/{application_id}/access-keys:
    get:
      description: 'Retrieve an array of access keys associated with the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllApplicationAccessKeys
      parameters:
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Status filter.
        in: query
        name: status__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKeyList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all access keys associated with the application.
      tags:
      - Account - applications
      x-filter:
        status:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new access key for the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys
        -d ''{"name": "MyKey1"}'' \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json''

        ```'
      operationId: createApplicationAccessKey
      parameters:
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - description: The details of the access key to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccessKey'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/AccessKey'
        '400':
          description: Error in input data, for example, missing display name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new applicationaccess key.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/applications/{application_id}/access-keys/{access_key_id}:
    delete:
      description: 'Delete the access key associated with the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys/{access_key_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteApplicationAccessKey
      parameters:
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - description: The ID of the access key to delete.
        in: path
        name: access_key_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application or access key with the specified ID does not
            exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete access key associated with the application.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve details of an access key associated with the application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys/{access_key_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getApplicationAccessKey
      parameters:
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - description: The ID of the access key to retrieve.
        in: path
        name: access_key_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKey'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application or access key with the specified ID does not
            exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get access key.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      description: 'Update access key details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/access-keys/{access_key_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestAccessKey"}''

        ```'
      operationId: updateApplicationAccessKey
      parameters:
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - description: The ID of the access key to update.
        in: path
        name: access_key_id
        required: true
        type: string
      - description: New access key attributes to store.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccessKey'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AccessKey'
        '400':
          description: Error in input data, for example, invalid display name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application or access key with the specified ID does not
            exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update access key details.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/applications/{application_id}/groups:
    get:
      description: 'Retrieve an array of policy groups associated with an application.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/groups
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getGroupsOfApplication
      parameters:
      - description: The ID of the application.
        in: path
        name: application_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups of an application.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/applications/{application_id}/groups/add:
    post:
      consumes:
      - application/json
      description: 'Add application to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/groups/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addApplicationToGroups
      parameters:
      - description: The ID of the application to add to the group.
        in: path
        name: application_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '204':
          description: Successful operation.
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group or application with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The application is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add application to a list of groups.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/applications/{application_id}/groups/remove:
    post:
      consumes:
      - application/json
      description: 'Remove application from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/applications/{application_id}/groups/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeApplicationFromGroups
      parameters:
      - description: The ID of the application to remove from the group.
        in: path
        name: application_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '204':
          description: Successful operation.
        '400':
          description: Error in input data, for example, invalid API key name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden. Only the owner of the API key or an administrator
            can reset an API key.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An application with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove application from groups.
      tags:
      - Account - applications
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/billing-report:
    get:
      description: "Fetch the billing report generated for the currently authenticated\
        \ commercial account. The billing reports for\ntenant accounts are also included\
        \ in their aggregator's billing report response. The response contains below\
        \ additional counters\nwhen the account's business model is set to `API calls`\
        \ by the account administrator.\n  - rest_api_requests_with_user_token\n \
        \ - rest_api_requests_with_api_key_token\n  - pelion_to_webapp_notifications\n\
        \  - device_to_pelion_messages\n  - pelion_to_device_messages\n\n**Example:**\n\
        ```\ncurl -X GET https://api.us-east-1.mbedcloud.com/v3/billing-report?month=2018-07\
        \ \\\n-H 'Authorization: Bearer <access_key>'\n```"
      operationId: getBillingReport
      parameters:
      - description: Queried year and month of billing report.
        in: query
        name: month
        pattern: ^\d{4}-\d{2}$
        required: true
        type: string
      responses:
        200:
          description: Billing report response object.
          examples:
            application/json:
              account:
                address_line1: null
                address_line2: null
                city: null
                company: example-company
                contact: null
                country: null
                email: null
                id: example-account
                phone_number: null
                postal_code: null
                state: null
              aggregated:
                active_devices: 600
                firmware_updates: 600
                generated: '2016-09-21T14:11:34.131Z'
                period_end: '2016-09-30T23:59:59.999Z'
                period_start: 2016-09-01T00:00.000Z
                sda_tokens: 700
              billing_data:
                active_devices: 100
                firmware_updates: 100
                generated: '2016-09-21T14:11:34.131Z'
                period_end: '2016-09-30T23:59:59.999Z'
                period_start: 2016-09-01T00:00.000Z
                sda_tokens: 200
              id: 6cae0aec221911e88f227f51b2f005c0
              month: 2016-09
              object: billing-report
              service_package:
                aggregated_quota_usage:
                - account_id: example-account
                  amount: 1000
                  campaign_name: null
                  time: 2016-09-01T00:00.000Z
                  type: package_creation
                - account_id: example-account
                  amount: -50
                  campaign_name: example-account-campaign-name
                  time: 2016-09-02T00:00.000Z
                  type: reservation
                - account_id: example-tenant-account-1
                  amount: -20
                  campaign_name: example-tenant-account-1-campaign-name
                  time: 2016-09-03T00:00.000Z
                  type: reservation
                - account_id: example-tenant-account-2
                  amount: -30
                  campaign_name: example-tenant-account-2-campaign-name
                  time: 2016-09-04T00:00.000Z
                  type: reservation
                metadata:
                  end_time: null
                  remaining_quota: 1000
                  reserved_quota: 100
                  start_time: 2016-09-01T00:00.000Z
                quota_usage:
                - amount: 1000
                  campaign_name: null
                  time: 2016-09-01T00:00.000Z
                  type: package_creation
                - amount: -50
                  campaign_name: example-account-campaign-name
                  time: 2016-09-02T00:00.000Z
                  type: reservation
              subtenants:
              - account:
                  address_line1: null
                  address_line2: null
                  city: null
                  company: example-tenant-company-1
                  contact: null
                  country: null
                  customer_subtenant_id: example-customer-tenant-id-1
                  email: null
                  id: example-tenant-account-1
                  phone_number: null
                  postal_code: null
                  state: null
                billing_data:
                  active_devices: 200
                  firmware_updates: 200
                  generated: '2016-09-21T14:11:34.131Z'
                  period_end: '2016-09-30T23:59:59.999Z'
                  period_start: 2016-09-01T00:00.000Z
                  sda_tokens: 300
                service_package:
                  quota_usage:
                  - amount: -20
                    campaign_name: example-tenant-account-1-campaign-name
                    time: 2016-09-03T00:00.000Z
                    type: reservation
              - account:
                  address_line1: null
                  address_line2: null
                  city: null
                  company: example-tenant-company-2
                  contact: null
                  country: null
                  customer_subtenant_id: example-customer-tenant-id-2
                  email: null
                  id: example-tenant-account-2
                  phone_number: null
                  postal_code: null
                  state: null
                billing_data:
                  active_devices: 300
                  firmware_updates: 300
                  generated: '2016-09-21T14:11:34.131Z'
                  period_end: '2016-09-30T23:59:59.999Z'
                  period_start: 2016-09-01T00:00.000Z
                  sda_tokens: 200
                service_package:
                  quota_usage:
                  - amount: -30
                    campaign_name: example-tenant-account-2-campaign-name
                    time: 2016-09-04T00:00.000Z
                    type: reservation
          schema:
            $ref: '#/definitions/ReportResponse'
        400:
          description: Bad request.
          examples:
            application/json:
              code: 400
              fields:
              - message: Parameter missing.
                name: month
              message: One of the request fields has failed validation.
              object: error
              request_id: example-request-id
              type: validation_error
          schema:
            $ref: '#/definitions/BadRequestErrorResponse'
        401:
          description: Unauthorized access.
          examples:
            application/json:
              code: 401
              message: Access is denied.
              object: error
              request_id: example-request-id
              type: unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedErrorResponse'
        403:
          description: Access forbidden if account is not commercial.
          examples:
            application/json:
              code: 403
              message: Account is not a commercial account.
              object: error
              request_id: example-request-id
              type: forbidden
          schema:
            $ref: '#/definitions/ForbiddenErrorResponse'
        404:
          description: Billing report not found if requested month is current or in
            the future. Also could not be available for previous months in special
            cases.
          examples:
            application/json:
              code: 404
              message: Billing report not yet available.
              object: error
              request_id: example-request-id
              type: report_not_found
          schema:
            $ref: '#/definitions/ReportNotFoundErrorResponse'
        500:
          description: Internal server error.
          examples:
            application/json:
              code: 500
              message: Unexpected internal server error.
              object: error
              request_id: example-request-id
              type: internal_error
          schema:
            $ref: '#/definitions/InternalServerErrorResponse'
      summary: Get billing report.
      tags:
      - Usage - billing reports
      x-origin: /home/circleci/project/billing/public/swagger-public-apis.yaml
  /v3/billing-report-active-devices:
    get:
      description: 'Fetch raw billing data for active devices for the currently authenticated
        commercial account.


        This is supplementary data for the billing report. The raw billing data of
        the active devices for tenant accounts are included in their aggregator''s
        raw billing data of the active devices.


        The endpoint returns the URL to download the gzipped CSV file. The first line
        is the header providing information on active devices, for example, the ID
        of an active device.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/billing-report-active-devices?month=2018-07
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getBillingReportActiveDevices
      parameters:
      - description: Queried year and month of billing report.
        in: query
        name: month
        pattern: ^\d{4}-\d{2}$
        required: true
        type: string
      responses:
        200:
          description: The response includes the URL to download raw billing data
            of the active devices.
          examples:
            application/json:
              filename: example.csv.gz
              object: billing-report-active-devices
              url: https://example.com/example.csv.gz
          schema:
            $ref: '#/definitions/BillingReportRawDataResponse'
        400:
          description: Bad request.
          examples:
            application/json:
              code: 400
              fields:
              - message: Parameter missing.
                name: month
              message: One of the request fields has failed validation.
              object: error
              request_id: example-request-id
              type: validation_error
          schema:
            $ref: '#/definitions/BadRequestErrorResponse'
        401:
          description: Unauthorized access.
          examples:
            application/json:
              code: 401
              message: Access is denied.
              object: error
              request_id: example-request-id
              type: unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedErrorResponse'
        403:
          description: Access forbidden if account is not commercial.
          examples:
            application/json:
              code: 403
              message: Account is not a commercial account.
              object: error
              request_id: example-request-id
              type: forbidden
          schema:
            $ref: '#/definitions/ForbiddenErrorResponse'
        404:
          description: Active devices billing data not found.
          examples:
            application/json:
              code: 404
              message: Active devices billing data not yet available.
              object: error
              request_id: example-request-id
              type: report_not_found
          schema:
            $ref: '#/definitions/ReportNotFoundErrorResponse'
        500:
          description: Internal server error.
          examples:
            application/json:
              code: 500
              message: Unexpected internal server error.
              object: error
              request_id: example-request-id
              type: internal_error
          schema:
            $ref: '#/definitions/InternalServerErrorResponse'
      summary: Get raw billing data of the active devices for the month.
      tags:
      - Usage - billing reports
      x-origin: /home/circleci/project/billing/public/swagger-public-apis.yaml
  /v3/billing-report-firmware-updates:
    get:
      description: 'Fetch raw billing data for firmware updates for the currently
        authenticated commercial account.


        This is supplementary data for the billing report. The raw billing data of
        the firmware updates for tenant accounts are also included in their aggregator''s
        raw billing data of the firmware updates.


        The endpoint returns the URL to download the gzipped CSV file. The first line
        is the header providing information on the firmware updates, for example,
        the ID of a firmware update.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/billing-report-firmware-updates?month=2018-07
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getBillingReportFirmwareUpdates
      parameters:
      - description: Queried year and month of billing report.
        in: query
        name: month
        pattern: ^\d{4}-\d{2}$
        required: true
        type: string
      responses:
        200:
          description: The response includes the URL to download raw billing data
            of the firmware updates.
          examples:
            application/json:
              filename: example.csv.gz
              object: billing-report-firmware-updates
              url: https://example.com/example.csv.gz
          schema:
            $ref: '#/definitions/BillingReportRawDataResponse'
        400:
          description: Bad request.
          examples:
            application/json:
              code: 400
              fields:
              - message: Parameter missing.
                name: month
              message: One of the request fields has failed validation.
              object: error
              request_id: example-request-id
              type: validation_error
          schema:
            $ref: '#/definitions/BadRequestErrorResponse'
        401:
          description: Unauthorized access.
          examples:
            application/json:
              code: 401
              message: Access is denied.
              object: error
              request_id: example-request-id
              type: unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedErrorResponse'
        403:
          description: Access forbidden if account is not commercial.
          examples:
            application/json:
              code: 403
              message: Account is not a commercial account.
              object: error
              request_id: example-request-id
              type: forbidden
          schema:
            $ref: '#/definitions/ForbiddenErrorResponse'
        404:
          description: Firmware updates billing data not found.
          examples:
            application/json:
              code: 404
              message: Firmware updates billing data not yet available.
              object: error
              request_id: example-request-id
              type: report_not_found
          schema:
            $ref: '#/definitions/ReportNotFoundErrorResponse'
        500:
          description: Internal server error.
          examples:
            application/json:
              code: 500
              message: Unexpected internal server error.
              object: error
              request_id: example-request-id
              type: internal_error
          schema:
            $ref: '#/definitions/InternalServerErrorResponse'
      summary: Get raw billing data of the firmware updates for the month.
      tags:
      - Usage - billing reports
      x-origin: /home/circleci/project/billing/public/swagger-public-apis.yaml
  /v3/billing-statistics:
    get:
      description: "Fetch the statistics view of Device Management usage in time series\
        \ for the currently authenticated commercial account.\nThe response contains\
        \ the additional counters below, if the account business model is set to `API\
        \ calls` by the account administrator:\n  - device_to_pelion_messages\n  -\
        \ pelion_to_device_messages\n  - pelion_to_webapp_notifications\n  - rest_api_requests_with_api_key_token\n\
        \  - rest_api_requests_with_user_token\n\nThe return data is retrieved during\
        \ a defined time window and grouped by defined interval.\nThe time window\
        \ for data retrieval is defined as a range, that can be either absolute (for\
        \ instance, using timestamps) or relative (referring to the 'period' parameter).\n\
        Range start is inclusive, while range end is exclusive. The specified range\
        \ must be equal to or greater than the specified interval.\n\nReturned data\
        \ does not include any tenant usage.\n\n**Example:**\n```\ncurl -X GET https://api.us-east-1.mbedcloud.com/v3/billing-statistics?start=2019-11-01T00:00:00.000Z&end=2019-12-01T00:00:00.000Z&interval=1d\
        \ \\\n     -H 'Authorization: Bearer <access_key>'\n```"
      operationId: getStatisticsView
      parameters:
      - description: 'Start time of the statistics view in RFC3339 date-time format,
          with millisecond accuracy and UTC time zone.

          The parameter is mandatory if the period is not specified. Do not set the
          parameter if you have specified the period.

          Fetch data with timestamp greater than or equal to this value. Sample value:
          2017-02-07T09:20:56.990Z.

          The specified range must be equal to or greater than 5 minutes. Maximum
          supported range is 98 days when using timestamps to specify the range.'
        format: date-time
        in: query
        name: start
        required: false
        type: string
      - description: 'End time of the statistics view in RFC3339 date-time format
          with millisecond accuracy and UTC time zone.

          The parameter is mandatory if the period is not specified. Do not set the
          parameter if you have specified the period.

          Fetch the data with timestamp less than this value. Sample value: 2017-02-07T09:20:56.990Z.

          The specified range must be equal to or greater than 5 minutes. Maximum
          supported range is 98 days when using timestamps to specify the range.'
        format: date-time
        in: query
        name: end
        required: false
        type: string
      - description: 'Period. Alternative for specifying the range if not using start
          and end parameters.

          The parameter is mandatory if the start and end parameters are not specified.
          Do not set the parameter if you have specified the start and end parameters.

          Fetch the data for the period in minutes, hours, days, weeks or months.

          One week is normalized to 7 days. Sample values: 5m, 2h, 3d, 4w, 1mo, 3mo.

          The allowed periods (inclusive) are 5m-141120m/1h-2352h/1d-98d/1w-14w/1mo-3mo.'
        in: query
        name: period
        required: false
        type: string
      - description: 'Group the data by this interval in minutes, hours, days, weeks
          or months.

          One week is normalized to 7 days. Sample values: 5m, 2h, 3d, 4w, 1mo, 3mo.

          Minimum supported interval is 5 minutes. The specified interval must not
          be greater than the specified range.'
        in: query
        name: interval
        required: true
        type: string
      - default: 50
        description: Maximum number of statistics view records in one paginated response.
        format: int32
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        required: false
        type: integer
      - description: Results after specified record ID.
        in: query
        name: after
        pattern: '[0-9a-fA-F]{32}'
        required: false
        type: string
      - description: 'Record order. Acceptable values (case insensitive): ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      responses:
        200:
          description: Statistics view of Device Management usage for the currently
            authenticated commercial account.
          examples:
            application/json:
              after: null
              data:
              - active_devices: 10
                firmware_updates: 4286
                id: 00000000000000000000016e7bcf1800
                object: billing-statistics
                sda_tokens: 962
                timestamp: '2019-11-18T00:00:00.000Z'
              - active_devices: 0
                firmware_updates: 6553
                id: 00000000000000000000016e80f57400
                object: billing-statistics
                sda_tokens: 1440
                timestamp: '2019-11-19T00:00:00.000Z'
              - active_devices: 0
                firmware_updates: 0
                id: 00000000000000000000016e861bd000
                object: billing-statistics
                sda_tokens: 0
                timestamp: '2019-11-20T00:00:00.000Z'
              has_more: false
              limit: 50
              object: list
              order: asc
              total_count: 3
          schema:
            $ref: '#/definitions/StatisticsViewResponse'
        400:
          description: Bad request.
          examples:
            application/json:
              code: 400
              fields:
              - message: Parameter missing.
                name: interval
              message: One of the request fields has failed validation.
              object: error
              request_id: example-request-id
              type: validation_error
          schema:
            $ref: '#/definitions/BadRequestErrorResponse'
        401:
          description: Unauthorized access.
          examples:
            application/json:
              code: 401
              message: Access is denied.
              object: error
              request_id: example-request-id
              type: unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedErrorResponse'
        403:
          description: Forbidden.
          examples:
            application/json:
              code: 403
              message: Account is not a commercial account.
              object: error
              request_id: example-request-id
              type: forbidden
          schema:
            $ref: '#/definitions/ForbiddenErrorResponse'
        500:
          description: Internal server error.
          examples:
            application/json:
              code: 500
              message: Unexpected internal server error.
              object: error
              request_id: example-request-id
              type: internal_error
          schema:
            $ref: '#/definitions/InternalServerErrorResponse'
      summary: Get statistics view of Device Management usage.
      tags:
      - Usage - statistics
      x-origin: /home/circleci/project/billing/public/swagger-public-apis.yaml
  /v3/branding-colors:
    delete:
      description: 'Delete account branding colors for all themes.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/branding-colors -H
        ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllColors
      parameters: []
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account branding colors not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete all colors.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-colors/dark:
    delete:
      description: 'Delete account dark theme branding colors.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/branding-colors/dark
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllDarkColors
      parameters: []
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account branding colors not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete colors in the dark theme.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the dark theme branding colors.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/branding-colors/dark \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getDarkColors
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingColorList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get dark theme branding colors.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: "Update an array of dark theme branding colors.\n<b>Note:</b> This\
        \ endpoint is restricted to administrators.\n\n**Example:**\n```\ncurl -X\
        \ PUT https://api.us-east-1.mbedcloud.com/v3/branding-colors/dark \\\n-H 'Authorization:\
        \ Bearer <access_key>' \\\n-H 'content-type: application/json' \\\n'[{ \"\
        reference\": \"primary\",\n   \"color\": \"#f3f93e\" }]'\n```"
      operationId: bulkSetDarkColors
      parameters:
      - description: List of branding colors.
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/BrandingColorUpdate'
          type: array
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been set successfully.
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates an array of dark theme branding colors.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-colors/dark/{reference}:
    delete:
      description: 'Resets the branding color to its dark theme default.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/branding-colors/light/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: resetDarkColor
      parameters:
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Reset branding color to default.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the requested dark theme branding color.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/branding-colors/dark/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getDarkColor
      parameters:
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingColor'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get dark theme branding color.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update a dark theme branding color.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/branding-colors/dark/primary
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "color": "#f3f93e" }''

        ```'
      operationId: setDarkColor
      parameters:
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      - description: The branding color.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/BrandingColor'
      produces:
      - application/json
      responses:
        '200':
          description: Color has been set successfully.
          schema:
            $ref: '#/definitions/BrandingColor'
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates a dark theme branding color.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-colors/light:
    delete:
      description: 'Delete account light theme branding colors.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/branding-colors/light
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllLightColors
      parameters: []
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account branding colors not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete colors in the light theme.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the light theme branding colors.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/branding-colors/light \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getLightColors
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingColorList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get light theme branding colors.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: "Update an array of light theme branding colors.\n<b>Note:</b>\
        \ This endpoint is restricted to administrators.\n\n**Example:**\n```\ncurl\
        \ -X PUT https://api.us-east-1.mbedcloud.com/v3/branding-colors/light \\\n\
        -H 'Authorization: Bearer <access_key>' \\\n-H 'content-type: application/json'\
        \ \\\n'[{ \"reference\": \"primary\",\n   \"color\": \"purple\" }]'\n```"
      operationId: bulkSetLightColors
      parameters:
      - description: List of branding colors.
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/BrandingColorUpdate'
          type: array
      produces:
      - application/json
      responses:
        '204':
          description: Colors have been set successfully.
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates an array of light theme branding colors.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-colors/light/{reference}:
    delete:
      description: 'Resets the branding color to its light theme default.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/branding-colors/light/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: resetLightColor
      parameters:
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Reset branding color to default.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the requested light theme branding color.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/branding-colors/light/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getLightColor
      parameters:
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingColor'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get light theme branding color.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update light theme branding color.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/branding-colors/light/primary
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "color": "purple" }''

        ```'
      operationId: setLightColor
      parameters:
      - description: The name of the branding color.
        enum: *id001
        in: path
        name: reference
        required: true
        type: string
      - description: The branding color.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/BrandingColor'
      produces:
      - application/json
      responses:
        '200':
          description: Color has been set successfully.
          schema:
            $ref: '#/definitions/BrandingColor'
        '400':
          description: Error in input data format.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Color not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates light theme branding color.
      tags:
      - User interface configuration - colors
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images:
    delete:
      description: 'Delete account branding images for all themes.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/branding-images -H
        ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllImages
      parameters: []
      produces:
      - application/json
      responses:
        '204':
          description: Images have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account branding images not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete all images.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/dark:
    delete:
      description: 'Delete account dark theme branding images.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/branding-images/dark
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllDarkImages
      parameters: []
      produces:
      - application/json
      responses:
        '204':
          description: Images have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account branding images not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete images in the dark theme.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve metadata for all dark theme branding images.


        **Example:**

        `curl -X GET https://api.us-east-1.mbedcloud.com/v3/branding-images/dark \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllDarkImageData
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingImageList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata of all dark theme images.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/dark/{reference}:
    get:
      description: 'Retrieve metadata for one account dark theme branding image.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/branding-images/dark/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getDarkImageData
      parameters:
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingImage'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata of a dark theme image.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/dark/{reference}/clear:
    post:
      description: 'Revert an account branding image to dark theme default.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/branding-images/dark/{reference}/clear
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: clearDarkImage
      parameters:
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Image reverted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Revert an image to dark theme default.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/dark/{reference}/upload:
    post:
      consumes:
      - image/png
      - image/jpeg
      description: 'Upload a new account branding image in the dark theme in PNG or
        JPEG format.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/branding-images/dark/{reference}/upload
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: image/png''  --data-binary ''@myimage.png''

        ```'
      operationId: uploadDarkImage
      parameters:
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      - description: The image in PNG or JPEG format.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Image'
      produces:
      - application/json
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Content-Location:
              description: Location of the image metadata.
              type: string
            Location:
              description: Location of the image binary.
              type: string
          schema:
            $ref: '#/definitions/BrandingImage'
        '400':
          description: Error in input data format, for example, image is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a dark theme image.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/dark/{reference}/upload-multipart:
    post:
      consumes:
      - multipart/form-data
      description: 'Upload a new account branding image as form data in the dark theme
        in PNG or JPEG format.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: uploadDarkImageMultipart
      parameters:
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      - description: The image in PNG or JPEG format as multipart form data.
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Content-Location:
              description: Location of the image metadata.
              type: string
            Location:
              description: Location of the image binary.
              type: string
          schema:
            $ref: '#/definitions/BrandingImage'
        '400':
          description: Error in input data format, for example, image is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a dark theme image.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/light:
    delete:
      description: 'Delete account light theme branding images.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example usage:**

        `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/branding-images/light
        -H ''Authorization: Bearer <access_key>''`'
      operationId: deleteAllLightImages
      parameters: []
      produces:
      - application/json
      responses:
        '204':
          description: Images have been deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Account branding images not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete images in the light theme.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the metadata of all light theme branding images.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/branding-images/light \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllLightImageData
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingImageList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata of all light theme images.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/light/{reference}:
    get:
      description: 'Retrieve metadata for one account light theme branding image.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/branding-images/light/{reference}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getLightImageData
      parameters:
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/BrandingImage'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata of a light theme image.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/light/{reference}/clear:
    post:
      description: 'Revert an account branding image to light theme default.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/branding-images/light/{reference}/clear
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: clearLightImage
      parameters:
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Image reverted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Revert an image to light theme default.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/light/{reference}/upload:
    post:
      consumes:
      - image/png
      - image/jpeg
      description: 'Upload a new account light theme branding image in PNG or JPEG
        format.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/branding-images/light/{reference}/upload
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: image/png'' --data-binary ''@myimage.png''

        ```'
      operationId: uploadLightImage
      parameters:
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      - description: The image in PNG or JPEG format.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Image'
      produces:
      - application/json
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Content-Location:
              description: Location of the image metadata.
              type: string
            Location:
              description: Location of the image binary.
              type: string
          schema:
            $ref: '#/definitions/BrandingImage'
        '400':
          description: Error in input data format, for example, image is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a light theme image.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/branding-images/light/{reference}/upload-multipart:
    post:
      consumes:
      - multipart/form-data
      description: 'Upload a new account branding image as form data in the light
        theme in PNG or JPEG format.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: uploadLightImageMultipart
      parameters:
      - description: Name of the branding images (icon or picture).
        enum: *id026
        in: path
        name: reference
        required: true
        type: string
      - description: The image in PNG or JPEG format as multipart form data.
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Content-Location:
              description: Location of the image metadata.
              type: string
            Location:
              description: Location of the image binary.
              type: string
          schema:
            $ref: '#/definitions/BrandingImage'
        '400':
          description: Error in input data format, for example, image is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unknown image reference.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a light theme image.
      tags:
      - User interface configuration - images
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/certificate-enrollments:
    get:
      description: 'Get certificate enrollments list, optionally filtered.


        **Examples:**


        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/certificate-enrollments
        \

        -H ''Authorization: Bearer <access_key>''

        ```


        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/certificate-enrollments?device_id__eq=01612df56f3b0a580a010fc700000000
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getCertificateEnrollments
      parameters:
      - description: An optional filter for the device ID.
        in: query
        name: device_id__eq
        pattern: '[0-9a-fA-F]{32}'
        required: false
        type: string
      - description: An optional filter for a certificate.
        in: query
        name: certificate_name__eq
        required: false
        type: string
      - description: The number of results to return (2-1000).
        in: query
        name: limit
        required: false
        type: integer
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        pattern: '[0-9a-fA-F]{32}'
        required: false
        type: string
      - description: The order of results.
        enum:
        - ASC
        - DESC
        in: query
        name: order
        required: false
        type: string
      - description: a comma-separated list of data fields to return.
        enum:
        - total_count
        in: query
        name: include
        required: false
        type: string
      - description: An optional filter for the non-equal certificate enrollment status.
        enum:
        - new
        - completed
        in: query
        name: enroll_status__neq
        required: false
        type: string
      - description: An optional filter for the certificate enrollment status.
        enum:
        - new
        - completed
        in: query
        name: enroll_status__eq
        required: false
        type: string
      - description: An optional filter for the non-equal certificate enrollment result.
        enum:
        - success
        - failure
        in: query
        name: enroll_result__neq
        required: false
        type: string
      - description: An optional filter for the certificate enrollment result.
        enum:
        - success
        - failure
        in: query
        name: enroll_result__eq
        required: false
        type: string
      - description: An optional filter for the date-time, less than or equal, of
          the certificate enrollment requests creation. Must be in RFC3339 format
          (for example, 2018-01-30T10:03:50.106Z).
        format: date-time
        in: query
        name: created_at__lte
        required: false
        type: string
      - description: An optional filter for the date-time, greater than or equal,
          of the certificate enrollment requests creation. Must be in RFC3339 format
          (for example, 2018-01-30T10:03:50.106Z).
        format: date-time
        in: query
        name: created_at__gte
        required: false
        type: string
      - description: An optional filter for the date-time, less than or equal, of
          the certificate enrollment requests update. Must be in RFC3339 format (for
          example, 2018-01-30T10:03:50.106Z).
        format: date-time
        in: query
        name: updated_at__lte
        required: false
        type: string
      - description: An optional filter for the date-time, greater than or equal,
          of the certificate enrollment requests update. Must be in RFC3339 format
          (for example, 2018-01-30T10:03:50.106Z).
        format: date-time
        in: query
        name: updated_at__gte
        required: false
        type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateEnrollmentListResponse'
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Get certificate enrollments list.
      tags:
      - Device security - device certificate renewals
      x-filter:
        certificate_name:
        - eq
        created_at:
        - lte
        - gte
        device_id:
        - eq
        enroll_result:
        - neq
        - eq
        enroll_status:
        - neq
        - eq
        updated_at:
        - lte
        - gte
      x-origin: /home/circleci/project/certificate-enrollment/public/swagger.yaml
  /v3/certificate-enrollments/{certificate-enrollment-id}:
    get:
      description: 'Get a certificate enrollment by ID.


        **Example:**


        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/certificate-enrollments/01612df56f3b0a580a010fc700000000
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getCertificateEnrollment
      parameters:
      - description: Certificate enrollment ID.
        in: path
        name: certificate-enrollment-id
        pattern: '[0-9a-fA-F]{32}'
        required: true
        type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateEnrollment'
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Get a certificate enrollment by ID.
      tags:
      - Device security - device certificate renewals
      x-origin: /home/circleci/project/certificate-enrollment/public/swagger.yaml
  /v3/certificate-issuer-configurations:
    get:
      description: 'Get certificate issuer configurations, optionally filtered by
        reference.

        <br>

        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/certificate-issuer-configurations
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json;charset=UTF-8'' \

        ```

        <br>

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/certificate-issuer-configurations?reference__eq=dlms
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json;charset=UTF-8'' \

        ```

        **Note:** This endpoint does not implement pagination, and therefore ignores
        list control parameters such as `limit` or `after`.'
      operationId: getCertificateIssuerConfigs
      parameters:
      - description: The number of results to return (2-1000). Values outside of this
          range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      - description: The certificate name to which the certificate issuer configuration
          applies.
        in: query
        name: reference__eq
        required: false
        type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerConfigListResponse'
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Get certificate issuer configurations.
      tags:
      - Security and identity - certificate issuer configurations
      x-filter:
        reference:
        - eq
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
    post:
      description: "Configure the certificate issuer to use when creating device custom\
        \ certificates.\n<br>\n**Example:**\n\n```\ncurl -X POST https://api.us-east-1.mbedcloud.com/v3/certificate-issuer-configurations\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n-H 'content-type: application/json;charset=UTF-8'\
        \ \\\n-d '{\n  \"reference\": \"customer.dlms\",\n  \"certificate_issuer_id\"\
        : \"01621a36719d507b9d48a91b00000000\"\n}'\n```"
      operationId: createCertificateIssuerConfig
      parameters:
      - description: Certificate issuer configuration request.
        in: body
        name: CreateCertificateIssuerConfig
        required: true
        schema:
          $ref: '#/definitions/CreateCertificateIssuerConfig'
      responses:
        '201':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerConfigResponse'
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '409':
          description: A certificate issuer configuration with this reference already
            exists.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Create certificate issuer configuration.
      tags:
      - Security and identity - certificate issuer configurations
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
  /v3/certificate-issuer-configurations/lwm2m:
    get:
      description: 'Provides the configured certificate issuer used when creating
        device

        certificates for LwM2M.'
      operationId: getCertificateIssuerConfig
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerConfigResponse'
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Get certificate issuer configuration.
      tags:
      - Security and identity - certificate issuer configurations
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
    put:
      description: "Configure the certificate issuer used when creating device certificates\n\
        for LwM2M.\n<br>\n**Example:**\n\n```\ncurl -X PUT https://api.us-east-1.mbedcloud.com/v3/certificate-issuer-configurations/lwm2m\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n-H 'content-type: application/json;charset=UTF-8'\
        \ \\\n-d '{\n  \"certificate_issuer_id\": \"01621a36719d507b9d48a91b00000000\"\
        \n}'\n```"
      operationId: updateCertificateIssuerConfig
      parameters:
      - description: Certificate Issuer Configuration Request
        in: body
        name: CertificateIssuerConfigRequest
        required: true
        schema:
          $ref: '#/definitions/CertificateIssuerConfigRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerConfigResponse'
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Update certificate issuer configuration.
      tags:
      - Security and identity - certificate issuer configurations
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
  /v3/certificate-issuer-configurations/{certificate-issuer-configuration-id}:
    delete:
      description: 'Delete certificate issuer configuration.

        You can only delete custom certificate configurations.'
      operationId: deleteCertificateIssuerConfigByID
      parameters:
      - &id027
        description: Certificate issuer ID configuration.
        in: path
        name: certificate-issuer-configuration-id
        required: true
        type: string
      responses:
        '204':
          description: No content.
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Delete certificate issuer configuration.
      tags:
      - Security and identity - certificate issuer configurations
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
    get:
      description: Provides the configured certificate issuer.
      operationId: getCertificateIssuerConfigByID
      parameters:
      - *id027
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerConfigResponse'
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Get certificate issuer configuration.
      tags:
      - Security and identity - certificate issuer configurations
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
    put:
      description: Update certificate issuer configuration.
      operationId: updateCertificateIssuerConfigByID
      parameters:
      - description: Certificate issuer configuration request.
        in: body
        name: CertificateIssuerConfigRequest
        required: true
        schema:
          $ref: '#/definitions/CertificateIssuerConfigRequest'
      - *id027
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerConfigResponse'
        '400':
          description: Validation error.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Update certificate issuer configuration.
      tags:
      - Security and identity - certificate issuer configurations
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
  /v3/certificate-issuers:
    get:
      description: '**Note:** This endpoint does not use pagination, and therefore
        ignores list control parameters such as `limit` or `after`.'
      operationId: getCertificateIssuers
      parameters:
      - description: The number of results to return (2-1000). Values outside of this
          range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerInfoListResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Get certificate issuers list.
      tags:
      - Security and identity - certificate issuers
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
    post:
      description: "Create a certificate issuer.\n<br>\nThe maximum number of issuers\
        \ is limited to 20 per account.\n<br>\nYou can create multiple certificate\
        \ issuers of the same type, provided they have different names. This allows\
        \ verification of the certificate issuer configuration before activation.\n\
        <br>\n**Example:**\n```\ncurl -X POST https://api.us-east-1.mbedcloud.com/v3/certificate-issuers\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n-H 'content-type: application/json;charset=UTF-8'\
        \ \\\n-d '{\n  \"issuer_type\": \"GLOBAL_SIGN\",\n  \"name\": \"GS Issuer\"\
        ,\n  \"description\": \"Sample GlobalSign certificate issuer\",\n  \"issuer_attributes\"\
        : null,\n  \"issuer_credentials\": {\n      \"api_key\": \"e510e289e6cd8947\"\
        ,\n      \"api_secret\": \"a477a8393d17a55ecb2ba6a61f58feb84770b621\",\n \
        \     \"client_certificate\": \"-----BEGIN CERTIFICATE-----MIIC7zCCAdegAwIBAgIJANTlU4x5S74VMA0GCSqGSIb3DQEBCwUAMA4xDDAKBgNVBAoMA0FybTAeFw0xODAzMTExMzE5MTFaFw0xOTAzMTExMzE5MTFaMA4xDDAKBgNVBAoMA0FybTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJWLStsVMJULZtxdieK9qocM4ymDXMaAusmd9TZLzBgznKQe/CW2yxyA8C8K5e6MmvMYGeKDd4Lkw/ezOj2OsUj2xzNIltUxpGi/GhsNYiN/khNJa/Y1SllLoihJAPm/xbMywOBRu/dM88PiJsNZccOk0I8DYvvyAs9wCTkbKLnfHygl98DCRqXw7nBCplU6F03qpUd/4BUtMtugyqt7yboGH+4YewnUh4Yh4QNOJIvE93Ob++eKjO3pIOYEhQmUxzOLaLNuWXlv2l1WuN281hUP4XBcV8mCzRQfTBBDYTWt+5BEWoLOUkXjW0Um6EAaN3usph1IKDEH6Ia5VHP4Pj0CAwEAAaNQME4wHQYDVR0OBBYEFLsfYZxFcQTjPJKYMjHI2In316fmMB8GA1UdIwQYMBaAFLsfYZxFcQTjPJKYMjHI2In316fmMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAFl08GFsIkkUs6M7QgCWmsnwP6PtD8V87wM1GAqQQlOOeztaeRR2TEOeYiKRZQugYszJ/FVfVp4ggqzepJMn6UZ42j5nmSJs+6t79i23QAzX1zNQ354lr/t7kt3fMdhuL3AP0oZGzdy+EnXXiWeAD22UwzvVmLt38ypJIl+pmTsx9jJy4PN7yoRgtP9k+50m3X6oDxVruehC/JPSeTvEhqyLW3fLcG6IoJMX3vIwfO9uXbFJumTowQeViNJJ9duWvD2KBXn/muOOBe97TPuvAms1gOtMmmPT9/jpo9b4+NsfFiAN6bMici81aIKZzLC+lLGOUmR2fFJyM5OsVLxKsko=-----END\
        \ CERTIFICATE-----\",\n        \"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\\
        nProc-Type: 4,ENCRYPTED\\nDEK-Info: DES-EDE3-CBC,CCAC26A4133947CB\\n\\np3KJ4FI3wcz3I0MtiLkrznkjWFvprVmoNywySUGb5IqZViJZqCMEsyU9a9iDsSfP\\\
        nZ07cg9GviV21WYIPSxZOQrpy1g1VWILzFnH+J6z8dSH4mxXh0PwdOzYgAeqkrIVM\\nJ7KRm6t222dZFjjXK3eEcLmBLGo29XwVJxKHx+l4++gU1LZmeHZR5M8fJ4jejUly\\\
        n7sqzPlmRF0N3I4lwKVj+PfQTVz43QoCnpxOjuSEL4liBrc2agY2xH1O0PFyHimz9\\n3XM9HR/iuPHW0N2D+NPjXlWKacerupH9d4i9IYIagzB+HTgej8limdo03GmmxcZ6\\\
        nYNa58n5yQSaqu0TPRU9DsrKeGjadHTlZQGdzfq1SWsROCnHLrXFKE2ozIG3+hxA5\\nujBF/QWpX5+inXUwDJhBxp8isHbPEnBEUUd6ZRzCTjvN0jaUti5B9yFhO2G6mbE8\\\
        nCvhyzQK8oJqsjZXnlcpPf95LP+9XbcCDjLSIaWJstzXO9tPiv6+x1MVWmivtRHcC\\nSTzpx8jAGCiG6ejLqWB87ZXiZm7ujlCBheHSf5RHwNHhUvoP2JEYalDDRxjcDMSx\\\
        n4uV42Np4yJlIQEDlGHcBlXoL7vEukFpuWgkYdpcZy/Ou9qz8mXrpLcu8C8MhLmSC\\nixGoR5iRhV7cxoHLyuCzj87eYEA73Xu238DQorSEEuiVFnLzQ2+PJMs4qoI14q/L\\\
        notlBDz+Ko6DrU/EZROYmiqMkLKXR2sx9zNAJwPYRs6nSH08tZ3dwqzZbgtP3Wazi\\nhLWHt5/En7wQRA5a+/dDEHXSoLvvSQ9jvhclhWf+eCYuq2eH+g54oyJGRSY+8GV7\\\
        nujhLxkzl/3OZdhZPWoz4U13KpbSTcNWu5Y7oGDoabw19UbvqmLf1PJkpDH/tQgzB\\nxYtsLBRUcofpYoeIiIxfAA4do5WilJc8xqrGhkE4WcHfY24HXAiOvsjbxV+BRprX\\\
        n1jtgJpV/9nJESMap+8PxipGUFRGjB83/uwJaa6mLftEKflX8i4MZ+HnqraXERsqA\\nWRUcDHIWmFfpzIB3iNuxawVvPH8NdCSPmQ9qTb8Cozl0AuOK2E9S+ke8oiYQScWR\\\
        nLdu+zhej7GjuQ9R+Ub+wPWqvOA5qLXejqnCexVScDUuN+z9JWM3N2FG1MwxhAzhP\\ndEfoQHoBn6uyOmrVGP6fosV3chqhPoec42KeOAm1xDvx692isaIy1jPgIyPxeqhm\\\
        n2Tw4E+02R7dlP8Ljf7JzfLm4oKpWHWlcHeqg24x6lY/wXU1RBcWaTa0AQUwoGm2m\\nIQCPfIqOEv/QC2HpO7SVCYkl65KwR0oTd1AzYxdxEq3xHQbh69EL0FGZPVxVCPI+\\\
        nhEAyifKy1/tm3l91Rf/kGpHY7nIQKCXH49tmFwix8gke2nZJmRgX7/zAdMOAKeKH\\nAaIl4nQtv14EbaasMgnn9qgaDYnWzaReEob2QlQ/WYlTor61+KFpGtcf9jAkgudT\\\
        n2op+4CF7wT2+aTXdtkVWfmv++iB8GnlqZdxLvyG1cTYjjYHVFbMSWQnxzQqiE2ms\\nQgp+byjWCumpsWTMdTO+d9NkDOo80vDpaRxEgebmhJ0MbX+eFjBgVg==\\\
        n-----END RSA PRIVATE KEY-----\",\n      \"passphrase\": \"helloworld\"\n\
        \  }\n}'\n```"
      operationId: createCertificateIssuer
      parameters:
      - description: Certificate issuer request.
        in: body
        name: CertificateIssuerRequest
        required: true
        schema:
          $ref: '#/definitions/CertificateIssuerRequest'
      responses:
        '201':
          description: Created.
          schema:
            $ref: '#/definitions/CertificateIssuerInfo'
        '400':
          description: 'Validation error: The data used to create the certificate
            issuer failed validation.'
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: You are not authorized to view the resource.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '409':
          description: Conflict. A certificate issuer with this name already exists.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '424':
          description: The request failed due to customer configured external service.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Create certificate issuer.
      tags:
      - Security and identity - certificate issuers
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
  /v3/certificate-issuers/{certificate-issuer-id}:
    delete:
      description: 'Delete a certificate issuer by ID.

        <br>

        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/certificate-issuers/0162155dc77d507b9d48a91b00000000
        \

        -H ''Authorization: Bearer <access_key>'' \

        ```'
      operationId: deleteCertificateIssuer
      parameters:
      - description: 'Certificate issuer ID.

          An active certificate issuer cannot be deleted.'
        in: path
        name: certificate-issuer-id
        required: true
        type: string
      responses:
        '204':
          description: Certificate issuer deleted.
        '400':
          description: 'Validation error: An active certificate issuer cannot be deleted.'
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Delete certificate issuer.
      tags:
      - Security and identity - certificate issuers
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
    get:
      operationId: getCertificateIssuer
      parameters:
      - description: Certificate issuer ID.
        in: path
        name: certificate-issuer-id
        required: true
        type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerInfo'
        '400':
          description: 'Validation error: The data used to get the certificate issuer
            failed validation.'
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Get certificate issuer by ID.
      tags:
      - Security and identity - certificate issuers
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
    put:
      description: "Update a certificate issuer.\n<br>\n**Example:**\n\n```\ncurl\
        \ -X PUT https://api.us-east-1.mbedcloud.com/v3/certificate-issuers/01621560be51507b9d48a91b00000000\
        \ \\\n-H 'Authorization: Bearer <access_key>' \\\n-H 'content-type: application/json;charset=UTF-8'\
        \ \\\n-d '{\n  \"description\": \"Sample GlobalSign certificate issuer - updated.\"\
        ,\n  \"name\": \"GlobalSign Issuer\"\n}'\n```"
      operationId: updateCertificateIssuer
      parameters:
      - description: Certificate issuer ID.
        in: path
        name: certificate-issuer-id
        required: true
        type: string
      - description: Certificate issuer update request.
        in: body
        name: CertificateIssuerUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/CertificateIssuerUpdateRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerInfo'
        '400':
          description: 'Validation error: The data used to update the certificate
            issuer failed validation.'
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '409':
          description: Conflict. A certificate issuer with this name already exists.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '424':
          description: The request failed due to customer-configured external service.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Update certificate issuer.
      tags:
      - Security and identity - certificate issuers
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
  /v3/certificate-issuers/{certificate-issuer-id}/verify:
    post:
      description: 'Validates the certificate issuer by sending a signing request
        for a test certificate. This should be done before the configuration is made
        active.

        <br>

        **Note:**

        The API requests the 3rd party CA to sign a test certificate.

        For some 3rd party CAs, this operation may use the account quota.

        <br>

        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/certificate-issuers/01621a36719d507b9d48a91b00000000/verify
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json;charset=UTF-8'' \

        ```'
      operationId: verifyCertificateIssuer
      parameters:
      - description: Certificate issuer ID.
        in: path
        name: certificate-issuer-id
        required: true
        type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CertificateIssuerVerifyResponse'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '424':
          description: The request failed due to customer configured external service.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Verify certificate issuer.
      tags:
      - Security and identity - certificate issuers
      x-origin: /home/circleci/project/cloud-vault/public/swagger.yaml
  /v3/developer-certificates:
    post:
      description: 'Create a developer certificate (a certificate that can be flashed
        to multiple devices to connect to the bootstrap server).


        **Note:** The number of developer certificates allowed per account is limited.
        Please see [Setting up a Certificate Authority](https://www.pelion.com/docs/device-management/current/provisioning-process/integrating-with-a-third-party-ca.html).


        **Example:**

        ```

        curl -X POST http://api.us-east-1.mbedcloud.com/v3/developer-certificates
        \

        -H "Authorization: Bearer <access_key>" \

        -H "content-type: application/json" \

        -d { "name": "<certificate_name>", "description": "<certificate_description>"
        }

        ```'
      operationId: createDeveloperCertificate
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeveloperCertificateRequestData'
      produces:
      - application/json
      responses:
        201:
          description: Developer certificate created successfully.
          examples:
            Success:
              account_id: 015fee5d9b3538c98640fbfb00000000
              created_at: '2017-12-11T14:22:20.009Z'
              description: This certificate will be used with multiple developer devices.
              developer_certificate: '-----BEGIN CERTIFICATE-----\nMIICcDCCAhWgAwIBAgIRAPSBbBtLUE/ekQcWE4GzPJEwCgYIKoZIzj0EAwIwgaIx\nCzAJBgNVBAYTAkdCMRcwFQYDVQQIDA5DYW1icmlkZ2VzaGlyZTESMBAGA1UEBwwJ\nQ2FtYnJpZGdlMRAwDgYDVQQKDAdBUk0gTHRkMSkwJwYDVQQLDCAwMTU4NDNlMzJl\nYzkwMjQyMGEwMTVlMDcwMDAwMDAwMDEpMCcGA1UEAwwgMDE2MWRiYmNkZDY2MGE1\nODBhMDEwYzM0MDNjMDAwMDAwHhcNMTgwMjI4MDkyNzIzWhcNMjgwMjI4MDkyNzIz\nWjCBojELMAkGA1UEBhMCR0IxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMRIwEAYD\nVQQHDAlDYW1icmlkZ2UxEDAOBgNVBAoMB0FSTSBMdGQxKTAnBgNVBAsMIDAxNTg0\nM2UzMmVjOTAyNDIwYTAxNWUwNzAwMDAwMDAwMSkwJwYDVQQDDCAwMTYxZGJiY2Rk\nNjYwYTU4MGEwMTBjMzQwM2MwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\nBEScLDbOXvOb903AYlI9ow8E4hbLSHJPt5E2BO4Q4bHOpuWH2Oh6P+CDPte9pAv3\nE6g90Xk/ZcZpQ+xBO6qci/ajKjAoMBIGCSsGAQQBoCCBSQQFAgNAAJEwEgYDVR0T\nAQH/BAgwBgEB/wIBADAKBggqhkjOPQQDAgNJADBGAiEAsi9zSK8Njl22GoEHrsg8\nQlwFnrkkP9d6FyLFtmqndt4CIQCmVHwisYNcCkqD2SWctG1xQHo0HZePAQW8PstM\nzhNupQ==\n-----END
                CERTIFICATE-----\n'
              developer_private_key: '-----BEGIN PRIVATE KEY-----\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgeKc97aC1Z4aniXVG\njNSvvXw2hl6zwACYIs88OKQx61GgCgYIKoZIzj0DAQehRANCAAREnCw2zl7zm/dN\nwGJSPaMPBOIWy0hyT7eRNgTuEOGxzqblh9joej/ggz7XvaQL9xOoPdF5P2XGaUPs\nQTuqnIv2\n-----END
                PRIVATE KEY-----\n'
              etag: '1'
              id: 015fee4431fd38c98640fbfb00000000
              name: DeveloperCertificate
              object: trusted-cert
              security_file_content: '/*\n * Copyright (c) 2017 ARM Limited. All rights
                reserved.\n * SPDX-License-Identifier: Apache-2.0\n * Licensed under
                the Apache License, Version 2.0 (the License); you may\n * not use
                this file except in compliance with the License.\n * You may obtain
                a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n
                *\n * Unless required by applicable law or agreed to in writing, software\n
                * distributed under the License is distributed on an AS IS BASIS,
                WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or
                implied.\n * See the License for the specific language governing permissions
                and\n * limitations under the License.\n */\n#ifndef __MBED_CLOUD_DEV_CREDENTIALS_H__\n#define
                __MBED_CLOUD_DEV_CREDENTIALS_H__\n\n#include <inttypes.h>\n\nconst
                char MBED_CLOUD_DEV_BOOTSTRAP_ENDPOINT_NAME[] = \"0161dbbcdd660a580a010c3403c00000\";\nconst
                char MBED_CLOUD_DEV_ACCOUNT_ID[] = \"015843e32ec902420a015e0700000000\";\nconst
                char MBED_CLOUD_DEV_BOOTSTRAP_SERVER_URI[] = \"coaps://coap-integration-lab.dev.mbed.com:5684?aid=015843e32ec902420a015e0700000000\";\n\nconst
                uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE[] = \n{ 0x30,
                0x82, 0x02, 0x70, 0x30, 0x82, 0x02, 0x15,\n 0xa0, 0x03, 0x02, 0x01,
                0x02, 0x02, 0x11, 0x00,\n 0xf4, 0x81, 0x6c, 0x1b, 0x4b, 0x50, 0x4f,
                0xde,\n 0x91, 0x07, 0x16, 0x13, 0x81, 0xb3, 0x3c, 0x91,\n 0x30, 0x0a,
                0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\n 0x3d, 0x04, 0x03, 0x02, 0x30,
                0x81, 0xa2, 0x31,\n 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,\n
                0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30, 0x15,\n 0x06, 0x03, 0x55,
                0x04, 0x08, 0x0c, 0x0e, 0x43,\n 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64,
                0x67, 0x65,\n 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12, 0x30,\n 0x10,
                0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x09,\n 0x43, 0x61, 0x6d, 0x62,
                0x72, 0x69, 0x64, 0x67,\n 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03,
                0x55,\n 0x04, 0x0a, 0x0c, 0x07, 0x41, 0x52, 0x4d, 0x20,\n 0x4c, 0x74,
                0x64, 0x31, 0x29, 0x30, 0x27, 0x06,\n 0x03, 0x55, 0x04, 0x0b, 0x0c,
                0x20, 0x30, 0x31,\n 0x35, 0x38, 0x34, 0x33, 0x65, 0x33, 0x32, 0x65,\n
                0x63, 0x39, 0x30, 0x32, 0x34, 0x32, 0x30, 0x61,\n 0x30, 0x31, 0x35,
                0x65, 0x30, 0x37, 0x30, 0x30,\n 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
                0x31, 0x29,\n 0x30, 0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,\n 0x20,
                0x30, 0x31, 0x36, 0x31, 0x64, 0x62, 0x62,\n 0x63, 0x64, 0x64, 0x36,
                0x36, 0x30, 0x61, 0x35,\n 0x38, 0x30, 0x61, 0x30, 0x31, 0x30, 0x63,
                0x33,\n 0x34, 0x30, 0x33, 0x63, 0x30, 0x30, 0x30, 0x30,\n 0x30, 0x30,
                0x1e, 0x17, 0x0d, 0x31, 0x38, 0x30,\n 0x32, 0x32, 0x38, 0x30, 0x39,
                0x32, 0x37, 0x32,\n 0x33, 0x5a, 0x17, 0x0d, 0x32, 0x38, 0x30, 0x32,\n
                0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32, 0x33,\n 0x5a, 0x30, 0x81,
                0xa2, 0x31, 0x0b, 0x30, 0x09,\n 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
                0x02, 0x47,\n 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55,\n 0x04,
                0x08, 0x0c, 0x0e, 0x43, 0x61, 0x6d, 0x62,\n 0x72, 0x69, 0x64, 0x67,
                0x65, 0x73, 0x68, 0x69,\n 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,
                0x03,\n 0x55, 0x04, 0x07, 0x0c, 0x09, 0x43, 0x61, 0x6d,\n 0x62, 0x72,
                0x69, 0x64, 0x67, 0x65, 0x31, 0x10,\n 0x30, 0x0e, 0x06, 0x03, 0x55,
                0x04, 0x0a, 0x0c,\n 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64,\n
                0x31, 0x29, 0x30, 0x27, 0x06, 0x03, 0x55, 0x04,\n 0x0b, 0x0c, 0x20,
                0x30, 0x31, 0x35, 0x38, 0x34,\n 0x33, 0x65, 0x33, 0x32, 0x65, 0x63,
                0x39, 0x30,\n 0x32, 0x34, 0x32, 0x30, 0x61, 0x30, 0x31, 0x35,\n 0x65,
                0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x30,\n 0x30, 0x30, 0x30, 0x31,
                0x29, 0x30, 0x27, 0x06,\n 0x03, 0x55, 0x04, 0x03, 0x0c, 0x20, 0x30,
                0x31,\n 0x36, 0x31, 0x64, 0x62, 0x62, 0x63, 0x64, 0x64,\n 0x36, 0x36,
                0x30, 0x61, 0x35, 0x38, 0x30, 0x61,\n 0x30, 0x31, 0x30, 0x63, 0x33,
                0x34, 0x30, 0x33,\n 0x63, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x59,\n
                0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce,\n 0x3d, 0x02, 0x01,
                0x06, 0x08, 0x2a, 0x86, 0x48,\n 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
                0x42, 0x00,\n 0x04, 0x44, 0x9c, 0x2c, 0x36, 0xce, 0x5e, 0xf3,\n 0x9b,
                0xf7, 0x4d, 0xc0, 0x62, 0x52, 0x3d, 0xa3,\n 0x0f, 0x04, 0xe2, 0x16,
                0xcb, 0x48, 0x72, 0x4f,\n 0xb7, 0x91, 0x36, 0x04, 0xee, 0x10, 0xe1,
                0xb1,\n 0xce, 0xa6, 0xe5, 0x87, 0xd8, 0xe8, 0x7a, 0x3f,\n 0xe0, 0x83,
                0x3e, 0xd7, 0xbd, 0xa4, 0x0b, 0xf7,\n 0x13, 0xa8, 0x3d, 0xd1, 0x79,
                0x3f, 0x65, 0xc6,\n 0x69, 0x43, 0xec, 0x41, 0x3b, 0xaa, 0x9c, 0x8b,\n
                0xf6, 0xa3, 0x2a, 0x30, 0x28, 0x30, 0x12, 0x06,\n 0x09, 0x2b, 0x06,
                0x01, 0x04, 0x01, 0xa0, 0x20,\n 0x81, 0x49, 0x04, 0x05, 0x02, 0x03,
                0x40, 0x00,\n 0x91, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13,\n 0x01,
                0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01,\n 0x01, 0xff, 0x02, 0x01,
                0x00, 0x30, 0x0a, 0x06,\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04,
                0x03,\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\n 0x00, 0xb2,
                0x2f, 0x73, 0x48, 0xaf, 0x0d, 0x8e,\n 0x5d, 0xb6, 0x1a, 0x81, 0x07,
                0xae, 0xc8, 0x3c,\n 0x42, 0x5c, 0x05, 0x9e, 0xb9, 0x24, 0x3f, 0xd7,\n
                0x7a, 0x17, 0x22, 0xc5, 0xb6, 0x6a, 0xa7, 0x76,\n 0xde, 0x02, 0x21,
                0x00, 0xa6, 0x54, 0x7c, 0x22,\n 0xb1, 0x83, 0x5c, 0x0a, 0x4a, 0x83,
                0xd9, 0x25,\n 0x9c, 0xb4, 0x6d, 0x71, 0x40, 0x7a, 0x34, 0x1d,\n 0x97,
                0x8f, 0x01, 0x05, 0xbc, 0x3e, 0xcb, 0x4c,\n 0xce, 0x13, 0x6e, 0xa5
                };\n\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE[]
                = \n{ 0x30, 0x82, 0x02, 0x35, 0x30, 0x82, 0x01, 0xdb,\n 0xa0, 0x03,
                0x02, 0x01, 0x02, 0x02, 0x10, 0x5c,\n 0x27, 0xa5, 0x76, 0x7d, 0x58,
                0x85, 0x8a, 0x43,\n 0x91, 0xa0, 0x61, 0xab, 0xcf, 0xa6, 0x59, 0x30,\n
                0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\n 0x04, 0x03, 0x02,
                0x30, 0x72, 0x31, 0x0b, 0x30,\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,
                0x13, 0x02,\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\n 0x55,
                0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\n 0x62, 0x72, 0x69, 0x64,
                0x67, 0x65, 0x73, 0x68,\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10,
                0x06,\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\n 0x6d, 0x62,
                0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\n 0x10, 0x30, 0x0e, 0x06, 0x03,
                0x55, 0x04, 0x0a,\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\n
                0x64, 0x31, 0x24, 0x30, 0x22, 0x06, 0x03, 0x55,\n 0x04, 0x03, 0x13,
                0x1b, 0x41, 0x52, 0x4d, 0x20,\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
                0x61, 0x74,\n 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74,\n 0x73,
                0x74, 0x72, 0x61, 0x70, 0x43, 0x41, 0x30,\n 0x20, 0x17, 0x0d, 0x31,
                0x37, 0x30, 0x35, 0x31,\n 0x35, 0x31, 0x39, 0x34, 0x39, 0x31, 0x31,
                0x5a,\n 0x18, 0x0f, 0x32, 0x30, 0x35, 0x32, 0x30, 0x35,\n 0x31, 0x35,
                0x31, 0x39, 0x35, 0x39, 0x31, 0x30,\n 0x5a, 0x30, 0x72, 0x31, 0x0b,
                0x30, 0x09, 0x06,\n 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47, 0x42,\n
                0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04,\n 0x08, 0x13, 0x0e,
                0x43, 0x61, 0x6d, 0x62, 0x72,\n 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,
                0x69, 0x72,\n 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55,\n 0x04,
                0x07, 0x13, 0x09, 0x43, 0x61, 0x6d, 0x62,\n 0x72, 0x69, 0x64, 0x67,
                0x65, 0x31, 0x10, 0x30,\n 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13,
                0x07,\n 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64, 0x31,\n 0x24, 0x30,
                0x22, 0x06, 0x03, 0x55, 0x04, 0x03,\n 0x13, 0x1b, 0x41, 0x52, 0x4d,
                0x20, 0x49, 0x6e,\n 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,\n
                0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,\n 0x72, 0x61, 0x70,
                0x43, 0x41, 0x30, 0x59, 0x30,\n 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48,
                0xce, 0x3d,\n 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\n 0x3d,
                0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04,\n 0x8b, 0x7c, 0x86, 0xc3,
                0x88, 0x54, 0xe6, 0x5f,\n 0xe0, 0x57, 0x4e, 0x1b, 0xac, 0x29, 0x82,
                0xea,\n 0x7d, 0x91, 0x00, 0x63, 0xa7, 0x4a, 0x05, 0xbc,\n 0x54, 0xc5,
                0x71, 0x27, 0x33, 0x19, 0x1b, 0x2e,\n 0xfa, 0x41, 0xf8, 0x7a, 0x9a,
                0x0c, 0x5d, 0xfc,\n 0xb3, 0x37, 0x01, 0x99, 0xc5, 0xc9, 0xbe, 0x78,\n
                0x5b, 0x1d, 0xec, 0xb0, 0x1a, 0x1d, 0xdc, 0xe4,\n 0x6f, 0x57, 0x04,
                0xf4, 0x3a, 0xca, 0xa8, 0xd2,\n 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b,
                0x06, 0x03,\n 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03, 0x02, 0x01,\n 0x86,
                0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13,\n 0x01, 0x01, 0xff, 0x04,
                0x05, 0x30, 0x03, 0x01,\n 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03, 0x55,
                0x1d,\n 0x0e, 0x04, 0x16, 0x04, 0x14, 0x13, 0xef, 0x69,\n 0xfa, 0x62,
                0x3f, 0x00, 0x86, 0xf4, 0x05, 0xb8,\n 0xb6, 0xe6, 0xb2, 0xf1, 0xdb,
                0x69, 0x10, 0xb4,\n 0x39, 0x30, 0x10, 0x06, 0x09, 0x2b, 0x06, 0x01,\n
                0x04, 0x01, 0x82, 0x37, 0x15, 0x01, 0x04, 0x03,\n 0x02, 0x01, 0x00,
                0x30, 0x0a, 0x06, 0x08, 0x2a,\n 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,
                0x02, 0x03,\n 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xa2,\n 0x50,
                0x88, 0x0f, 0x55, 0xe8, 0x26, 0x49, 0xe6,\n 0xf5, 0x71, 0x86, 0x33,
                0x29, 0x05, 0x4c, 0xf9,\n 0xfd, 0x1f, 0x14, 0x98, 0x92, 0x85, 0xd9,
                0x5c,\n 0x48, 0x02, 0x9e, 0xc2, 0x79, 0xa8, 0x59, 0x02,\n 0x20, 0x3e,
                0xfe, 0x3c, 0xa0, 0xbf, 0xd3, 0x0f,\n 0x15, 0x83, 0x56, 0xbc, 0xf2,
                0xfa, 0x16, 0x26,\n 0x7a, 0xc1, 0x68, 0xaa, 0xbc, 0x91, 0x3c, 0x69,\n
                0x44, 0x36, 0xf9, 0x74, 0xa1, 0x82, 0x76, 0x7a,\n 0x6e };\n\nconst
                uint8_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE[] = \n{ 0x30,
                0x82, 0x02, 0x30, 0x30, 0x82, 0x01, 0xd5,\n 0xa0, 0x03, 0x02, 0x01,
                0x02, 0x02, 0x10, 0x26,\n 0xf9, 0x08, 0xfc, 0xf1, 0xc0, 0x46, 0xa4,
                0x4a,\n 0x4d, 0x2c, 0xf1, 0x94, 0x27, 0xf9, 0x1f, 0x30,\n 0x0a, 0x06,
                0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\n 0x04, 0x03, 0x02, 0x30, 0x6f,
                0x31, 0x0b, 0x30,\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\n
                0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\n 0x55, 0x04, 0x08,
                0x13, 0x0e, 0x43, 0x61, 0x6d,\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
                0x73, 0x68,\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\n 0x03,
                0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\n 0x6d, 0x62, 0x72, 0x69,
                0x64, 0x67, 0x65, 0x31,\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04,
                0x0a,\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\n 0x64, 0x31,
                0x21, 0x30, 0x1f, 0x06, 0x03, 0x55,\n 0x04, 0x03, 0x13, 0x18, 0x41,
                0x52, 0x4d, 0x20,\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\n
                0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x57, 0x4d, 0x32,\n 0x4d, 0x20, 0x43,
                0x41, 0x30, 0x20, 0x17, 0x0d,\n 0x31, 0x37, 0x30, 0x32, 0x31, 0x32,
                0x31, 0x30,\n 0x33, 0x37, 0x35, 0x32, 0x5a, 0x18, 0x0f, 0x32,\n 0x30,
                0x35, 0x32, 0x30, 0x32, 0x31, 0x32, 0x31,\n 0x30, 0x34, 0x37, 0x35,
                0x32, 0x5a, 0x30, 0x6f,\n 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55,
                0x04,\n 0x06, 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30,\n 0x15, 0x06,
                0x03, 0x55, 0x04, 0x08, 0x13, 0x0e,\n 0x43, 0x61, 0x6d, 0x62, 0x72,
                0x69, 0x64, 0x67,\n 0x65, 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12,\n
                0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13,\n 0x09, 0x43, 0x61,
                0x6d, 0x62, 0x72, 0x69, 0x64,\n 0x67, 0x65, 0x31, 0x10, 0x30, 0x0e,
                0x06, 0x03,\n 0x55, 0x04, 0x0a, 0x13, 0x07, 0x41, 0x52, 0x4d,\n 0x20,
                0x4c, 0x74, 0x64, 0x31, 0x21, 0x30, 0x1f,\n 0x06, 0x03, 0x55, 0x04,
                0x03, 0x13, 0x18, 0x41,\n 0x52, 0x4d, 0x20, 0x49, 0x6e, 0x74, 0x65,
                0x67,\n 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c,\n 0x57, 0x4d,
                0x32, 0x4d, 0x20, 0x43, 0x41, 0x30,\n 0x59, 0x30, 0x13, 0x06, 0x07,
                0x2a, 0x86, 0x48,\n 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86,\n
                0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,\n 0x00, 0x04, 0xba,
                0xea, 0x80, 0x01, 0x2d, 0xf0,\n 0xe1, 0xb6, 0xc5, 0x5f, 0xf9, 0x76,
                0x84, 0x31,\n 0xa9, 0x29, 0xa1, 0xc7, 0xa8, 0xfd, 0xa0, 0xad,\n 0xd9,
                0x94, 0xe7, 0xec, 0x5a, 0x33, 0xa1, 0x2c,\n 0x8e, 0x36, 0x43, 0x9b,
                0x18, 0xdf, 0xce, 0x71,\n 0x14, 0x24, 0xb1, 0xfb, 0x16, 0x34, 0x0e,
                0x43,\n 0xfc, 0x23, 0x77, 0xd4, 0x13, 0xd7, 0x11, 0xaa,\n 0x39, 0x60,
                0xab, 0xa2, 0xdf, 0x24, 0xb3, 0xeb,\n 0xa0, 0xc5, 0xa3, 0x51, 0x30,
                0x4f, 0x30, 0x0b,\n 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03,\n
                0x02, 0x01, 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55,\n 0x1d, 0x13, 0x01,
                0x01, 0xff, 0x04, 0x05, 0x30,\n 0x03, 0x01, 0x01, 0xff, 0x30, 0x1d,
                0x06, 0x03,\n 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7b,\n 0xa1,
                0xa5, 0x94, 0xa5, 0xe5, 0x8f, 0x95, 0x5d,\n 0xd4, 0xce, 0xdc, 0x0f,
                0x8a, 0xbe, 0xad, 0x9a,\n 0x6b, 0x66, 0x3e, 0x30, 0x10, 0x06, 0x09,
                0x2b,\n 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x15, 0x01,\n 0x04, 0x03,
                0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\n 0x08, 0x2a, 0x86, 0x48, 0xce,
                0x3d, 0x04, 0x03,\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\n
                0x00, 0xd2, 0x06, 0x28, 0xc5, 0x31, 0x3a, 0x11,\n 0x8d, 0xb6, 0xcb,
                0x2b, 0x3f, 0xdd, 0x2a, 0x9a,\n 0x13, 0x30, 0x52, 0x77, 0xaa, 0xda,
                0xda, 0xcb,\n 0xce, 0xb9, 0x5c, 0xe4, 0x32, 0x1c, 0x02, 0xfa,\n 0x30,
                0x02, 0x21, 0x00, 0xb3, 0x82, 0x24, 0xa2,\n 0xb1, 0x67, 0x6b, 0x69,
                0x07, 0x0e, 0xcd, 0x77,\n 0x74, 0x99, 0x06, 0x9c, 0x59, 0xb2, 0x00,
                0xc0,\n 0xb3, 0xbb, 0x37, 0x5b, 0xc0, 0x1b, 0xfb, 0xd9,\n 0x70, 0x98,
                0xb9, 0x1e };\n\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY[]
                = \n{ 0x30, 0x81, 0x93, 0x02, 0x01, 0x00, 0x30, 0x13,\n 0x06, 0x07,
                0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,\n 0x01, 0x06, 0x08, 0x2a, 0x86,
                0x48, 0xce, 0x3d,\n 0x03, 0x01, 0x07, 0x04, 0x79, 0x30, 0x77, 0x02,\n
                0x01, 0x01, 0x04, 0x20, 0x78, 0xa7, 0x3d, 0xed,\n 0xa0, 0xb5, 0x67,
                0x86, 0xa7, 0x89, 0x75, 0x46,\n 0x8c, 0xd4, 0xaf, 0xbd, 0x7c, 0x36,
                0x86, 0x5e,\n 0xb3, 0xc0, 0x00, 0x98, 0x22, 0xcf, 0x3c, 0x38,\n 0xa4,
                0x31, 0xeb, 0x51, 0xa0, 0x0a, 0x06, 0x08,\n 0x2a, 0x86, 0x48, 0xce,
                0x3d, 0x03, 0x01, 0x07,\n 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x44,
                0x9c,\n 0x2c, 0x36, 0xce, 0x5e, 0xf3, 0x9b, 0xf7, 0x4d,\n 0xc0, 0x62,
                0x52, 0x3d, 0xa3, 0x0f, 0x04, 0xe2,\n 0x16, 0xcb, 0x48, 0x72, 0x4f,
                0xb7, 0x91, 0x36,\n 0x04, 0xee, 0x10, 0xe1, 0xb1, 0xce, 0xa6, 0xe5,\n
                0x87, 0xd8, 0xe8, 0x7a, 0x3f, 0xe0, 0x83, 0x3e,\n 0xd7, 0xbd, 0xa4,
                0x0b, 0xf7, 0x13, 0xa8, 0x3d,\n 0xd1, 0x79, 0x3f, 0x65, 0xc6, 0x69,
                0x43, 0xec,\n 0x41, 0x3b, 0xaa, 0x9c, 0x8b, 0xf6 };\n\nconst char
                MBED_CLOUD_DEV_MANUFACTURER[] = \"dev_manufacturer\";\n\nconst char
                MBED_CLOUD_DEV_MODEL_NUMBER[] = \"dev_model_num\";\n\nconst char MBED_CLOUD_DEV_SERIAL_NUMBER[]
                = \"0\";\n\nconst char MBED_CLOUD_DEV_DEVICE_TYPE[] = \"dev_device_type\";\n\nconst
                char MBED_CLOUD_DEV_HARDWARE_VERSION[] = \"dev_hardware_version\";\n\nconst
                uint32_t MBED_CLOUD_DEV_MEMORY_TOTAL_KB = 0;\n\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE_SIZE
                = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE);\nconst uint32_t
                MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE);\nconst
                uint32_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE);\nconst
                uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY);\n\n#endif
                //__MBED_CLOUD_DEV_CREDENTIALS_H__\n'
          schema:
            $ref: '#/definitions/DeveloperCertificateResponseData'
        400:
          description: Bad request.
          examples:
            Bad Request Error:
              code: 400
              fields:
                message: Missing certificate name.
                name: name
              message: Bad Request. Missing certificate name.
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: validation_error
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          examples:
            Authentication Error:
              code: 401
              message: Invalid access token.
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: invalid_auth
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: The maximum number of developer certificates for the given
            account has already been reached.
          examples:
            Account Limit Exceeded Error:
              code: 403
              fields:
                message: '10'
                name: cert-count
              message: Forbidden. Limit for the number of certificates exceeded.
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: account_limit_exceeded
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: Certificate with the given name already exists.
          examples:
            Duplicate Error:
              code: 409
              fields:
                message: Certificate already exists.
                name: certificate
              message: Conflict. Certificate already exists.
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: duplicate
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new developer certificate to connect to the bootstrap server.
      tags:
      - Security and identity - developer class certificates
      x-origin: /home/circleci/project/connector-ca/public/swagger.yaml
  /v3/developer-certificates/{developerCertificateId}:
    get:
      description: 'Return an existing developer certificate (a certificate that can
        be flashed to multiple devices to connect to bootstrap server).


        **Example:**

        ```

        curl -X GET http://api.us-east-1.mbedcloud.com/v3/developer-certificates/THE_CERTIFICATE_ID
        \

        -H "Authorization: Bearer <access_key>"

        ```'
      operationId: getDeveloperCertificate
      parameters:
      - description: A unique identifier for the developer certificate.
        in: path
        name: developerCertificateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Developer certificate returned successfully.
          examples:
            Success:
              account_id: 015fee5d9b3538c98640fbfb00000000
              created_at: '2017-12-11T14:22:20.009Z'
              description: This certificate applies to multiple developer devices.
              developer_certificate: '-----BEGIN CERTIFICATE-----\nMIICcDCCAhWgAwIBAgIRAPSBbBtLUE/ekQcWE4GzPJEwCgYIKoZIzj0EAwIwgaIx\nCzAJBgNVBAYTAkdCMRcwFQYDVQQIDA5DYW1icmlkZ2VzaGlyZTESMBAGA1UEBwwJ\nQ2FtYnJpZGdlMRAwDgYDVQQKDAdBUk0gTHRkMSkwJwYDVQQLDCAwMTU4NDNlMzJl\nYzkwMjQyMGEwMTVlMDcwMDAwMDAwMDEpMCcGA1UEAwwgMDE2MWRiYmNkZDY2MGE1\nODBhMDEwYzM0MDNjMDAwMDAwHhcNMTgwMjI4MDkyNzIzWhcNMjgwMjI4MDkyNzIz\nWjCBojELMAkGA1UEBhMCR0IxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMRIwEAYD\nVQQHDAlDYW1icmlkZ2UxEDAOBgNVBAoMB0FSTSBMdGQxKTAnBgNVBAsMIDAxNTg0\nM2UzMmVjOTAyNDIwYTAxNWUwNzAwMDAwMDAwMSkwJwYDVQQDDCAwMTYxZGJiY2Rk\nNjYwYTU4MGEwMTBjMzQwM2MwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\nBEScLDbOXvOb903AYlI9ow8E4hbLSHJPt5E2BO4Q4bHOpuWH2Oh6P+CDPte9pAv3\nE6g90Xk/ZcZpQ+xBO6qci/ajKjAoMBIGCSsGAQQBoCCBSQQFAgNAAJEwEgYDVR0T\nAQH/BAgwBgEB/wIBADAKBggqhkjOPQQDAgNJADBGAiEAsi9zSK8Njl22GoEHrsg8\nQlwFnrkkP9d6FyLFtmqndt4CIQCmVHwisYNcCkqD2SWctG1xQHo0HZePAQW8PstM\nzhNupQ==\n-----END
                CERTIFICATE-----\n'
              developer_private_key: '-----BEGIN PRIVATE KEY-----\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgeKc97aC1Z4aniXVG\njNSvvXw2hl6zwACYIs88OKQx61GgCgYIKoZIzj0DAQehRANCAAREnCw2zl7zm/dN\nwGJSPaMPBOIWy0hyT7eRNgTuEOGxzqblh9joej/ggz7XvaQL9xOoPdF5P2XGaUPs\nQTuqnIv2\n-----END
                PRIVATE KEY-----\n'
              etag: '1'
              id: 015fee4431fd38c98640fbfb00000000
              name: DeveloperCertificate
              object: trusted-cert
              security_file_content: '/*\n * Copyright (c) 2017 ARM Limited. All rights
                reserved.\n * SPDX-License-Identifier: Apache-2.0\n * Licensed under
                the Apache License, Version 2.0 (the License); you may\n * not use
                this file except in compliance with the License.\n * You may obtain
                a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n
                *\n * Unless required by applicable law or agreed to in writing, software\n
                * distributed under the License is distributed on an AS IS BASIS,
                WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or
                implied.\n * See the License for the specific language governing permissions
                and\n * limitations under the License.\n */\n#ifndef __MBED_CLOUD_DEV_CREDENTIALS_H__\n#define
                __MBED_CLOUD_DEV_CREDENTIALS_H__\n\n#include <inttypes.h>\n\nconst
                char MBED_CLOUD_DEV_BOOTSTRAP_ENDPOINT_NAME[] = \"0161dbbcdd660a580a010c3403c00000\";\nconst
                char MBED_CLOUD_DEV_ACCOUNT_ID[] = \"015843e32ec902420a015e0700000000\";\nconst
                char MBED_CLOUD_DEV_BOOTSTRAP_SERVER_URI[] = \"coaps://coap.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000\";\n\nconst
                uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE[] = \n{ 0x30,
                0x82, 0x02, 0x70, 0x30, 0x82, 0x02, 0x15,\n 0xa0, 0x03, 0x02, 0x01,
                0x02, 0x02, 0x11, 0x00,\n 0xf4, 0x81, 0x6c, 0x1b, 0x4b, 0x50, 0x4f,
                0xde,\n 0x91, 0x07, 0x16, 0x13, 0x81, 0xb3, 0x3c, 0x91,\n 0x30, 0x0a,
                0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\n 0x3d, 0x04, 0x03, 0x02, 0x30,
                0x81, 0xa2, 0x31,\n 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,\n
                0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30, 0x15,\n 0x06, 0x03, 0x55,
                0x04, 0x08, 0x0c, 0x0e, 0x43,\n 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64,
                0x67, 0x65,\n 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12, 0x30,\n 0x10,
                0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x09,\n 0x43, 0x61, 0x6d, 0x62,
                0x72, 0x69, 0x64, 0x67,\n 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03,
                0x55,\n 0x04, 0x0a, 0x0c, 0x07, 0x41, 0x52, 0x4d, 0x20,\n 0x4c, 0x74,
                0x64, 0x31, 0x29, 0x30, 0x27, 0x06,\n 0x03, 0x55, 0x04, 0x0b, 0x0c,
                0x20, 0x30, 0x31,\n 0x35, 0x38, 0x34, 0x33, 0x65, 0x33, 0x32, 0x65,\n
                0x63, 0x39, 0x30, 0x32, 0x34, 0x32, 0x30, 0x61,\n 0x30, 0x31, 0x35,
                0x65, 0x30, 0x37, 0x30, 0x30,\n 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
                0x31, 0x29,\n 0x30, 0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,\n 0x20,
                0x30, 0x31, 0x36, 0x31, 0x64, 0x62, 0x62,\n 0x63, 0x64, 0x64, 0x36,
                0x36, 0x30, 0x61, 0x35,\n 0x38, 0x30, 0x61, 0x30, 0x31, 0x30, 0x63,
                0x33,\n 0x34, 0x30, 0x33, 0x63, 0x30, 0x30, 0x30, 0x30,\n 0x30, 0x30,
                0x1e, 0x17, 0x0d, 0x31, 0x38, 0x30,\n 0x32, 0x32, 0x38, 0x30, 0x39,
                0x32, 0x37, 0x32,\n 0x33, 0x5a, 0x17, 0x0d, 0x32, 0x38, 0x30, 0x32,\n
                0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32, 0x33,\n 0x5a, 0x30, 0x81,
                0xa2, 0x31, 0x0b, 0x30, 0x09,\n 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
                0x02, 0x47,\n 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55,\n 0x04,
                0x08, 0x0c, 0x0e, 0x43, 0x61, 0x6d, 0x62,\n 0x72, 0x69, 0x64, 0x67,
                0x65, 0x73, 0x68, 0x69,\n 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,
                0x03,\n 0x55, 0x04, 0x07, 0x0c, 0x09, 0x43, 0x61, 0x6d,\n 0x62, 0x72,
                0x69, 0x64, 0x67, 0x65, 0x31, 0x10,\n 0x30, 0x0e, 0x06, 0x03, 0x55,
                0x04, 0x0a, 0x0c,\n 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64,\n
                0x31, 0x29, 0x30, 0x27, 0x06, 0x03, 0x55, 0x04,\n 0x0b, 0x0c, 0x20,
                0x30, 0x31, 0x35, 0x38, 0x34,\n 0x33, 0x65, 0x33, 0x32, 0x65, 0x63,
                0x39, 0x30,\n 0x32, 0x34, 0x32, 0x30, 0x61, 0x30, 0x31, 0x35,\n 0x65,
                0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x30,\n 0x30, 0x30, 0x30, 0x31,
                0x29, 0x30, 0x27, 0x06,\n 0x03, 0x55, 0x04, 0x03, 0x0c, 0x20, 0x30,
                0x31,\n 0x36, 0x31, 0x64, 0x62, 0x62, 0x63, 0x64, 0x64,\n 0x36, 0x36,
                0x30, 0x61, 0x35, 0x38, 0x30, 0x61,\n 0x30, 0x31, 0x30, 0x63, 0x33,
                0x34, 0x30, 0x33,\n 0x63, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x59,\n
                0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce,\n 0x3d, 0x02, 0x01,
                0x06, 0x08, 0x2a, 0x86, 0x48,\n 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
                0x42, 0x00,\n 0x04, 0x44, 0x9c, 0x2c, 0x36, 0xce, 0x5e, 0xf3,\n 0x9b,
                0xf7, 0x4d, 0xc0, 0x62, 0x52, 0x3d, 0xa3,\n 0x0f, 0x04, 0xe2, 0x16,
                0xcb, 0x48, 0x72, 0x4f,\n 0xb7, 0x91, 0x36, 0x04, 0xee, 0x10, 0xe1,
                0xb1,\n 0xce, 0xa6, 0xe5, 0x87, 0xd8, 0xe8, 0x7a, 0x3f,\n 0xe0, 0x83,
                0x3e, 0xd7, 0xbd, 0xa4, 0x0b, 0xf7,\n 0x13, 0xa8, 0x3d, 0xd1, 0x79,
                0x3f, 0x65, 0xc6,\n 0x69, 0x43, 0xec, 0x41, 0x3b, 0xaa, 0x9c, 0x8b,\n
                0xf6, 0xa3, 0x2a, 0x30, 0x28, 0x30, 0x12, 0x06,\n 0x09, 0x2b, 0x06,
                0x01, 0x04, 0x01, 0xa0, 0x20,\n 0x81, 0x49, 0x04, 0x05, 0x02, 0x03,
                0x40, 0x00,\n 0x91, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13,\n 0x01,
                0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01,\n 0x01, 0xff, 0x02, 0x01,
                0x00, 0x30, 0x0a, 0x06,\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04,
                0x03,\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\n 0x00, 0xb2,
                0x2f, 0x73, 0x48, 0xaf, 0x0d, 0x8e,\n 0x5d, 0xb6, 0x1a, 0x81, 0x07,
                0xae, 0xc8, 0x3c,\n 0x42, 0x5c, 0x05, 0x9e, 0xb9, 0x24, 0x3f, 0xd7,\n
                0x7a, 0x17, 0x22, 0xc5, 0xb6, 0x6a, 0xa7, 0x76,\n 0xde, 0x02, 0x21,
                0x00, 0xa6, 0x54, 0x7c, 0x22,\n 0xb1, 0x83, 0x5c, 0x0a, 0x4a, 0x83,
                0xd9, 0x25,\n 0x9c, 0xb4, 0x6d, 0x71, 0x40, 0x7a, 0x34, 0x1d,\n 0x97,
                0x8f, 0x01, 0x05, 0xbc, 0x3e, 0xcb, 0x4c,\n 0xce, 0x13, 0x6e, 0xa5
                };\n\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE[]
                = \n{ 0x30, 0x82, 0x02, 0x35, 0x30, 0x82, 0x01, 0xdb,\n 0xa0, 0x03,
                0x02, 0x01, 0x02, 0x02, 0x10, 0x5c,\n 0x27, 0xa5, 0x76, 0x7d, 0x58,
                0x85, 0x8a, 0x43,\n 0x91, 0xa0, 0x61, 0xab, 0xcf, 0xa6, 0x59, 0x30,\n
                0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\n 0x04, 0x03, 0x02,
                0x30, 0x72, 0x31, 0x0b, 0x30,\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,
                0x13, 0x02,\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\n 0x55,
                0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\n 0x62, 0x72, 0x69, 0x64,
                0x67, 0x65, 0x73, 0x68,\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10,
                0x06,\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\n 0x6d, 0x62,
                0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\n 0x10, 0x30, 0x0e, 0x06, 0x03,
                0x55, 0x04, 0x0a,\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\n
                0x64, 0x31, 0x24, 0x30, 0x22, 0x06, 0x03, 0x55,\n 0x04, 0x03, 0x13,
                0x1b, 0x41, 0x52, 0x4d, 0x20,\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
                0x61, 0x74,\n 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74,\n 0x73,
                0x74, 0x72, 0x61, 0x70, 0x43, 0x41, 0x30,\n 0x20, 0x17, 0x0d, 0x31,
                0x37, 0x30, 0x35, 0x31,\n 0x35, 0x31, 0x39, 0x34, 0x39, 0x31, 0x31,
                0x5a,\n 0x18, 0x0f, 0x32, 0x30, 0x35, 0x32, 0x30, 0x35,\n 0x31, 0x35,
                0x31, 0x39, 0x35, 0x39, 0x31, 0x30,\n 0x5a, 0x30, 0x72, 0x31, 0x0b,
                0x30, 0x09, 0x06,\n 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47, 0x42,\n
                0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04,\n 0x08, 0x13, 0x0e,
                0x43, 0x61, 0x6d, 0x62, 0x72,\n 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,
                0x69, 0x72,\n 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55,\n 0x04,
                0x07, 0x13, 0x09, 0x43, 0x61, 0x6d, 0x62,\n 0x72, 0x69, 0x64, 0x67,
                0x65, 0x31, 0x10, 0x30,\n 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13,
                0x07,\n 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64, 0x31,\n 0x24, 0x30,
                0x22, 0x06, 0x03, 0x55, 0x04, 0x03,\n 0x13, 0x1b, 0x41, 0x52, 0x4d,
                0x20, 0x49, 0x6e,\n 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,\n
                0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,\n 0x72, 0x61, 0x70,
                0x43, 0x41, 0x30, 0x59, 0x30,\n 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48,
                0xce, 0x3d,\n 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\n 0x3d,
                0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04,\n 0x8b, 0x7c, 0x86, 0xc3,
                0x88, 0x54, 0xe6, 0x5f,\n 0xe0, 0x57, 0x4e, 0x1b, 0xac, 0x29, 0x82,
                0xea,\n 0x7d, 0x91, 0x00, 0x63, 0xa7, 0x4a, 0x05, 0xbc,\n 0x54, 0xc5,
                0x71, 0x27, 0x33, 0x19, 0x1b, 0x2e,\n 0xfa, 0x41, 0xf8, 0x7a, 0x9a,
                0x0c, 0x5d, 0xfc,\n 0xb3, 0x37, 0x01, 0x99, 0xc5, 0xc9, 0xbe, 0x78,\n
                0x5b, 0x1d, 0xec, 0xb0, 0x1a, 0x1d, 0xdc, 0xe4,\n 0x6f, 0x57, 0x04,
                0xf4, 0x3a, 0xca, 0xa8, 0xd2,\n 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b,
                0x06, 0x03,\n 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03, 0x02, 0x01,\n 0x86,
                0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13,\n 0x01, 0x01, 0xff, 0x04,
                0x05, 0x30, 0x03, 0x01,\n 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03, 0x55,
                0x1d,\n 0x0e, 0x04, 0x16, 0x04, 0x14, 0x13, 0xef, 0x69,\n 0xfa, 0x62,
                0x3f, 0x00, 0x86, 0xf4, 0x05, 0xb8,\n 0xb6, 0xe6, 0xb2, 0xf1, 0xdb,
                0x69, 0x10, 0xb4,\n 0x39, 0x30, 0x10, 0x06, 0x09, 0x2b, 0x06, 0x01,\n
                0x04, 0x01, 0x82, 0x37, 0x15, 0x01, 0x04, 0x03,\n 0x02, 0x01, 0x00,
                0x30, 0x0a, 0x06, 0x08, 0x2a,\n 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,
                0x02, 0x03,\n 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xa2,\n 0x50,
                0x88, 0x0f, 0x55, 0xe8, 0x26, 0x49, 0xe6,\n 0xf5, 0x71, 0x86, 0x33,
                0x29, 0x05, 0x4c, 0xf9,\n 0xfd, 0x1f, 0x14, 0x98, 0x92, 0x85, 0xd9,
                0x5c,\n 0x48, 0x02, 0x9e, 0xc2, 0x79, 0xa8, 0x59, 0x02,\n 0x20, 0x3e,
                0xfe, 0x3c, 0xa0, 0xbf, 0xd3, 0x0f,\n 0x15, 0x83, 0x56, 0xbc, 0xf2,
                0xfa, 0x16, 0x26,\n 0x7a, 0xc1, 0x68, 0xaa, 0xbc, 0x91, 0x3c, 0x69,\n
                0x44, 0x36, 0xf9, 0x74, 0xa1, 0x82, 0x76, 0x7a,\n 0x6e };\n\nconst
                uint8_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE[] = \n{ 0x30,
                0x82, 0x02, 0x30, 0x30, 0x82, 0x01, 0xd5,\n 0xa0, 0x03, 0x02, 0x01,
                0x02, 0x02, 0x10, 0x26,\n 0xf9, 0x08, 0xfc, 0xf1, 0xc0, 0x46, 0xa4,
                0x4a,\n 0x4d, 0x2c, 0xf1, 0x94, 0x27, 0xf9, 0x1f, 0x30,\n 0x0a, 0x06,
                0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\n 0x04, 0x03, 0x02, 0x30, 0x6f,
                0x31, 0x0b, 0x30,\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\n
                0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\n 0x55, 0x04, 0x08,
                0x13, 0x0e, 0x43, 0x61, 0x6d,\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
                0x73, 0x68,\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\n 0x03,
                0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\n 0x6d, 0x62, 0x72, 0x69,
                0x64, 0x67, 0x65, 0x31,\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04,
                0x0a,\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\n 0x64, 0x31,
                0x21, 0x30, 0x1f, 0x06, 0x03, 0x55,\n 0x04, 0x03, 0x13, 0x18, 0x41,
                0x52, 0x4d, 0x20,\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\n
                0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x57, 0x4d, 0x32,\n 0x4d, 0x20, 0x43,
                0x41, 0x30, 0x20, 0x17, 0x0d,\n 0x31, 0x37, 0x30, 0x32, 0x31, 0x32,
                0x31, 0x30,\n 0x33, 0x37, 0x35, 0x32, 0x5a, 0x18, 0x0f, 0x32,\n 0x30,
                0x35, 0x32, 0x30, 0x32, 0x31, 0x32, 0x31,\n 0x30, 0x34, 0x37, 0x35,
                0x32, 0x5a, 0x30, 0x6f,\n 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55,
                0x04,\n 0x06, 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30,\n 0x15, 0x06,
                0x03, 0x55, 0x04, 0x08, 0x13, 0x0e,\n 0x43, 0x61, 0x6d, 0x62, 0x72,
                0x69, 0x64, 0x67,\n 0x65, 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12,\n
                0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13,\n 0x09, 0x43, 0x61,
                0x6d, 0x62, 0x72, 0x69, 0x64,\n 0x67, 0x65, 0x31, 0x10, 0x30, 0x0e,
                0x06, 0x03,\n 0x55, 0x04, 0x0a, 0x13, 0x07, 0x41, 0x52, 0x4d,\n 0x20,
                0x4c, 0x74, 0x64, 0x31, 0x21, 0x30, 0x1f,\n 0x06, 0x03, 0x55, 0x04,
                0x03, 0x13, 0x18, 0x41,\n 0x52, 0x4d, 0x20, 0x49, 0x6e, 0x74, 0x65,
                0x67,\n 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c,\n 0x57, 0x4d,
                0x32, 0x4d, 0x20, 0x43, 0x41, 0x30,\n 0x59, 0x30, 0x13, 0x06, 0x07,
                0x2a, 0x86, 0x48,\n 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86,\n
                0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,\n 0x00, 0x04, 0xba,
                0xea, 0x80, 0x01, 0x2d, 0xf0,\n 0xe1, 0xb6, 0xc5, 0x5f, 0xf9, 0x76,
                0x84, 0x31,\n 0xa9, 0x29, 0xa1, 0xc7, 0xa8, 0xfd, 0xa0, 0xad,\n 0xd9,
                0x94, 0xe7, 0xec, 0x5a, 0x33, 0xa1, 0x2c,\n 0x8e, 0x36, 0x43, 0x9b,
                0x18, 0xdf, 0xce, 0x71,\n 0x14, 0x24, 0xb1, 0xfb, 0x16, 0x34, 0x0e,
                0x43,\n 0xfc, 0x23, 0x77, 0xd4, 0x13, 0xd7, 0x11, 0xaa,\n 0x39, 0x60,
                0xab, 0xa2, 0xdf, 0x24, 0xb3, 0xeb,\n 0xa0, 0xc5, 0xa3, 0x51, 0x30,
                0x4f, 0x30, 0x0b,\n 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03,\n
                0x02, 0x01, 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55,\n 0x1d, 0x13, 0x01,
                0x01, 0xff, 0x04, 0x05, 0x30,\n 0x03, 0x01, 0x01, 0xff, 0x30, 0x1d,
                0x06, 0x03,\n 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7b,\n 0xa1,
                0xa5, 0x94, 0xa5, 0xe5, 0x8f, 0x95, 0x5d,\n 0xd4, 0xce, 0xdc, 0x0f,
                0x8a, 0xbe, 0xad, 0x9a,\n 0x6b, 0x66, 0x3e, 0x30, 0x10, 0x06, 0x09,
                0x2b,\n 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x15, 0x01,\n 0x04, 0x03,
                0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\n 0x08, 0x2a, 0x86, 0x48, 0xce,
                0x3d, 0x04, 0x03,\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\n
                0x00, 0xd2, 0x06, 0x28, 0xc5, 0x31, 0x3a, 0x11,\n 0x8d, 0xb6, 0xcb,
                0x2b, 0x3f, 0xdd, 0x2a, 0x9a,\n 0x13, 0x30, 0x52, 0x77, 0xaa, 0xda,
                0xda, 0xcb,\n 0xce, 0xb9, 0x5c, 0xe4, 0x32, 0x1c, 0x02, 0xfa,\n 0x30,
                0x02, 0x21, 0x00, 0xb3, 0x82, 0x24, 0xa2,\n 0xb1, 0x67, 0x6b, 0x69,
                0x07, 0x0e, 0xcd, 0x77,\n 0x74, 0x99, 0x06, 0x9c, 0x59, 0xb2, 0x00,
                0xc0,\n 0xb3, 0xbb, 0x37, 0x5b, 0xc0, 0x1b, 0xfb, 0xd9,\n 0x70, 0x98,
                0xb9, 0x1e };\n\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY[]
                = \n{ 0x30, 0x81, 0x93, 0x02, 0x01, 0x00, 0x30, 0x13,\n 0x06, 0x07,
                0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,\n 0x01, 0x06, 0x08, 0x2a, 0x86,
                0x48, 0xce, 0x3d,\n 0x03, 0x01, 0x07, 0x04, 0x79, 0x30, 0x77, 0x02,\n
                0x01, 0x01, 0x04, 0x20, 0x78, 0xa7, 0x3d, 0xed,\n 0xa0, 0xb5, 0x67,
                0x86, 0xa7, 0x89, 0x75, 0x46,\n 0x8c, 0xd4, 0xaf, 0xbd, 0x7c, 0x36,
                0x86, 0x5e,\n 0xb3, 0xc0, 0x00, 0x98, 0x22, 0xcf, 0x3c, 0x38,\n 0xa4,
                0x31, 0xeb, 0x51, 0xa0, 0x0a, 0x06, 0x08,\n 0x2a, 0x86, 0x48, 0xce,
                0x3d, 0x03, 0x01, 0x07,\n 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x44,
                0x9c,\n 0x2c, 0x36, 0xce, 0x5e, 0xf3, 0x9b, 0xf7, 0x4d,\n 0xc0, 0x62,
                0x52, 0x3d, 0xa3, 0x0f, 0x04, 0xe2,\n 0x16, 0xcb, 0x48, 0x72, 0x4f,
                0xb7, 0x91, 0x36,\n 0x04, 0xee, 0x10, 0xe1, 0xb1, 0xce, 0xa6, 0xe5,\n
                0x87, 0xd8, 0xe8, 0x7a, 0x3f, 0xe0, 0x83, 0x3e,\n 0xd7, 0xbd, 0xa4,
                0x0b, 0xf7, 0x13, 0xa8, 0x3d,\n 0xd1, 0x79, 0x3f, 0x65, 0xc6, 0x69,
                0x43, 0xec,\n 0x41, 0x3b, 0xaa, 0x9c, 0x8b, 0xf6 };\n\nconst char
                MBED_CLOUD_DEV_MANUFACTURER[] = \"dev_manufacturer\";\n\nconst char
                MBED_CLOUD_DEV_MODEL_NUMBER[] = \"dev_model_num\";\n\nconst char MBED_CLOUD_DEV_SERIAL_NUMBER[]
                = \"0\";\n\nconst char MBED_CLOUD_DEV_DEVICE_TYPE[] = \"dev_device_type\";\n\nconst
                char MBED_CLOUD_DEV_HARDWARE_VERSION[] = \"dev_hardware_version\";\n\nconst
                uint32_t MBED_CLOUD_DEV_MEMORY_TOTAL_KB = 0;\n\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE_SIZE
                = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE);\nconst uint32_t
                MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE);\nconst
                uint32_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE);\nconst
                uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY);\n\n#endif
                //__MBED_CLOUD_DEV_CREDENTIALS_H__\n'
          schema:
            $ref: '#/definitions/DeveloperCertificateResponseData'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          examples:
            Authentication Error:
              code: 401
              message: Invalid access token.
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: invalid_auth
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Developer certificate not found with given ID.
          examples:
            Authentication Error:
              code: 404
              message: 'Not Found. Not found: 016006724ff53ade90ed948d03c00001'
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: not_found
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Fetch an existing developer certificate to connect to the bootstrap
        server.
      tags:
      - Security and identity - developer class certificates
      x-origin: /home/circleci/project/connector-ca/public/swagger.yaml
  /v3/device-block-categories/:
    get:
      description: 'List all device block categories. A block category is a short
        description of why a device was suspended or returned to service.


        **Example:**

        Get all defined device suspension categories:

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/device-block-categories
        \

        -H ''Authorization: Bearer <API key>''

        ```'
      operationId: Block_Categories_list
      parameters:
      - description: This endpoint doesn't support paging. Parameter is accepted for
          API compatibility. Value is ignored.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: This endpoint doesn't support paging. Parameter is accepted for
          API compatibility. Value is ignored.
        in: query
        name: after
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      - description: eq filter for the "reference" field
        in: query
        name: reference__eq
        type: string
      - description: neq filter for the "reference" field
        in: query
        name: reference__neq
        type: string
      - description: in filter for the "reference" field
        in: query
        name: reference__in
        type: string
      - description: nin filter for the "reference" field
        in: query
        name: reference__nin
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/DeviceBlockCategoryPage'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List all device block categories
      tags:
      - Device directory - lifecycle
      x-filter:
        reference:
        - eq
        - neq
        - in
        - nin
        updated_at:
        - in
        - nin
        - lte
        - gte
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-block-categories/{block_category_reference}:
    get:
      description: Retrieve a device block category. A block category is a short description
        of why a device was suspended or returned to service.
      operationId: Block_Categories_retrieve
      parameters:
      - description: The reference of the block category.
        in: path
        name: block_category_reference
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DeviceBlockCategory'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a device block category.
      tags:
      - Device directory - lifecycle
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-enrollments:
    get:
      description: 'Provides a list of pending and claimed enrollments.


        **Example:**

        ```

        curl -X GET \

        -H ''Authorization: Bearer <access_key>'' \

        https://api.us-east-1.mbedcloud.com/v3/device-enrollments

        ```

        With query parameters:

        ```

        curl -X GET \

        -H ''Authorization: Bearer <access_key>'' \

        ''https://api.us-east-1.mbedcloud.com/v3/device-enrollments?limit=10''

        ```'
      operationId: getDeviceEnrollments
      parameters:
      - description: Number of results to return (2-1000).
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        required: false
        type: integer
      - description: Entity ID to fetch after.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: ASC or DESC
        enum:
        - ASC
        - DESC
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/EnrollmentIdentities'
        400:
          description: Bad request. The access token could not be read.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: The provided access token is not valid.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a list of enrollments per account.
      tags:
      - Device ownership - enrollments
      x-origin: /home/circleci/project/enrollment-service/public/swagger.yaml
    post:
      description: 'When the device connects to the bootstrap server and provides
        the enrollment ID, it is assigned to your account.

        <br>

        **Example:**

        ```

        curl -X POST \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        https://api.us-east-1.mbedcloud.com/v3/device-enrollments \

        -d ''{"enrollment_identity": "A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5"}''

        ```'
      operationId: createDeviceEnrollment
      parameters:
      - in: body
        name: enrollment_identity
        required: true
        schema:
          $ref: '#/definitions/EnrollmentId'
      responses:
        201:
          description: Created. The enrollment claim has been created and is waiting
            for the device to connect.
          schema:
            $ref: '#/definitions/EnrollmentIdentity'
        400:
          description: Bad request. The enrollment identity is not valid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: The provided access token is not valid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: Conflict. The requested identity to add already exists on this
            or another account.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a single enrollment.
      tags:
      - Device ownership - enrollments
      x-origin: /home/circleci/project/enrollment-service/public/swagger.yaml
  /v3/device-enrollments-bulk-deletes:
    post:
      consumes:
      - multipart/form-data
      description: "With bulk delete, you can upload a `CSV` file containing a number\
        \ of enrollment IDs to delete.\n\n**Example:**\n```\ncurl -X POST \\\n-H 'Authorization:\
        \ Bearer <access_key>' \\\n-F 'enrollment_identities=@/path/to/enrollments/enrollments.csv'\
        \ \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-deletes\n\
        \n```\n**To ensure your CSV file is valid:**\n1. The first line of the file\
        \ (header) is ignored.\n1. Each line can contain comma-separated values, where\
        \ the first value is the Enrollment ID. Everything after the first comma is\
        \ ignored.\n1. Valid enrollments begin with A followed by a - and 95 characters\
        \ (examples below).\n1. One enrollment ID per line. Empty lines are ignored.\n\
        1. Trailing comma at the end of the line is optional.\n1. Lines are terminated\
        \ with either a line feed \\n, a carriage return \\r, or both \\r\\n.\n1.\
        \ Leading and trailing whitespace characters (Unicode U+0000 - U+0020) are\
        \ removed from the identity before validation.\n1. Empty identities are ignored.\n\
        1. Valid enrollment identities may be enclosed within quotation marks. Whitespace\
        \ inside quotation marks is not trimmed and will cause validation to fail.\
        \ Empty quotation marks are also invalid.\n1. Use UTF-8 encoding.\n\n**A valid\
        \ enrollment file:**\n```\n\"Examples of valid identites, notes\"\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\"\
        ,\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12\"\
        \nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12\n\
        A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:24:44:71:22:15:43:23:12,\
        \ This text is ignored,\n A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:60:25:48:44:71:22:15:43:23:12\
        \       , Whitespace is trimmed before validation.\n  \"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:60:25:48:44:71:22:15:43:23:12\"\
        \       , Whitespace around quotation marks is also trimmed.\n\n```\n\n**A\
        \ file containing invalid identities:**\n```\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\"\
        , First line is ignored.\nA_4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12,\
        \ Invalid version identifier.\nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23,\
        \ Too-short identity.\n\"\", Empty quotation marks are an invalid identity.\n\
        \" A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\
        \ \", Whitespace inside quotation marks is not trimmed, causing an error.\n\
        \n```\n\n**An empty file:**\n```\n\"Examples of blank lines that are ignored.\"\
        \n\n,,\n, This is also considered to a blank line.\n```"
      operationId: deleteBulkDeviceEnrollment
      parameters:
      - description: The `CSV` file containing the enrollment IDs. The maximum file
          size is 10MB.
        in: formData
        name: enrollment_identities
        required: true
        type: file
      responses:
        201:
          description: Bulk delete data received and asynchronous processing started.
          schema:
            $ref: '#/definitions/BulkResponse'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Bulk delete.
      tags:
      - Device ownership - enrollments
      x-origin: /home/circleci/project/enrollment-service/public/swagger.yaml
  /v3/device-enrollments-bulk-deletes/{id}:
    get:
      description: 'Provides information on bulk delete for the given ID, for example,
        bulk status and the number of processed enrollment identities. Provides links
        to bulk delete reports as well.


        **Report file format:**

        The report files have a header line and the value are separated by commas.
        The lines are delimited by a line break (CRLF). Make sure the report file
        is compliant with IETF Informal CSV common format [RFC 4180](https://tools.ietf.org/html/rfc4180).


        An example of a full report file:

        ```

        "entity__id","entity__deleted_at","error__code","error__type","error__message","error__fields"

        "A-F9:AA:AA:AA:DE:31:C7:30:72:55:27:AE:8B:E1:1C:6F:42:7D:06:CF:FB:18:6F:59:48:29:B3:98:4B:76:8F:9E","2018-09-07T12:10:58.428Z","","","",""

        "A-FF:AA:AA:AA:3B:43:EB:D7:C7:30:03:5F:C8:D0:15:91:70:C2:5D:4F:EB:24:E9:3A:BB:D8:3C:FE:20:EA:B1:72","2018-09-07T12:10:58.428Z","","","",""

        ```

        An example of an error report file:

        ```

        "entity__id","error__code","error__type","error__message","error__fields"

        "A-F9:AA:AA:AA:DE:31:C7:30:72:55:27:AE:8B:E1:1C:6F:42:7D:06:CF:FB:18:6F:59:48:29:B3:98:4B:76:8F:9E","409","duplicate","Enrollment
        identity is already claimed in the mbed Cloud.",""

        "A-FF:AA:AA:AA:3B:43:EB:D7:C7:30:03:5F:C8:D0:15:91:70:C2:5D:4F:EB:24:E9:3A:BB:D8:3C:FE:20:EA:B1:72","409","duplicate","Enrollment
        identity is already claimed in the mbed Cloud.",""

        ```

        **Example:**

        ```

        curl -X GET \

        -H ''Authorization: Bearer <access_key>'' \

        https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-deletes/{id}

        ```'
      operationId: getBulkDeviceEnrollmentDelete
      parameters:
      - description: Bulk delete task entity ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/csv
      - application/json
      responses:
        200:
          description: Bulk delete entity found.
          schema:
            $ref: '#/definitions/BulkResponse'
        400:
          description: Bad request. Invalid bulk identity.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get bulk delete entity.
      tags:
      - Device ownership - enrollments
      x-origin: /home/circleci/project/enrollment-service/public/swagger.yaml
  /v3/device-enrollments-bulk-uploads:
    post:
      consumes:
      - multipart/form-data
      description: "With bulk upload, you can upload a `CSV` file containing a number\
        \ of enrollment IDs.\n\n**Example:**\n```\ncurl -X POST \\\n-H 'Authorization:\
        \ Bearer <access_key>' \\\n-F 'enrollment_identities=@/path/to/enrollments/enrollments.csv'\
        \ \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads\n\
        \n```\n  **To ensure your CSV file is valid:**\n  1. The first line of the\
        \ file (header) is ignored.\n  1. Each line can contain comma-separated values,\
        \ where the first value is the Enrollment ID. Everything after the first comma\
        \ is ignored.\n  1. Valid enrollments begin with A followed by a - and 95\
        \ characters (examples below).\n  1. One enrollment ID per line. Empty lines\
        \ are ignored.\n  1. Trailing comma at the end of the line is optional.\n\
        \  1. Lines are terminated with either a line feed \\n, a carriage return\
        \ \\r, or both \\r\\n.\n  1. Leading and trailing whitespace characters (Unicode\
        \ U+0000 - U+0020) are removed from the identity before validation.\n  1.\
        \ Empty identities are ignored.\n  1. Valid enrollment identities may be enclosed\
        \ within quotation marks. Whitespace inside quotation marks is not trimmed\
        \ and will cause validation to fail. Empty quotation marks are also invalid.\n\
        \  1. Use UTF-8 encoding.\n\n\n**A valid enrollment file:**\n```\n\"Examples\
        \ of valid identites, notes\"\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\"\
        ,\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12\"\
        \nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12\n\
        A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:24:44:71:22:15:43:23:12,\
        \ This text is ignored.\n A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:60:25:48:44:71:22:15:43:23:12\
        \       , Whitespace is trimmed before validation.\n  \"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:60:25:48:44:71:22:15:43:23:12\"\
        \       , Whitespace around quotation marks is also trimmed.\n\n```\n\n**A\
        \ file containing invalid identities:**\n```\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\"\
        , First line is ignored.\nA_4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12,\
        \ Invalid version identifier.\nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12,\
        \ Too-short identity.\n\"\", Empty quotation marks are an invalid identity\n\
        \" A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\
        \ \", Whitespace inside quotation marks is not trimmed, causing an error.\n\
        \n```\n\n**An empty file:**\n```\n\"Examples of blank lines that are ignored\"\
        \n\n,,\n, This is also considered a blank line.\n```"
      operationId: createBulkDeviceEnrollment
      parameters:
      - description: The `CSV` file containing the enrollment IDs. The maximum file
          size is 10 MB.
        in: formData
        name: enrollment_identities
        required: true
        type: file
      responses:
        201:
          description: Bulk upload data received and asynchronous processing started.
          schema:
            $ref: '#/definitions/BulkResponse'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Bulk upload.
      tags:
      - Device ownership - enrollments
      x-origin: /home/circleci/project/enrollment-service/public/swagger.yaml
  /v3/device-enrollments-bulk-uploads/{id}:
    get:
      description: 'Provides information on bulk upload for the given ID, for example,
        bulk status and number of processed enrollment identities. Provides links
        to bulk upload reports as well.


        **Report file format:**

        The report files have a header line, and the values are separated by commas.
        Delimit lines with a line break (CRLF). Make sure the report file is compliant
        with IETF Informal CSV common format [RFC 4180](https://tools.ietf.org/html/rfc4180).


        An example of a full report file:

        ```

        "entity__id","entity__created_at","error__code","error__type","error__message","error__fields"

        "A-F9:AA:AA:AA:DE:31:C7:30:72:55:27:AE:8B:E1:1C:6F:42:7D:06:CF:FB:18:6F:59:48:29:B3:98:4B:76:8F:9E","2018-09-07T12:10:58.428Z","","","",""

        "A-FF:AA:AA:AA:3B:43:EB:D7:C7:30:03:5F:C8:D0:15:91:70:C2:5D:4F:EB:24:E9:3A:BB:D8:3C:FE:20:EA:B1:72","2018-09-07T12:10:58.428Z","","","",""

        ```

        An example of an error report file:

        ```

        "entity__id","error__code","error__type","error__message","error__fields"

        "A-F9:AA:AA:AA:DE:31:C7:30:72:55:27:AE:8B:E1:1C:6F:42:7D:06:CF:FB:18:6F:59:48:29:B3:98:4B:76:8F:9E","409","duplicate","Enrollment
        identity is already claimed in the mbed Cloud.",""

        "A-FF:AA:AA:AA:3B:43:EB:D7:C7:30:03:5F:C8:D0:15:91:70:C2:5D:4F:EB:24:E9:3A:BB:D8:3C:FE:20:EA:B1:72","409","duplicate","Enrollment
        identity is already claimed in the mbed Cloud.",""

        ```

        **Example:**

        ```

        curl -X GET \

        -H ''Authorization: Bearer <access_key>'' \

        https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/{id}

        ```'
      operationId: getBulkDeviceEnrollment
      parameters:
      - description: Bulk create task entity ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/csv
      - application/json
      responses:
        200:
          description: Bulk upload entity found.
          schema:
            $ref: '#/definitions/BulkResponse'
        400:
          description: Bad request. Invalid bulk identity.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get bulk upload entity.
      tags:
      - Device ownership - enrollments
      x-origin: /home/circleci/project/enrollment-service/public/swagger.yaml
  /v3/device-enrollments/{id}:
    delete:
      description: 'To free a device from your account, delete the enrollment claim.
        To bypass the device ownership, you need to delete the enrollment and factory
        reset the device. For more information, see [Transferring ownership using
        First-to-Claim](https://www.pelion.com/docs/device-management/current/connecting/device-ownership-first-to-claim-by-enrollment-list.html).

        <br>

        **Example:**

        ```

        curl -X DELETE \

        -H ''Authorization: Bearer <access_key>'' \

        https://api.us-east-1.mbedcloud.com/v3/device-enrollments/{id}

        ```'
      operationId: deleteDeviceEnrollment
      parameters:
      - description: Enrollment identity.
        in: path
        name: id
        required: true
        type: string
      responses:
        204:
          description: No content. The enrollment claim has been deleted.
        400:
          description: Bad request. Invalid enrollment identity.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete an enrollment by ID.
      tags:
      - Device ownership - enrollments
      x-origin: /home/circleci/project/enrollment-service/public/swagger.yaml
    get:
      description: 'Check detailed enrollment info, for example, date of claim or
        expiration date.


        **Example:**

        ```

        curl -X GET \

        -H ''Authorization: Bearer <access_key>'' \

        https://api.us-east-1.mbedcloud.com/v3/device-enrollments/{id}

        ```'
      operationId: getDeviceEnrollment
      parameters:
      - description: Enrollment identity.
        in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: OK. Pending enrollment data.
          schema:
            $ref: '#/definitions/EnrollmentIdentity'
        400:
          description: Bad request. Invalid enrollment identity.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get details of an single enrollment by ID.
      tags:
      - Device ownership - enrollments
      x-origin: /home/circleci/project/enrollment-service/public/swagger.yaml
  /v3/device-events/:
    get:
      description: "List all or a filtered list of device events for the account.\
        \ Device events are events significant to operation or lifetime, such as creation,\
        \ firmware update, and suspension.\n\nTo see statistics for device connectivity\
        \ and usage, use the [Statistics API](https://www.pelion.com/docs/device-management-api/connect-statistics/).\n\
        \n **Example:**\n Following example gets device-events limiting returned results\
        \ to max 5 events\n ```\n curl -X GET https://api.us-east-1.mbedcloud.com/v3/device-events?limit=5\
        \ \\\n -H 'Authorization: Bearer <API key>'\n ```\n or to get events for certain\
        \ device filter based on device_id:\n ```\n curl -X GET https://api.us-east-1.mbedcloud.com/v3/device-events?device_id=<device_id>\
        \ \\\n -H 'Authorization: Bearer <API key>'\n ```"
      operationId: Device_Event_list
      parameters:
      - description: How many objects to retrieve in the page (2-1000). Limit values
          outside of this range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data.\n\
          \n##### Filtering\n\n`?filter={URL encoded query string}`\n\nThe query string\
          \ is made up of key/value pairs separated by ampersands. So for a query\
          \ of\n`key1=value1&key2=value2&key3=value3`, this is encoded as `?filter=key1%3Dvalue1%26key2%3Dvalue2%26key3%3Dvalue3`.\n\
          \n###### Filterable fields:\n\nThe below table lists all filterable fields:\n\
          \n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>= / __eq\
          \ / __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte / __gte</th>\n\
          \    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>date_time</td>\n  \
          \    <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n   \
          \ </tr>\n    <tr>\n      <td>description</td>\n      <td>\u2713</td>\n \
          \     <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n    \
          \  <td>id</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n\
          \    </tr>\n    <tr>\n      <td>device_id</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n   \
          \   <td>event_type</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>state_change</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n \
          \   </tr>\n  </tbody>\n</table>\n&nbsp;\n\nThe examples below show the queries\
          \ in *unencoded* form.\n\n###### By id:\n\n`id={id}`\n\n###### By state\
          \ change:\n\n`state_change=[True|False]`\n\n###### By event type:\n\n`event_type={value}`\n\
          \n###### On date-time fields:\n\nDate-time fields should be specified in\
          \ UTC RFC3339 format: `YYYY-MM-DDThh:mm:ss.msZ`. There are three permitted\n\
          variations:\n\n* UTC RFC3339 with milliseconds, for example, 2016-11-30T16:25:12.1234Z.\n\
          * UTC RFC3339 without milliseconds, for example, 2016-11-30T16:25:12Z.\n\
          * UTC RFC3339 shortened - without milliseconds and punctuation, for example,\
          \ 20161130T162512Z.\n\nDate-time filtering supports three operators:\n\n\
          * Equality.\n* Greater than or equal to &ndash; field name suffixed with\
          \ `__gte`.\n* Less than or equal to &ndash; field name suffixed with `__lte`.\n\
          Lower and upper limits to a date-time range may be specified by including\
          \ both the `__gte` and `__lte` forms in\nthe filter:\n\n`{field name}[|__lte|__gte]={UTC\
          \ RFC3339 date-time}`\n\n##### Multi-field example\n\n`id=0158d38771f70000000000010010038c&state_change=True&date_time__gte=2016-11-30T16:25:12.1234Z`\n\
          \nEncoded:\n\n`?filter=id%3D0158d38771f70000000000010010038c%26state_change%3DTrue%26date_time__gte%3D2016-11-30T16%3A25%3A12.1234Z`\n\
          \n##### Filtering with filter operators\n\nString field filtering supports\
          \ the following operators:\n\n* Equality: `__eq`.\n* Non-equality: `__neq`.\n\
          * In : `__in`.\n* Not in: `__nin`.\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n\n`event_type__in=update.device.device-created,update.device.device-updated`"
        in: query
        name: filter
        type: string
      - description: in filter for the "date_time" field
        in: query
        name: date_time__in
        type: string
      - description: nin filter for the "date_time" field
        in: query
        name: date_time__nin
        type: string
      - description: lte filter for the "date_time" field
        format: date-time
        in: query
        name: date_time__lte
        type: string
      - description: gte filter for the "date_time" field
        format: date-time
        in: query
        name: date_time__gte
        type: string
      - description: eq filter for the "description" field
        in: query
        name: description__eq
        type: string
      - description: neq filter for the "description" field
        in: query
        name: description__neq
        type: string
      - description: in filter for the "description" field
        in: query
        name: description__in
        type: string
      - description: nin filter for the "description" field
        in: query
        name: description__nin
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "device_id" field
        in: query
        name: device_id__eq
        type: string
      - description: neq filter for the "device_id" field
        in: query
        name: device_id__neq
        type: string
      - description: in filter for the "device_id" field
        in: query
        name: device_id__in
        type: string
      - description: nin filter for the "device_id" field
        in: query
        name: device_id__nin
        type: string
      - description: eq filter for the "event_type" field
        in: query
        name: event_type__eq
        type: string
      - description: neq filter for the "event_type" field
        in: query
        name: event_type__neq
        type: string
      - description: in filter for the "event_type" field
        in: query
        name: event_type__in
        type: string
      - description: nin filter for the "event_type" field
        in: query
        name: event_type__nin
        type: string
      - description: eq filter for the "state_change" field
        in: query
        name: state_change__eq
        type: boolean
      - description: neq filter for the "state_change" field
        in: query
        name: state_change__neq
        type: boolean
      responses:
        '200':
          description: Request successful.
          schema:
            $ref: '#/definitions/DeviceEventPage'
        '400':
          description: Bad request.
        '401':
          description: Not authenticated.
        '404':
          description: Unable to find page.
      summary: List all device events.
      tags:
      - Device directory - events
      x-filter:
        date_time:
        - in
        - nin
        - lte
        - gte
        description:
        - eq
        - neq
        - in
        - nin
        device_id:
        - eq
        - neq
        - in
        - nin
        event_type:
        - eq
        - neq
        - in
        - nin
        id:
        - eq
        - neq
        - in
        - nin
        state_change:
        - eq
        - neq
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-events/{device_event_id}/:
    get:
      description: '"Retrieve a specific device event. See ''/v3/device-events/''
        for information on device events, and how to get the device_event_id."


        **Example:**

        To fetch a specific event you can use the ''id'' field from ''/v3/device-events''.
        Form of ''016c03d40a4e000000000001001003b4''

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/device-events/<device_event_id>
        \

        -H ''Authorization: Bearer <API key>''

        ```'
      operationId: Device_Event_retrieve
      parameters:
      - in: path
        name: device_event_id
        required: true
        type: string
      responses:
        '200':
          description: Retrieved result successfully.
          schema:
            $ref: '#/definitions/DeviceEventData'
        '400':
          description: Bad request.
        '401':
          description: Not authenticated.
        '404':
          description: Unable to find device.
      summary: Retrieve a device event.
      tags:
      - Device directory - events
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-groups/:
    get:
      description: List all groups.
      operationId: Group_list
      parameters:
      - description: How many objects to retrieve in the page (2-1000). Limit values
          outside of this range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data.\n\
          \n##### Filtering\n\n`?filter={URL encoded query string}`\n\nThe query string\
          \ is made up of key/value pairs separated by ampersands. So for a query\
          \ of\n`key1=value1&key2=value2&key3=value3`, this would be encoded as `?filter=key1%3Dvalue1%26key2%3Dvalue2%26key3%3Dvalue3`.\n\
          \n###### Filterable fields:\n\nThe table lists all filterable fields:\n\n\
          <table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>= / __eq /\
          \ __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte / __gte</th>\n\
          \    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>id</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n\
          \      <td>devices_count</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n    </tr>\n    <tr>\n      <td>name</td>\n     \
          \ <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n\
          \    <tr>\n      <td>custom_attributes</td>\n      <td>\u2713</td>\n   \
          \   <td>&nbsp;</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>component_attributes</td>\n\
          \      <td>\u2713</td>\n      <td>&nbsp;</td>\n      <td>&nbsp;</td>\n \
          \   </tr>\n    <tr>\n      <td>created_at</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n   \
          \   <td>updated_at</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n    </tr>\n    <tr>\n      <td>etag</td>\n     \
          \ <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n\
          \  </tbody>\n</table>\n&nbsp;\n\nThe examples below show the queries in\
          \ *unencoded* form.\n\n###### By device group properties:\n\n`name__eq=mygroup`\n\
          \n###### On date-time fields:\n\nDate-time fields should be specified in\
          \ UTC RFC3339 format `YYYY-MM-DDThh:mm:ss.msZ`. There are three permitted\n\
          variations:\n\n* UTC RFC3339 with milliseconds, for example, 2016-11-30T16:25:12.1234Z.\n\
          * UTC RFC3339 without milliseconds, for example, 2016-11-30T16:25:12Z.\n\
          * UTC RFC3339 shortened - without milliseconds and punctuation, for example,\
          \ 20161130T162512Z.\n\nDate-time filtering supports three operators:\n\n\
          * Equality.\n* Greater than or equal to &ndash; field name suffixed with\
          \ `__gte`.\n* Less than or equal to &ndash; field name suffixed with `__lte`.\n\
          \nLower and upper limits to a date-time range may be specified by including\
          \ both the `__gte` and `__lte` forms in\nthe filter:\n\n`{field name}[|__lte|__gte]={UTC\
          \ RFC3339 date-time}`\n\n###### By device group custom attributes:\n\n`custom_attributes__{param}={value}`\n\
          \n`custom_attributes__tag=TAG1`\n\n###### By device group component attributes:\n\
          \n`component_attributes__{name}={version}`\n`component_attributes__{name}__{operator}={version}`\n\
          \n`component_attributes__ble=1.2.3`\n`component_attributes__main__gt=1.2.3`\n\
          \n##### Multi-field example\n\n`name__eq=mygroup&created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \nEncoded:\n\n`?filter=name__eq%3Dmygroup%26created_at__gte%3D2016-11-30T16%3A25%3A12.1234Z%26created_at__lte%3D2016-12-30T00%3A00%3A00Z`\n\
          \n##### Filtering with filter operators\n\nString field filtering supports\
          \ the following operators:\n\n* Equality: `__eq`.\n* Non-equality: `__neq`.\n\
          * In : `__in`.\n* Not in: `__nin`.\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n`name__in=group1,group2`"
        in: query
        name: filter
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "devices_count" field
        in: query
        name: devices_count__eq
        type: integer
      - description: neq filter for the "devices_count" field
        in: query
        name: devices_count__neq
        type: integer
      - description: in filter for the "devices_count" field
        in: query
        name: devices_count__in
        type: string
      - description: nin filter for the "devices_count" field
        in: query
        name: devices_count__nin
        type: string
      - description: lte filter for the "devices_count" field
        in: query
        name: devices_count__lte
        type: integer
      - description: gte filter for the "devices_count" field
        in: query
        name: devices_count__gte
        type: integer
      - description: eq filter for the "name" field
        in: query
        name: name__eq
        type: string
      - description: neq filter for the "name" field
        in: query
        name: name__neq
        type: string
      - description: in filter for the "name" field
        in: query
        name: name__in
        type: string
      - description: nin filter for the "name" field
        in: query
        name: name__nin
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      responses:
        '200':
          description: Ok.
          schema:
            $ref: '#/definitions/DeviceGroupPage'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List all groups.
      tags:
      - Device directory - groups
      x-filter:
        created_at:
        - in
        - nin
        - lte
        - gte
        devices_count:
        - eq
        - neq
        - in
        - nin
        - lte
        - gte
        id:
        - eq
        - neq
        - in
        - nin
        name:
        - eq
        - neq
        - in
        - nin
        updated_at:
        - in
        - nin
        - lte
        - gte
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    post:
      description: Create a group.
      operationId: Group_create
      parameters:
      - description: Group
        in: body
        name: group
        required: true
        schema:
          properties:
            custom_attributes: *id028
            description: *id029
            name: *id030
          type: object
      responses:
        '201':
          description: Created.
          schema:
            $ref: '#/definitions/DeviceGroup'
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict - Group name already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a group.
      tags:
      - Device directory - groups
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-groups/{device-group-id}/:
    delete:
      description: Delete a group. This deletes the group, but not the devices in
        the group.
      operationId: Group_delete
      parameters:
      - description: The ID of the group.
        in: path
        name: device-group-id
        required: true
        type: string
      responses:
        '204':
          description: Success - group deleted.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a group.
      tags:
      - Device directory - groups
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    get:
      description: Returns [DeviceGroup](https://www.pelion.com/docs/device-management-api/device-directory/)
        info what contains info of the group, for example, name and updated date.
        To list the devices in the group, use '/v3/device-groups/{device-group-id}/devices/'.
      operationId: Group_retrieve
      parameters:
      - description: The group ID
        in: path
        name: device-group-id
        required: true
        type: string
      responses:
        '200':
          description: Ok.
          schema:
            $ref: '#/definitions/DeviceGroup'
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a group.
      tags:
      - Device directory - groups
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    put:
      description: Modify the attributes of a group, such as the description.
      operationId: Group_update
      parameters:
      - in: path
        name: device-group-id
        required: true
        type: string
      - description: Group
        in: body
        name: group
        required: true
        schema:
          properties:
            custom_attributes: *id028
            description: *id029
            name: *id030
          type: object
      responses:
        '200':
          description: Ok.
          schema:
            $ref: '#/definitions/DeviceGroup'
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Modify the attributes of a group.
      tags:
      - Device directory - groups
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-groups/{device-group-id}/devices/:
    get:
      description: Get a page of devices in a specified group.
      operationId: Group_members_retrieve
      parameters:
      - in: path
        name: device-group-id
        required: true
        type: string
      - description: How many objects to retrieve in the page (2-1000). Limit values
          outside of this range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      - description: eq filter for the "lifecycle_status" field
        in: query
        name: lifecycle_status__eq
        type: string
      - description: neq filter for the "lifecycle_status" field
        in: query
        name: lifecycle_status__neq
        type: string
      - description: in filter for the "lifecycle_status" field
        in: query
        name: lifecycle_status__in
        type: string
      - description: nin filter for the "lifecycle_status" field
        in: query
        name: lifecycle_status__nin
        type: string
      - description: eq filter for the "operator_suspended" field
        in: query
        name: operator_suspended__eq
        type: boolean
      - description: neq filter for the "operator_suspended" field
        in: query
        name: operator_suspended__neq
        type: boolean
      - description: eq filter for the "last_operator_suspended_category" field
        in: query
        name: last_operator_suspended_category__eq
        type: string
      - description: neq filter for the "last_operator_suspended_category" field
        in: query
        name: last_operator_suspended_category__neq
        type: string
      - description: in filter for the "last_operator_suspended_category" field
        in: query
        name: last_operator_suspended_category__in
        type: string
      - description: nin filter for the "last_operator_suspended_category" field
        in: query
        name: last_operator_suspended_category__nin
        type: string
      - description: in filter for the "last_operator_suspended_updated_at" field
        in: query
        name: last_operator_suspended_updated_at__in
        type: string
      - description: nin filter for the "last_operator_suspended_updated_at" field
        in: query
        name: last_operator_suspended_updated_at__nin
        type: string
      - description: lte filter for the "last_operator_suspended_updated_at" field
        format: date-time
        in: query
        name: last_operator_suspended_updated_at__lte
        type: string
      - description: gte filter for the "last_operator_suspended_updated_at" field
        format: date-time
        in: query
        name: last_operator_suspended_updated_at__gte
        type: string
      - description: eq filter for the "system_suspended" field
        in: query
        name: system_suspended__eq
        type: boolean
      - description: neq filter for the "system_suspended" field
        in: query
        name: system_suspended__neq
        type: boolean
      - description: eq filter for the "last_system_suspended_category" field
        in: query
        name: last_system_suspended_category__eq
        type: string
      - description: neq filter for the "last_system_suspended_category" field
        in: query
        name: last_system_suspended_category__neq
        type: string
      - description: in filter for the "last_system_suspended_category" field
        in: query
        name: last_system_suspended_category__in
        type: string
      - description: nin filter for the "last_system_suspended_category" field
        in: query
        name: last_system_suspended_category__nin
        type: string
      - description: in filter for the "last_system_suspended_updated_at" field
        in: query
        name: last_system_suspended_updated_at__in
        type: string
      - description: nin filter for the "last_system_suspended_updated_at" field
        in: query
        name: last_system_suspended_updated_at__nin
        type: string
      - description: lte filter for the "last_system_suspended_updated_at" field
        format: date-time
        in: query
        name: last_system_suspended_updated_at__lte
        type: string
      - description: gte filter for the "last_system_suspended_updated_at" field
        format: date-time
        in: query
        name: last_system_suspended_updated_at__gte
        type: string
      - description: eq filter for the "account_id" field
        in: query
        name: account_id__eq
        type: string
      - description: neq filter for the "account_id" field
        in: query
        name: account_id__neq
        type: string
      - description: in filter for the "account_id" field
        in: query
        name: account_id__in
        type: string
      - description: nin filter for the "account_id" field
        in: query
        name: account_id__nin
        type: string
      - description: eq filter for the "auto_update" field
        in: query
        name: auto_update__eq
        type: boolean
      - description: neq filter for the "auto_update" field
        in: query
        name: auto_update__neq
        type: boolean
      - description: in filter for the "bootstrap_expiration_date" field
        in: query
        name: bootstrap_expiration_date__in
        type: string
      - description: nin filter for the "bootstrap_expiration_date" field
        in: query
        name: bootstrap_expiration_date__nin
        type: string
      - description: lte filter for the "bootstrap_expiration_date" field
        format: date
        in: query
        name: bootstrap_expiration_date__lte
        type: string
      - description: gte filter for the "bootstrap_expiration_date" field
        format: date
        in: query
        name: bootstrap_expiration_date__gte
        type: string
      - description: in filter for the "bootstrapped_timestamp" field
        in: query
        name: bootstrapped_timestamp__in
        type: string
      - description: nin filter for the "bootstrapped_timestamp" field
        in: query
        name: bootstrapped_timestamp__nin
        type: string
      - description: lte filter for the "bootstrapped_timestamp" field
        format: date-time
        in: query
        name: bootstrapped_timestamp__lte
        type: string
      - description: gte filter for the "bootstrapped_timestamp" field
        format: date-time
        in: query
        name: bootstrapped_timestamp__gte
        type: string
      - description: eq filter for the "ca_id" field
        in: query
        name: ca_id__eq
        type: string
      - description: neq filter for the "ca_id" field
        in: query
        name: ca_id__neq
        type: string
      - description: in filter for the "ca_id" field
        in: query
        name: ca_id__in
        type: string
      - description: nin filter for the "ca_id" field
        in: query
        name: ca_id__nin
        type: string
      - description: in filter for the "connector_expiration_date" field
        in: query
        name: connector_expiration_date__in
        type: string
      - description: nin filter for the "connector_expiration_date" field
        in: query
        name: connector_expiration_date__nin
        type: string
      - description: lte filter for the "connector_expiration_date" field
        format: date
        in: query
        name: connector_expiration_date__lte
        type: string
      - description: gte filter for the "connector_expiration_date" field
        format: date
        in: query
        name: connector_expiration_date__gte
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: eq filter for the "deployed_state" field
        in: query
        name: deployed_state__eq
        type: string
      - description: neq filter for the "deployed_state" field
        in: query
        name: deployed_state__neq
        type: string
      - description: in filter for the "deployed_state" field
        in: query
        name: deployed_state__in
        type: string
      - description: nin filter for the "deployed_state" field
        in: query
        name: deployed_state__nin
        type: string
      - description: eq filter for the "deployment" field
        in: query
        name: deployment__eq
        type: string
      - description: neq filter for the "deployment" field
        in: query
        name: deployment__neq
        type: string
      - description: in filter for the "deployment" field
        in: query
        name: deployment__in
        type: string
      - description: nin filter for the "deployment" field
        in: query
        name: deployment__nin
        type: string
      - description: eq filter for the "description" field
        in: query
        name: description__eq
        type: string
      - description: neq filter for the "description" field
        in: query
        name: description__neq
        type: string
      - description: in filter for the "description" field
        in: query
        name: description__in
        type: string
      - description: nin filter for the "description" field
        in: query
        name: description__nin
        type: string
      - description: eq filter for the "device_class" field
        in: query
        name: device_class__eq
        type: string
      - description: neq filter for the "device_class" field
        in: query
        name: device_class__neq
        type: string
      - description: in filter for the "device_class" field
        in: query
        name: device_class__in
        type: string
      - description: nin filter for the "device_class" field
        in: query
        name: device_class__nin
        type: string
      - description: eq filter for the "device_execution_mode" field
        in: query
        name: device_execution_mode__eq
        type: integer
      - description: neq filter for the "device_execution_mode" field
        in: query
        name: device_execution_mode__neq
        type: integer
      - description: in filter for the "device_execution_mode" field
        in: query
        name: device_execution_mode__in
        type: string
      - description: nin filter for the "device_execution_mode" field
        in: query
        name: device_execution_mode__nin
        type: string
      - description: eq filter for the "device_key" field
        in: query
        name: device_key__eq
        type: string
      - description: neq filter for the "device_key" field
        in: query
        name: device_key__neq
        type: string
      - description: in filter for the "device_key" field
        in: query
        name: device_key__in
        type: string
      - description: nin filter for the "device_key" field
        in: query
        name: device_key__nin
        type: string
      - description: eq filter for the "endpoint_name" field
        in: query
        name: endpoint_name__eq
        type: string
      - description: neq filter for the "endpoint_name" field
        in: query
        name: endpoint_name__neq
        type: string
      - description: in filter for the "endpoint_name" field
        in: query
        name: endpoint_name__in
        type: string
      - description: nin filter for the "endpoint_name" field
        in: query
        name: endpoint_name__nin
        type: string
      - description: eq filter for the "endpoint_type" field
        in: query
        name: endpoint_type__eq
        type: string
      - description: neq filter for the "endpoint_type" field
        in: query
        name: endpoint_type__neq
        type: string
      - description: in filter for the "endpoint_type" field
        in: query
        name: endpoint_type__in
        type: string
      - description: nin filter for the "endpoint_type" field
        in: query
        name: endpoint_type__nin
        type: string
      - description: in filter for the "enrolment_list_timestamp" field
        in: query
        name: enrolment_list_timestamp__in
        type: string
      - description: nin filter for the "enrolment_list_timestamp" field
        in: query
        name: enrolment_list_timestamp__nin
        type: string
      - description: lte filter for the "enrolment_list_timestamp" field
        format: date-time
        in: query
        name: enrolment_list_timestamp__lte
        type: string
      - description: gte filter for the "enrolment_list_timestamp" field
        format: date-time
        in: query
        name: enrolment_list_timestamp__gte
        type: string
      - description: eq filter for the "firmware_checksum" field
        in: query
        name: firmware_checksum__eq
        type: string
      - description: neq filter for the "firmware_checksum" field
        in: query
        name: firmware_checksum__neq
        type: string
      - description: in filter for the "firmware_checksum" field
        in: query
        name: firmware_checksum__in
        type: string
      - description: nin filter for the "firmware_checksum" field
        in: query
        name: firmware_checksum__nin
        type: string
      - description: eq filter for the "host_gateway" field
        in: query
        name: host_gateway__eq
        type: string
      - description: neq filter for the "host_gateway" field
        in: query
        name: host_gateway__neq
        type: string
      - description: in filter for the "host_gateway" field
        in: query
        name: host_gateway__in
        type: string
      - description: nin filter for the "host_gateway" field
        in: query
        name: host_gateway__nin
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "manifest" field
        in: query
        name: manifest__eq
        type: string
      - description: neq filter for the "manifest" field
        in: query
        name: manifest__neq
        type: string
      - description: in filter for the "manifest" field
        in: query
        name: manifest__in
        type: string
      - description: nin filter for the "manifest" field
        in: query
        name: manifest__nin
        type: string
      - description: in filter for the "manifest_timestamp" field
        in: query
        name: manifest_timestamp__in
        type: string
      - description: nin filter for the "manifest_timestamp" field
        in: query
        name: manifest_timestamp__nin
        type: string
      - description: lte filter for the "manifest_timestamp" field
        format: date-time
        in: query
        name: manifest_timestamp__lte
        type: string
      - description: gte filter for the "manifest_timestamp" field
        format: date-time
        in: query
        name: manifest_timestamp__gte
        type: string
      - description: eq filter for the "mechanism" field
        in: query
        name: mechanism__eq
        type: string
      - description: neq filter for the "mechanism" field
        in: query
        name: mechanism__neq
        type: string
      - description: in filter for the "mechanism" field
        in: query
        name: mechanism__in
        type: string
      - description: nin filter for the "mechanism" field
        in: query
        name: mechanism__nin
        type: string
      - description: eq filter for the "mechanism_url" field
        in: query
        name: mechanism_url__eq
        type: string
      - description: neq filter for the "mechanism_url" field
        in: query
        name: mechanism_url__neq
        type: string
      - description: in filter for the "mechanism_url" field
        in: query
        name: mechanism_url__in
        type: string
      - description: nin filter for the "mechanism_url" field
        in: query
        name: mechanism_url__nin
        type: string
      - description: eq filter for the "name" field
        in: query
        name: name__eq
        type: string
      - description: neq filter for the "name" field
        in: query
        name: name__neq
        type: string
      - description: in filter for the "name" field
        in: query
        name: name__in
        type: string
      - description: nin filter for the "name" field
        in: query
        name: name__nin
        type: string
      - description: eq filter for the "net_id" field
        in: query
        name: net_id__eq
        type: string
      - description: neq filter for the "net_id" field
        in: query
        name: net_id__neq
        type: string
      - description: in filter for the "net_id" field
        in: query
        name: net_id__in
        type: string
      - description: nin filter for the "net_id" field
        in: query
        name: net_id__nin
        type: string
      - description: eq filter for the "serial_number" field
        in: query
        name: serial_number__eq
        type: string
      - description: neq filter for the "serial_number" field
        in: query
        name: serial_number__neq
        type: string
      - description: in filter for the "serial_number" field
        in: query
        name: serial_number__in
        type: string
      - description: nin filter for the "serial_number" field
        in: query
        name: serial_number__nin
        type: string
      - description: eq filter for the "state" field
        in: query
        name: state__eq
        type: string
      - description: neq filter for the "state" field
        in: query
        name: state__neq
        type: string
      - description: in filter for the "state" field
        in: query
        name: state__in
        type: string
      - description: nin filter for the "state" field
        in: query
        name: state__nin
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      - description: eq filter for the "vendor_id" field
        in: query
        name: vendor_id__eq
        type: string
      - description: neq filter for the "vendor_id" field
        in: query
        name: vendor_id__neq
        type: string
      - description: in filter for the "vendor_id" field
        in: query
        name: vendor_id__in
        type: string
      - description: nin filter for the "vendor_id" field
        in: query
        name: vendor_id__nin
        type: string
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/DevicePage'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a page of devices.
      tags:
      - Device directory - groups
      x-filter: &id031
        account_id:
        - eq
        - neq
        - in
        - nin
        auto_update:
        - eq
        - neq
        bootstrap_expiration_date:
        - in
        - nin
        - lte
        - gte
        bootstrapped_timestamp:
        - in
        - nin
        - lte
        - gte
        ca_id:
        - eq
        - neq
        - in
        - nin
        connector_expiration_date:
        - in
        - nin
        - lte
        - gte
        created_at:
        - in
        - nin
        - lte
        - gte
        deployed_state:
        - eq
        - neq
        - in
        - nin
        deployment:
        - eq
        - neq
        - in
        - nin
        description:
        - eq
        - neq
        - in
        - nin
        device_class:
        - eq
        - neq
        - in
        - nin
        device_execution_mode:
        - eq
        - neq
        - in
        - nin
        device_key:
        - eq
        - neq
        - in
        - nin
        endpoint_name:
        - eq
        - neq
        - in
        - nin
        endpoint_type:
        - eq
        - neq
        - in
        - nin
        enrolment_list_timestamp:
        - in
        - nin
        - lte
        - gte
        firmware_checksum:
        - eq
        - neq
        - in
        - nin
        host_gateway:
        - eq
        - neq
        - in
        - nin
        id:
        - eq
        - neq
        - in
        - nin
        last_operator_suspended_category:
        - eq
        - neq
        - in
        - nin
        last_operator_suspended_updated_at:
        - in
        - nin
        - lte
        - gte
        last_system_suspended_category:
        - eq
        - neq
        - in
        - nin
        last_system_suspended_updated_at:
        - in
        - nin
        - lte
        - gte
        lifecycle_status:
        - eq
        - neq
        - in
        - nin
        manifest:
        - eq
        - neq
        - in
        - nin
        manifest_timestamp:
        - in
        - nin
        - lte
        - gte
        mechanism:
        - eq
        - neq
        - in
        - nin
        mechanism_url:
        - eq
        - neq
        - in
        - nin
        name:
        - eq
        - neq
        - in
        - nin
        net_id:
        - eq
        - neq
        - in
        - nin
        operator_suspended:
        - eq
        - neq
        serial_number:
        - eq
        - neq
        - in
        - nin
        state:
        - eq
        - neq
        - in
        - nin
        system_suspended:
        - eq
        - neq
        updated_at:
        - in
        - nin
        - lte
        - gte
        vendor_id:
        - eq
        - neq
        - in
        - nin
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-groups/{device-group-id}/devices/add/:
    post:
      description: Add one device to a group. A device can be in multiple groups.
      operationId: Group_members_add
      parameters:
      - description: The ID of the group.
        in: path
        name: device-group-id
        required: true
        type: string
      - description: Body of the request.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeviceGroupManipulation'
      responses:
        '204':
          description: Success - device added.
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add a device to a group.
      tags:
      - Device directory - groups
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-groups/{device-group-id}/devices/remove/:
    post:
      description: Remove one device from a group.
      operationId: Group_members_remove
      parameters:
      - description: The ID of the group.
        in: path
        name: device-group-id
        required: true
        type: string
      - description: Body of the request.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeviceGroupManipulation'
      responses:
        '204':
          description: Success - device removed.
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove a device from a group.
      tags:
      - Device directory - groups
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-logs:
    get:
      description: 'List logs for all devices based on a combination of filters.


        **Example usage:**

        ```

        curl -X GET \

        -H ''Authorization: Bearer <valid access token>'' \

        https://api.us-east-1.mbedcloud.com/v3/device-logs

        ```

        '
      operationId: ListGatewayDeviceLogs
      parameters:
      - description: The device ID for which to retrieve logs.
        in: query
        name: device_id__in
        required: false
        type: string
      - default: 100
        description: Limit the number of returned results. The default value is 100.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        required: false
        type: integer
      - description: The entity ID to fetch after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: DESC
        description: 'Record order. Acceptable values: ASC, DESC.'
        enum: &id032
        - ASC
        - DESC
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count'
        in: query
        name: include
        required: false
        type: string
      - description: RFC 3339 UTC timestamp range upper limit.
        format: date-time
        in: query
        name: timestamp__lte
        required: false
        type: string
      - description: RFC 3339 UTC timestamp range lower limit.
        format: date-time
        in: query
        name: timestamp__gte
        required: false
        type: string
      - description: Name of the application on a device that generated logs.
        in: query
        name: app_name__eq
        required: false
        type: string
      - description: Device log type filter.
        in: query
        name: type__eq
        required: false
        type: string
      - description: Device log message filter.
        in: query
        name: message__eq
        required: false
        type: string
      - description: Minimum severity level of logs to retrieve.
        enum: &id033
        - DEBUG
        - TRACE
        - INFO
        - WARNING
        - ERROR
        - CRITICAL
        in: query
        name: level__gte
        required: false
        type: string
      responses:
        '200':
          description: Retrieved logs successfully
          schema:
            $ref: '#/definitions/LogsPage'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List all device logs based on filters
      tags:
      - Gateway Logs Public API
      x-filter:
        app_name:
        - eq
        device_id:
        - in
        level:
        - gte
        message:
        - eq
        timestamp:
        - lte
        - gte
        type:
        - eq
      x-origin: /home/circleci/project/gateway/public/logs.yaml
  /v3/device-logs/{device_log_id}:
    get:
      description: 'Retrieve a device log from a device by log ID.


        **Example usage:**

        ```

        curl -X GET \

        -H ''Authorization: Bearer <valid access token>'' \

        https://api.us-east-1.mbedcloud.com/v3/device-logs/(device_log_id)

        ```

        '
      operationId: GetDeviceLogBasedOnLogID
      parameters:
      - description: The ID of the device log.
        in: path
        name: device_log_id
        required: true
        type: string
      responses:
        '200':
          description: Retrieved result successfully
          schema:
            $ref: '#/definitions/Log'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Retrieve a device log by ID.
      tags:
      - Gateway Logs Public API
      x-origin: /home/circleci/project/gateway/public/logs.yaml
  /v3/device-queries/:
    get:
      description: List all device queries.
      operationId: Device_Query_list
      parameters:
      - description: How many objects to retrieve in the page (2-1000). Limit values
          outside of this range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data.\n\
          \n##### Filtering\n\n`?filter={URL encoded query string}`\n\nThe query string\
          \ is made up of key/value pairs separated by ampersands. So for a query\
          \ of\n`key1=value1&key2=value2&key3=value3`, this would be encoded as: `?filter=key1%3Dvalue1%26key2%3Dvalue2%26key3%3Dvalue3`.\n\
          \n###### Filterable fields\n\nThe below table lists all filterable fields:\n\
          \n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>= / __eq\
          \ / __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte / __gte</th>\n\
          \    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>created_at</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n  \
          \  </tr>\n    <tr>\n      <td>etag</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n      <td>id</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n  \
          \  </tr>\n    <tr>\n      <td>name</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>query</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n \
          \   </tr>\n    <tr>\n      <td>updated_at</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n  </tbody>\n</table>\n\
          &nbsp;\n\nThe examples below show the queries in *unencoded* form.\n\n######\
          \ By device query properties (all properties are filterable):\n\nFor example:\n\
          `description={value}`\n\n###### On date-time fields:\n\nDate-time fields\
          \ should be specified in UTC RFC3339 format `YYYY-MM-DDThh:mm:ss.msZ`. There\
          \ are three permitted\nvariations:\n\n* UTC RFC3339 with milliseconds, for\
          \ example, 2016-11-30T16:25:12.1234Z.\n* UTC RFC3339 without milliseconds,\
          \ for example, 2016-11-30T16:25:12Z.\n* UTC RFC3339 shortened - without\
          \ milliseconds and punctuation, for example, 20161130T162512Z.\n\nDate-time\
          \ filtering supports three operators:\n\n* Equality.\n* Greater than or\
          \ equal to &ndash; field name suffixed with `__gte`.\n* Less than or equal\
          \ to &ndash; field name suffixed with `__lte`.\n\nLower and upper limits\
          \ to a date-time range may be specified by including both the `__gte` and\
          \ `__lte` forms in\nthe filter: `{field name}[|__lte|__gte]={UTC RFC3339\
          \ date-time}`.\n\n##### Multi-field example\n\n`query_id=0158d38771f70000000000010010038c&created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \nEncoded:\n\n`filter=query_id%3D0158d38771f70000000000010010038c%26created_at__gte%3D2016-11-30T16%3A25%3A12.1234Z%26created_at__lte%3D2016-11-30T00%3A00%3A00Z`\n\
          \n##### Filtering with filter operators\n\nString field filtering supports\
          \ the following operators:\n\n* Equality: `__eq`.\n* Non-equality: `__neq`.\n\
          * In : `__in`.\n* Not in: `__nin`.\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n`name__nin=query1,query2`"
        in: query
        name: filter
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "name" field
        in: query
        name: name__eq
        type: string
      - description: neq filter for the "name" field
        in: query
        name: name__neq
        type: string
      - description: in filter for the "name" field
        in: query
        name: name__in
        type: string
      - description: nin filter for the "name" field
        in: query
        name: name__nin
        type: string
      - description: eq filter for the "query" field
        in: query
        name: query__eq
        type: string
      - description: neq filter for the "query" field
        in: query
        name: query__neq
        type: string
      - description: in filter for the "query" field
        in: query
        name: query__in
        type: string
      - description: nin filter for the "query" field
        in: query
        name: query__nin
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      responses:
        '200':
          description: Request successful.
          schema:
            $ref: '#/definitions/DeviceQueryPage'
        '400':
          description: Bad request.
        '401':
          description: Not authenticated.
        '404':
          description: Unable to find page.
      summary: List device queries.
      tags:
      - Device directory - device queries
      x-filter:
        created_at:
        - in
        - nin
        - lte
        - gte
        id:
        - eq
        - neq
        - in
        - nin
        name:
        - eq
        - neq
        - in
        - nin
        query:
        - eq
        - neq
        - in
        - nin
        updated_at:
        - in
        - nin
        - lte
        - gte
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    post:
      description: Create a new device query.
      operationId: Device_Query_create
      parameters:
      - in: body
        name: Device
        required: true
        schema:
          $ref: '#/definitions/DeviceQueryPostPutRequest'
      responses:
        '201':
          description: Update device query created.
          schema:
            $ref: '#/definitions/DeviceQuery'
        '400':
          description: 'Validation error: The data used to create the device query
            did not validate.'
        '401':
          description: Not authenticated.
      summary: Create a device query.
      tags:
      - Device directory - device queries
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/device-queries/{query_id}/:
    delete:
      description: Delete a device query.
      operationId: Device_Query_destroy
      parameters:
      - in: path
        name: query_id
        required: true
        type: string
      responses:
        '204':
          description: Update device query deleted.
        '400':
          description: 'Validation error: The data used to create the device query
            did not validate.'
        '401':
          description: Not authenticated.
        '404':
          description: Unable to delete update device query because it can't be found.
      summary: Delete a device query.
      tags:
      - Device directory - device queries
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    get:
      description: Retrieve a specific device query.
      operationId: Device_Query_retrieve
      parameters:
      - in: path
        name: query_id
        required: true
        type: string
      responses:
        '200':
          description: Retrieved result successfully.
          schema:
            $ref: '#/definitions/DeviceQuery'
        '400':
          description: 'Validation error: The data used to create the device query
            did not validate.'
        '401':
          description: Not authenticated.
        '404':
          description: Unable to find device query.
      summary: Retrieve a device query.
      tags:
      - Device directory - device queries
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    put:
      description: Update a specifc device query.
      operationId: Device_Query_update
      parameters:
      - in: path
        name: query_id
        required: true
        type: string
      - description: Device query update object.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeviceQueryPostPutRequest'
      responses:
        '200':
          description: Device updated.
          schema:
            $ref: '#/definitions/DeviceQuery'
        '400':
          description: 'Validation error: The data used to update the device query
            did not validate.'
        '401':
          description: Not authenticated.
        '404':
          description: Unable to update device query because it can't be found.
      summary: Update a device query.
      tags:
      - Device directory - device queries
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/devicelog/:
    get:
      deprecated: true
      description: 'DEPRECATED: This API is replaced with `/v3/device-events/`.'
      operationId: Device_Log_list
      parameters:
      - description: How many objects to retrieve in the page (2-1000). Limit values
          outside of this range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data.\n\
          \n##### Filtering\n\n`?filter={URL encoded query string}`\n\nThe query string\
          \ is made up of key/value pairs separated by ampersands. So for a query\
          \ of\n`key1=value1&key2=value2&key3=value3`, this would be encoded as `?filter=key1%3Dvalue1%26key2%3Dvalue2%26key3%3Dvalue3`.\n\
          \n###### Filterable fields:\n\nThe below table lists all filterable fields:\n\
          \n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>= / __eq\
          \ / __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte / __gte</th>\n\
          \    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>date_time</td>\n  \
          \    <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n   \
          \ </tr>\n    <tr>\n      <td>description</td>\n      <td>\u2713</td>\n \
          \     <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n    \
          \  <td>id</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n\
          \    </tr>\n    <tr>\n      <td>device_id</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n   \
          \   <td>event_type</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>state_change</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n \
          \   </tr>\n  </tbody>\n</table>\n&nbsp;\n\nThe examples below show the queries\
          \ in *unencoded* form.\n\n###### By id:\n\n`id={id}`\n\n###### By state\
          \ change:\n\n`state_change=[True|False]`\n\n###### By event type:\n\n`event_type={value}`\n\
          \n###### On date-time fields:\n\nDate-time fields should be specified in\
          \ UTC RFC3339 format `YYYY-MM-DDThh:mm:ss.msZ`. There are three permitted\n\
          variations:\n\n* UTC RFC3339 with milliseconds, for example, 2016-11-30T16:25:12.1234Z.\n\
          * UTC RFC3339 without milliseconds, for example, 2016-11-30T16:25:12Z.\n\
          * UTC RFC3339 shortened - without milliseconds and punctuation, for example,\
          \ 20161130T162512Z.\n\nDate-time filtering supports three operators:\n\n\
          * Equality.\n* Greater than or equal to &ndash; field name suffixed with\
          \ `__gte`.\n* Less than or equal to &ndash; field name suffixed with `__lte`.\n\
          \nLower and upper limits to a date-time range may be specified by including\
          \ both the `__gte` and `__lte` forms in\nthe filter:\n\n`{field name}[|__lte|__gte]={UTC\
          \ RFC3339 date-time}`\n\n##### Multi-field example\n\n`id=0158d38771f70000000000010010038c&state_change=True&date_time__gte=2016-11-30T16:25:12.1234Z`\n\
          \nEncoded:\n\n`?filter=id%3D0158d38771f70000000000010010038c%26state_change%3DTrue%26date_time__gte%3D2016-11-30T16%3A25%3A12.1234Z`\n\
          \n##### Filtering with filter operators\n\nString field filtering supports\
          \ the following operators:\n\n* Equality: `__eq`.\n* Non-equality: `__neq`.\n\
          * In : `__in`.\n* Not in: `__nin`.\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n`event_type__in=update.device.device-created,update.device.device-updated`."
        in: query
        name: filter
        type: string
      - description: in filter for the "date_time" field
        in: query
        name: date_time__in
        type: string
      - description: nin filter for the "date_time" field
        in: query
        name: date_time__nin
        type: string
      - description: lte filter for the "date_time" field
        format: date-time
        in: query
        name: date_time__lte
        type: string
      - description: gte filter for the "date_time" field
        format: date-time
        in: query
        name: date_time__gte
        type: string
      - description: eq filter for the "description" field
        in: query
        name: description__eq
        type: string
      - description: neq filter for the "description" field
        in: query
        name: description__neq
        type: string
      - description: in filter for the "description" field
        in: query
        name: description__in
        type: string
      - description: nin filter for the "description" field
        in: query
        name: description__nin
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "device_id" field
        in: query
        name: device_id__eq
        type: string
      - description: neq filter for the "device_id" field
        in: query
        name: device_id__neq
        type: string
      - description: in filter for the "device_id" field
        in: query
        name: device_id__in
        type: string
      - description: nin filter for the "device_id" field
        in: query
        name: device_id__nin
        type: string
      - description: eq filter for the "event_type" field
        in: query
        name: event_type__eq
        type: string
      - description: neq filter for the "event_type" field
        in: query
        name: event_type__neq
        type: string
      - description: in filter for the "event_type" field
        in: query
        name: event_type__in
        type: string
      - description: nin filter for the "event_type" field
        in: query
        name: event_type__nin
        type: string
      - description: eq filter for the "state_change" field
        in: query
        name: state_change__eq
        type: boolean
      - description: neq filter for the "state_change" field
        in: query
        name: state_change__neq
        type: boolean
      - description: in filter for the "state_change" field
        in: query
        name: state_change__in
        type: string
      - description: nin filter for the "state_change" field
        in: query
        name: state_change__nin
        type: string
      responses:
        '200':
          description: Request successful.
          schema:
            $ref: '#/definitions/DeviceEventPage'
        '400':
          description: Bad request.
        '401':
          description: Not authenticated.
        '404':
          description: Unable to find page.
      summary: 'DEPRECATED: List all device events.'
      tags:
      - Device directory - events
      x-filter:
        date_time:
        - in
        - nin
        - lte
        - gte
        description:
        - eq
        - neq
        - in
        - nin
        device_id:
        - eq
        - neq
        - in
        - nin
        event_type:
        - eq
        - neq
        - in
        - nin
        id:
        - eq
        - neq
        - in
        - nin
        state_change:
        - eq
        - neq
        - in
        - nin
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/devicelog/{device_event_id}/:
    get:
      deprecated: true
      description: 'DEPRECATED: This API is replaced by `/v3/device-events/` and `/v3/device-events/{device_event_id}/`.'
      operationId: Device_Log_retrieve
      parameters:
      - in: path
        name: device_event_id
        required: true
        type: string
      responses:
        '200':
          description: Retrieved result successfully.
          schema:
            $ref: '#/definitions/DeviceEventData'
        '400':
          description: Bad request.
        '401':
          description: Not authenticated.
        '404':
          description: Unable to find device.
      summary: 'DEPRECATED: Retrieve a device event.'
      tags:
      - Device directory - events
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/devices/:
    get:
      description: 'List all devices enrolled to Device Management for the account.


        **Example:**

        Following example filters devices according to state field and returns only
        devices in ''registered'' state:

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/devices?filter=state%3Dregistered
        \

        -H ''Authorization: Bearer <API key>''

        ```'
      operationId: Device_list
      parameters:
      - description: How many objects to retrieve in the page (2-1000). Limit values
          outside of this range are set to the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'URL encoded query string parameter to filter returned data.


          ##### Filtering

          ```?filter={URL encoded query string}```


          The query string is made up of key/value pairs separated by ampersands.
          So for a query of

          ```key1=value1&key2=value2&key3=value3``` this would be encoded as follows:

          ```?filter=key1%3Dvalue1%26key2%3Dvalue2%26key3%3Dvalue3```

          The examples below show the queries in *unencoded* form.


          ###### By device properties (all properties are filterable):

          ```state=[unenrolled|cloud_enrolling|bootstrapped|registered]```


          ```device_class={value}```


          ###### On date-time fields:

          Date-time fields should be specified in UTC RFC3339 format ```YYYY-MM-DDThh:mm:ss.msZ```.
          There are three permitted

          variations:


          * UTC RFC3339 with milliseconds e.g. 2016-11-30T16:25:12.1234Z

          * UTC RFC3339 without milliseconds e.g. 2016-11-30T16:25:12Z

          * UTC RFC3339 shortened - without milliseconds and punctuation e.g. 20161130T162512Z


          Date-time filtering supports three operators:


          * equality

          * greater than or equal to &ndash; field name suffixed with ```__gte```

          * less than or equal to &ndash; field name suffixed with ```__lte```


          Lower and upper limits to a date-time range may be specified by including
          both the ```__gte``` and ```__lte``` forms in

          the filter.


          ```{field name}[|__lte|__gte]={UTC RFC3339 date-time}```


          ###### On device custom attributes:


          ```custom_attributes__{param}={value}```

          ```custom_attributes__tag=TAG1```


          ###### On device component attributes:


          ```component_attributes__{name}={version}```

          ```component_attributes__ble=1.2.3```


          ##### Multi-field example


          ```state=bootstrapped&created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z```


          Encoded:


          ```?filter=state%3Dbootstrapped%26created_at__gte%3D2016-11-30T16%3A25%3A12.1234Z%26created_at__lte%3D2016-11-30T00%3A00%3A00Z```


          ##### Filtering with filter operators


          String field filtering supports the following operators:


          * equality: `__eq`

          * non-equality: `__neq`

          * in : `__in`

          * not in: `__nin`


          For `__in` and `__nin` filters list of parameters must be comma-separated:


          `state__nin=unenrolled,dergistered`'
        in: query
        name: filter
        type: string
      - description: 'Comma-separated list of data fields to return. Currently supported:
          `total_count`.'
        in: query
        name: include
        type: string
      - description: eq filter for the "lifecycle_status" field
        in: query
        name: lifecycle_status__eq
        type: string
      - description: neq filter for the "lifecycle_status" field
        in: query
        name: lifecycle_status__neq
        type: string
      - description: in filter for the "lifecycle_status" field
        in: query
        name: lifecycle_status__in
        type: string
      - description: nin filter for the "lifecycle_status" field
        in: query
        name: lifecycle_status__nin
        type: string
      - description: eq filter for the "operator_suspended" field
        in: query
        name: operator_suspended__eq
        type: boolean
      - description: neq filter for the "operator_suspended" field
        in: query
        name: operator_suspended__neq
        type: boolean
      - description: eq filter for the "last_operator_suspended_category" field
        in: query
        name: last_operator_suspended_category__eq
        type: string
      - description: neq filter for the "last_operator_suspended_category" field
        in: query
        name: last_operator_suspended_category__neq
        type: string
      - description: in filter for the "last_operator_suspended_category" field
        in: query
        name: last_operator_suspended_category__in
        type: string
      - description: nin filter for the "last_operator_suspended_category" field
        in: query
        name: last_operator_suspended_category__nin
        type: string
      - description: in filter for the "last_operator_suspended_updated_at" field
        in: query
        name: last_operator_suspended_updated_at__in
        type: string
      - description: nin filter for the "last_operator_suspended_updated_at" field
        in: query
        name: last_operator_suspended_updated_at__nin
        type: string
      - description: lte filter for the "last_operator_suspended_updated_at" field
        format: date-time
        in: query
        name: last_operator_suspended_updated_at__lte
        type: string
      - description: gte filter for the "last_operator_suspended_updated_at" field
        format: date-time
        in: query
        name: last_operator_suspended_updated_at__gte
        type: string
      - description: eq filter for the "system_suspended" field
        in: query
        name: system_suspended__eq
        type: boolean
      - description: neq filter for the "system_suspended" field
        in: query
        name: system_suspended__neq
        type: boolean
      - description: eq filter for the "last_system_suspended_category" field
        in: query
        name: last_system_suspended_category__eq
        type: string
      - description: neq filter for the "last_system_suspended_category" field
        in: query
        name: last_system_suspended_category__neq
        type: string
      - description: in filter for the "last_system_suspended_category" field
        in: query
        name: last_system_suspended_category__in
        type: string
      - description: nin filter for the "last_system_suspended_category" field
        in: query
        name: last_system_suspended_category__nin
        type: string
      - description: in filter for the "last_system_suspended_updated_at" field
        in: query
        name: last_system_suspended_updated_at__in
        type: string
      - description: nin filter for the "last_system_suspended_updated_at" field
        in: query
        name: last_system_suspended_updated_at__nin
        type: string
      - description: lte filter for the "last_system_suspended_updated_at" field
        format: date-time
        in: query
        name: last_system_suspended_updated_at__lte
        type: string
      - description: gte filter for the "last_system_suspended_updated_at" field
        format: date-time
        in: query
        name: last_system_suspended_updated_at__gte
        type: string
      - description: eq filter for the "account_id" field
        in: query
        name: account_id__eq
        type: string
      - description: neq filter for the "account_id" field
        in: query
        name: account_id__neq
        type: string
      - description: in filter for the "account_id" field
        in: query
        name: account_id__in
        type: string
      - description: nin filter for the "account_id" field
        in: query
        name: account_id__nin
        type: string
      - description: eq filter for the "auto_update" field
        in: query
        name: auto_update__eq
        type: boolean
      - description: neq filter for the "auto_update" field
        in: query
        name: auto_update__neq
        type: boolean
      - description: in filter for the "bootstrap_expiration_date" field
        in: query
        name: bootstrap_expiration_date__in
        type: string
      - description: nin filter for the "bootstrap_expiration_date" field
        in: query
        name: bootstrap_expiration_date__nin
        type: string
      - description: lte filter for the "bootstrap_expiration_date" field
        format: date
        in: query
        name: bootstrap_expiration_date__lte
        type: string
      - description: gte filter for the "bootstrap_expiration_date" field
        format: date
        in: query
        name: bootstrap_expiration_date__gte
        type: string
      - description: in filter for the "bootstrapped_timestamp" field
        in: query
        name: bootstrapped_timestamp__in
        type: string
      - description: nin filter for the "bootstrapped_timestamp" field
        in: query
        name: bootstrapped_timestamp__nin
        type: string
      - description: lte filter for the "bootstrapped_timestamp" field
        format: date-time
        in: query
        name: bootstrapped_timestamp__lte
        type: string
      - description: gte filter for the "bootstrapped_timestamp" field
        format: date-time
        in: query
        name: bootstrapped_timestamp__gte
        type: string
      - description: eq filter for the "ca_id" field
        in: query
        name: ca_id__eq
        type: string
      - description: neq filter for the "ca_id" field
        in: query
        name: ca_id__neq
        type: string
      - description: in filter for the "ca_id" field
        in: query
        name: ca_id__in
        type: string
      - description: nin filter for the "ca_id" field
        in: query
        name: ca_id__nin
        type: string
      - description: in filter for the "connector_expiration_date" field
        in: query
        name: connector_expiration_date__in
        type: string
      - description: nin filter for the "connector_expiration_date" field
        in: query
        name: connector_expiration_date__nin
        type: string
      - description: lte filter for the "connector_expiration_date" field
        format: date
        in: query
        name: connector_expiration_date__lte
        type: string
      - description: gte filter for the "connector_expiration_date" field
        format: date
        in: query
        name: connector_expiration_date__gte
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: eq filter for the "deployed_state" field
        in: query
        name: deployed_state__eq
        type: string
      - description: neq filter for the "deployed_state" field
        in: query
        name: deployed_state__neq
        type: string
      - description: in filter for the "deployed_state" field
        in: query
        name: deployed_state__in
        type: string
      - description: nin filter for the "deployed_state" field
        in: query
        name: deployed_state__nin
        type: string
      - description: eq filter for the "deployment" field
        in: query
        name: deployment__eq
        type: string
      - description: neq filter for the "deployment" field
        in: query
        name: deployment__neq
        type: string
      - description: in filter for the "deployment" field
        in: query
        name: deployment__in
        type: string
      - description: nin filter for the "deployment" field
        in: query
        name: deployment__nin
        type: string
      - description: eq filter for the "description" field
        in: query
        name: description__eq
        type: string
      - description: neq filter for the "description" field
        in: query
        name: description__neq
        type: string
      - description: in filter for the "description" field
        in: query
        name: description__in
        type: string
      - description: nin filter for the "description" field
        in: query
        name: description__nin
        type: string
      - description: eq filter for the "device_class" field
        in: query
        name: device_class__eq
        type: string
      - description: neq filter for the "device_class" field
        in: query
        name: device_class__neq
        type: string
      - description: in filter for the "device_class" field
        in: query
        name: device_class__in
        type: string
      - description: nin filter for the "device_class" field
        in: query
        name: device_class__nin
        type: string
      - description: eq filter for the "device_execution_mode" field
        in: query
        name: device_execution_mode__eq
        type: integer
      - description: neq filter for the "device_execution_mode" field
        in: query
        name: device_execution_mode__neq
        type: integer
      - description: in filter for the "device_execution_mode" field
        in: query
        name: device_execution_mode__in
        type: string
      - description: nin filter for the "device_execution_mode" field
        in: query
        name: device_execution_mode__nin
        type: string
      - description: eq filter for the "device_key" field
        in: query
        name: device_key__eq
        type: string
      - description: neq filter for the "device_key" field
        in: query
        name: device_key__neq
        type: string
      - description: in filter for the "device_key" field
        in: query
        name: device_key__in
        type: string
      - description: nin filter for the "device_key" field
        in: query
        name: device_key__nin
        type: string
      - description: eq filter for the "endpoint_name" field
        in: query
        name: endpoint_name__eq
        type: string
      - description: neq filter for the "endpoint_name" field
        in: query
        name: endpoint_name__neq
        type: string
      - description: in filter for the "endpoint_name" field
        in: query
        name: endpoint_name__in
        type: string
      - description: nin filter for the "endpoint_name" field
        in: query
        name: endpoint_name__nin
        type: string
      - description: eq filter for the "endpoint_type" field
        in: query
        name: endpoint_type__eq
        type: string
      - description: neq filter for the "endpoint_type" field
        in: query
        name: endpoint_type__neq
        type: string
      - description: in filter for the "endpoint_type" field
        in: query
        name: endpoint_type__in
        type: string
      - description: nin filter for the "endpoint_type" field
        in: query
        name: endpoint_type__nin
        type: string
      - description: in filter for the "enrolment_list_timestamp" field
        in: query
        name: enrolment_list_timestamp__in
        type: string
      - description: nin filter for the "enrolment_list_timestamp" field
        in: query
        name: enrolment_list_timestamp__nin
        type: string
      - description: lte filter for the "enrolment_list_timestamp" field
        format: date-time
        in: query
        name: enrolment_list_timestamp__lte
        type: string
      - description: gte filter for the "enrolment_list_timestamp" field
        format: date-time
        in: query
        name: enrolment_list_timestamp__gte
        type: string
      - description: eq filter for the "firmware_checksum" field
        in: query
        name: firmware_checksum__eq
        type: string
      - description: neq filter for the "firmware_checksum" field
        in: query
        name: firmware_checksum__neq
        type: string
      - description: in filter for the "firmware_checksum" field
        in: query
        name: firmware_checksum__in
        type: string
      - description: nin filter for the "firmware_checksum" field
        in: query
        name: firmware_checksum__nin
        type: string
      - description: eq filter for the "host_gateway" field
        in: query
        name: host_gateway__eq
        type: string
      - description: neq filter for the "host_gateway" field
        in: query
        name: host_gateway__neq
        type: string
      - description: in filter for the "host_gateway" field
        in: query
        name: host_gateway__in
        type: string
      - description: nin filter for the "host_gateway" field
        in: query
        name: host_gateway__nin
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "manifest" field
        in: query
        name: manifest__eq
        type: string
      - description: neq filter for the "manifest" field
        in: query
        name: manifest__neq
        type: string
      - description: in filter for the "manifest" field
        in: query
        name: manifest__in
        type: string
      - description: nin filter for the "manifest" field
        in: query
        name: manifest__nin
        type: string
      - description: in filter for the "manifest_timestamp" field
        in: query
        name: manifest_timestamp__in
        type: string
      - description: nin filter for the "manifest_timestamp" field
        in: query
        name: manifest_timestamp__nin
        type: string
      - description: lte filter for the "manifest_timestamp" field
        format: date-time
        in: query
        name: manifest_timestamp__lte
        type: string
      - description: gte filter for the "manifest_timestamp" field
        format: date-time
        in: query
        name: manifest_timestamp__gte
        type: string
      - description: eq filter for the "mechanism" field
        in: query
        name: mechanism__eq
        type: string
      - description: neq filter for the "mechanism" field
        in: query
        name: mechanism__neq
        type: string
      - description: in filter for the "mechanism" field
        in: query
        name: mechanism__in
        type: string
      - description: nin filter for the "mechanism" field
        in: query
        name: mechanism__nin
        type: string
      - description: eq filter for the "mechanism_url" field
        in: query
        name: mechanism_url__eq
        type: string
      - description: neq filter for the "mechanism_url" field
        in: query
        name: mechanism_url__neq
        type: string
      - description: in filter for the "mechanism_url" field
        in: query
        name: mechanism_url__in
        type: string
      - description: nin filter for the "mechanism_url" field
        in: query
        name: mechanism_url__nin
        type: string
      - description: eq filter for the "name" field
        in: query
        name: name__eq
        type: string
      - description: neq filter for the "name" field
        in: query
        name: name__neq
        type: string
      - description: in filter for the "name" field
        in: query
        name: name__in
        type: string
      - description: nin filter for the "name" field
        in: query
        name: name__nin
        type: string
      - description: eq filter for the "net_id" field
        in: query
        name: net_id__eq
        type: string
      - description: neq filter for the "net_id" field
        in: query
        name: net_id__neq
        type: string
      - description: in filter for the "net_id" field
        in: query
        name: net_id__in
        type: string
      - description: nin filter for the "net_id" field
        in: query
        name: net_id__nin
        type: string
      - description: eq filter for the "serial_number" field
        in: query
        name: serial_number__eq
        type: string
      - description: neq filter for the "serial_number" field
        in: query
        name: serial_number__neq
        type: string
      - description: in filter for the "serial_number" field
        in: query
        name: serial_number__in
        type: string
      - description: nin filter for the "serial_number" field
        in: query
        name: serial_number__nin
        type: string
      - description: eq filter for the "state" field
        in: query
        name: state__eq
        type: string
      - description: neq filter for the "state" field
        in: query
        name: state__neq
        type: string
      - description: in filter for the "state" field
        in: query
        name: state__in
        type: string
      - description: nin filter for the "state" field
        in: query
        name: state__nin
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      - description: eq filter for the "vendor_id" field
        in: query
        name: vendor_id__eq
        type: string
      - description: neq filter for the "vendor_id" field
        in: query
        name: vendor_id__neq
        type: string
      - description: in filter for the "vendor_id" field
        in: query
        name: vendor_id__in
        type: string
      - description: nin filter for the "vendor_id" field
        in: query
        name: vendor_id__nin
        type: string
      responses:
        '200':
          description: Request successful.
          schema:
            $ref: '#/definitions/DevicePage'
        '400':
          description: Bad request.
        '401':
          description: Not authenticated.
        '404':
          description: Unable to find page.
      summary: List all devices.
      tags:
      - Device directory - devices
      x-filter: *id031
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    post:
      description: Create a new device in Device Management. Usually you do not need
        to create a device this way, as it is automatically created when it bootstraps
        or connects to Device Management.
      operationId: Device_create
      parameters:
      - in: body
        name: Device
        required: true
        schema:
          $ref: '#/definitions/DeviceDataPostRequest'
      responses:
        '201':
          description: Device created.
          schema:
            $ref: '#/definitions/DeviceData'
        '400':
          description: 'Validation error: The data used to create the device did not
            validate.'
        '401':
          description: Not authenticated.
        '403':
          description: Account limit reached. Could not create device.
        '409':
          description: Unique-constrained fields are used by other resources.
      summary: Create a device.
      tags:
      - Device directory - devices
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/devices/{device-id}/certificates/{certificate-name}/renew:
    post:
      description: 'Request a certificate renewal.


        **Example:**


        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/devices/01612df56f3b0a580a010fc700000000/certificates/customer.dlms/renew
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-length: 0''

        ```'
      operationId: RequestCertificateRenewal
      parameters:
      - description: The device ID.
        in: path
        name: device-id
        pattern: '[0-9a-fA-F]{32}'
        required: true
        type: string
      - description: The certificate name.
        in: path
        name: certificate-name
        pattern: '[\w\-]{1,10}\.[\w\-.]{1,10}'
        required: true
        type: string
      responses:
        '201':
          description: Created.
          schema:
            $ref: '#/definitions/CertificateEnrollment'
        '400':
          description: 'Validation error: There is no certificate issuer configured
            for this certificate.'
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '401':
          description: You are not authorized to perform the action.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '404':
          description: The device ID or certificate name is not found.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '409':
          description: Conflict. A renewal request for this certificate is in progress.
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
        '423':
          description: 'Either:

            - Operation not supported for this device.

            - The device is not connected.'
          schema:
            $ref: '#/definitions/ErrorObjectResponse'
      summary: Request certificate renewal.
      tags:
      - Device security - device certificate renewals
      x-origin: /home/circleci/project/certificate-enrollment/public/swagger.yaml
  /v3/devices/{device-id}/echo:
    get:
      description: 'Retrieve the Device Echo object, which represents the last known
        state of the device. The state includes the resources and their reported values
        with the desired state of the device.

        Auto-observable and subscribed resources are stored as the reported state
        of the device. To change the desired state, issue write commands with `/v2/device-requests/{device-id}`.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/devices/{device-id}/echo
        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getDeviceEchoObject
      parameters:
      - description: The device ID generated by Device Management.
        format: UUID, 32 hexadecimal characters
        in: path
        name: device-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Device found and returned.
          schema:
            $ref: '#/definitions/EchoDevice'
        401:
          description: Authentication failure.
        404:
          description: Device not found from Device Echo.
      summary: Get the Device Echo object.
      tags:
      - Device Echo
      x-origin: /home/circleci/project/device-server/public/swagger.yaml
  /v3/devices/{device_id}/logs:
    get:
      description: 'Retrieve logs for a given device based on a combination of filters.


        **Example usage:**

        ```

        curl -X GET \

        -H ''Authorization: Bearer <valid access token>'' \

        https://api.us-east-1.mbedcloud.com/v3/devices/{device_id}/logs

        ```

        '
      operationId: ListSingleGatewayDeviceLogs
      parameters:
      - description: The id of the device
        in: path
        name: device_id
        required: true
        type: string
      - default: 100
        description: Limit the number of returned results. The default value is 100.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        required: false
        type: integer
      - description: The entity ID to fetch after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: DESC
        description: 'Record order. Acceptable values: ASC, DESC.'
        enum: *id032
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count'
        in: query
        name: include
        required: false
        type: string
      - description: RFC 3339 UTC timestamp range upper limit.
        format: date-time
        in: query
        name: timestamp__lte
        required: false
        type: string
      - description: RFC 3339 UTC timestamp range lower limit.
        format: date-time
        in: query
        name: timestamp__gte
        required: false
        type: string
      - description: Name of the application on a device that generated logs.
        in: query
        name: app_name__eq
        required: false
        type: string
      - description: Device log type filter.
        in: query
        name: type__eq
        required: false
        type: string
      - description: Device log message filter.
        in: query
        name: message__eq
        required: false
        type: string
      - description: Minimum severity level of logs to retrieve.
        enum: *id033
        in: query
        name: level__gte
        required: false
        type: string
      responses:
        '200':
          description: Retrieved logs successfully
          schema:
            $ref: '#/definitions/LogsPage'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Return the logs for a specific device.
      tags:
      - Gateway Logs Public API
      x-filter:
        app_name:
        - eq
        level:
        - gte
        message:
        - eq
        timestamp:
        - lte
        - gte
        type:
        - eq
      x-origin: /home/circleci/project/gateway/public/logs.yaml
  /v3/devices/{id}/:
    delete:
      description: Delete device. Only available for devices with a developer certificate.
        Attempting to delete a device with a production certificate returns a 400
        response.
      operationId: Device_destroy
      parameters:
      - description: The [Device ID](https://www.pelion.com/docs/device-management/current/connecting/device-identity.html)
          created by Device Management.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Device deleted.
        '400':
          description: Bad request.
        '401':
          description: Not authenticated.
        '404':
          description: Unable to delete device because it can't be found.
      summary: Delete a device.
      tags:
      - Device directory - devices
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    get:
      description: 'Retrieve information about a specific device. This API returns
        [DeviceData](https://www.pelion.com/docs/device-management-api/device-directory/).
        If you want to see the structure of resources in the device or the actual
        resource values, use the [Connect API](https://www.pelion.com/docs/device-management-api/connect/).


        **Example:**

        Following example must be updated with the device''s ID to the URL. The id
        is from of "01667c6e992c00000000000100100370"

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/devices/<device_ID> \

        -H ''Authorization: Bearer <API key>''

        ```'
      operationId: Device_retrieve
      parameters:
      - description: The [Device ID](https://www.pelion.com/docs/device-management/current/connecting/device-identity.html)
          created by Device Management.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Retrieved result successfully.
          schema:
            $ref: '#/definitions/DeviceData'
        '400':
          description: Bad request.
        '401':
          description: Not authenticated.
        '404':
          description: Unable to find device.
      summary: Get a device.
      tags:
      - Device directory - devices
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
    put:
      description: 'Update a specific device.


        **Example:**

        Following example will update the specific devices description field to contain
        "Testing description field".

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/devices/<device_ID> \

        -H ''Authorization: Bearer <API key>'' \

        -H ''content-type: application/json'' \

        -d ''{"description": "Testing description field"}''

        ```'
      operationId: Device_update
      parameters:
      - description: The [Device ID](https://www.pelion.com/docs/device-management/current/connecting/device-identity.html)
          created by Device Management.
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: Device
        required: true
        schema:
          $ref: '#/definitions/DeviceDataPutRequest'
      responses:
        '200':
          description: Device updated.
          schema:
            $ref: '#/definitions/DeviceData'
        '400':
          description: 'Validation error: The data used to update the device did not
            validate.'
        '401':
          description: Not authenticated.
        '404':
          description: Unable to update device because it can't be found.
      summary: Update a device.
      tags:
      - Device directory - devices
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/devices/{id}/resume:
    post:
      description: '[Returning a device to service](https://www.pelion.com/docs/device-management/current/device-management/managing-devices-in-your-account.html#using-the-api-suspending-and-resuming-devices)
        allows the device to connect to Device Management again. The connection is
        established according to the device''s reconnection logic. The device reports
        a [registration event](https://www.pelion.com/docs/device-management-api/connect/)
        through a [notification channel](https://www.pelion.com/docs/device-management/current/integrate-web-app/event-notification.html).


        The default reconnection logic is a progressive back-off for 2, 4, 8, or 16
        seconds, up to one week. All API functionality is restored.


        **Example:**


        The following example enables a device to reconnect to Pelion Device Management.
        The category must match the reason device was suspended. This device was reported
        stolen, but was found:

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/devices/<device_id>/resume
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "category": "lost_or_stolen", "description": "Was found, was not stolen
        but miss placed"}''

        ```'
      operationId: Device_resume
      parameters:
      - description: The ID of the device.
        in: path
        name: id
        required: true
        type: string
      - description: The device block.
        in: body
        name: Block
        required: true
        schema: &id034
          properties:
            category:
              description: The reference of the block category.
              example: maintenance
              pattern: '[a-z0-9_]{0,32}'
              type: string
            description:
              description: The most recent description of why the device was suspended
                or returned to service.
              example: Suspended for maintenance.
              maxLength: 2000
              type: string
          type: object
      responses:
        '204':
          description: Ok - Device returned to service.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '404':
          description: Not Found - Could not find device.
      summary: Return a device to service.
      tags:
      - Device directory - lifecycle
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/devices/{id}/suspend:
    post:
      description: "[Suspending a device](https://www.pelion.com/docs/device-management/current/device-management/managing-devices-in-your-account.html#suspending-and-resuming-devices)\
        \ prevents it from connecting to Device Management. If a device is currently\
        \ connected, it disconnects and shows as deregistered.\n\nYou can also receive\
        \ [deregistration events](https://www.pelion.com/docs/device-management-api/connect/)\
        \ in [notification channels](https://www.pelion.com/docs/device-management/current/integrate-web-app/event-notification.html).\n\
        \nAPI operations needing device transactions fail while a device is suspended.\n\
        \nExample use case to use suspending is that device is reported lost or stolen.\
        \ You can block the device to connect and this way prevent  device to cause\
        \ unreliable data to your system.\n\n ***Example:*\n\n The following example\
        \ suspends a device with category \"Lost or stolen\". You can see available\
        \ categories with '/v3/device-block-categories/'.\n ```\n curl -X POST https://api.us-east-1.mbedcloud.com/v3/devices/<device_id>/suspend\
        \ \\\n -H 'Authorization: Bearer <access_key>' \\\n -H 'content-type: application/json'\
        \ \\\n -d '{ \"category\": \"lost_or_stolen\", \"description\": \"EXAMPLE:\
        \ Customer contacted via phone and reported device being stolen. Specific\
        \ time of the theft was not know. Device last used in May/2019\"}'\n ```"
      operationId: Device_suspend
      parameters:
      - description: The [Device ID](https://www.pelion.com/docs/device-management/current/connecting/device-identity.html)
          created by Device Management.
        in: path
        name: id
        required: true
        type: string
      - description: The device block.
        in: body
        name: Block
        required: true
        schema: *id034
      responses:
        '204':
          description: Ok - Device suspended.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '404':
          description: Not found - Could not find device.
      summary: Suspend a device.
      tags:
      - Device directory - lifecycle
      x-origin: /home/circleci/project/device-directory/public/swagger.yml
  /v3/firmware-images:
    get:
      description: 'List all firmware images.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/firmware-images \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Firmware_Image_list
      parameters:
      - description: How many objects to retrieve in the page. The minimum limit is
          2 and the maximum is 1000. Limit values outside of this range are set to
          the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: ASC or DESC.
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'A comma-separated list of data fields to return. Currently supported:
          total_count.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data.\n\
          \n`?filter={URL-encoded query string}`\n\n###### Filterable fields:\n\n\
          The table lists all the fields that can be filtered on with certain filters:\n\
          \n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>= / __eq\
          \ / __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte / __gte</th>\n\
          \    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>created_at</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n  \
          \  </tr>\n    <tr>\n      <td>datafile</td>\n      <td>\u2713</td>\n   \
          \   <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>datafile_checksum</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n \
          \   </tr>\n    <tr>\n      <td>datafile_size</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n   \
          \   <td>description</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>etag</td>\n     \
          \ <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n\
          \    <tr>\n      <td>id</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>name</td>\n     \
          \ <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n\
          \    <tr>\n      <td>updated_at</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n    </tr>\n  </tbody>\n</table>\n&nbsp;\n\n\
          The query string is made up of key-value pairs separated by ampersands.\
          \ For example, this query:\n`key1=value1&key2=value2&key3=value3`\n\nwould\
          \ be URL-encoded as:\n`?filter=key1__eq%3Dvalue1%26key2__eq%3Dvalue2%26key3__eq%3Dvalue3`\n\
          \n\n**Filtering by properties**\n`name__eq=myimage`\n\n**Filtering on date-time\
          \ fields**\n\nDate-time fields should be specified in UTC RFC3339 format,\
          \ `YYYY-MM-DDThh:mm:ss.msZ`. There are three permitted variations:\n\n*\
          \ UTC RFC3339 with milliseconds. Example: `2016-11-30T16:25:12.1234Z`\n\
          * UTC RFC3339 without milliseconds. Example: `2016-11-30T16:25:12Z`\n* UTC\
          \ RFC3339 shortened without milliseconds and punctuation. Example: `20161130T162512Z`\n\
          \nDate-time filtering supports three operators:\n\n* equality by appending\
          \ `__eq` to the field name\n* greater than or equal to by appending `__gte`\
          \ to the field name\n* less than or equal to by appending `__lte` to the\
          \ field name\n\n`{field name}[|__eq|__lte|__gte]={UTC RFC3339 date-time}`\n\
          \nTime ranges may be specified by including both the `__gte` and `__lte`\
          \ forms in the filter. For example:\n\n`created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering on multiple fields**\n\n`name__eq=myimage&created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering with filter operators**\n\nString field filtering supports\
          \ the following operators:\n\n* equality: `__eq`\n* non-equality: `__neq`\n\
          * in : `__in`\n* not in: `__nin`\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n\n`name__in=fw-image1,fw-image2`"
        in: query
        name: filter
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: eq filter for the "datafile" field
        in: query
        name: datafile__eq
        type: string
      - description: neq filter for the "datafile" field
        in: query
        name: datafile__neq
        type: string
      - description: in filter for the "datafile" field
        in: query
        name: datafile__in
        type: string
      - description: nin filter for the "datafile" field
        in: query
        name: datafile__nin
        type: string
      - description: eq filter for the "datafile_checksum" field
        in: query
        name: datafile_checksum__eq
        type: string
      - description: neq filter for the "datafile_checksum" field
        in: query
        name: datafile_checksum__neq
        type: string
      - description: in filter for the "datafile_checksum" field
        in: query
        name: datafile_checksum__in
        type: string
      - description: nin filter for the "datafile_checksum" field
        in: query
        name: datafile_checksum__nin
        type: string
      - description: eq filter for the "datafile_size" field
        format: int64
        in: query
        name: datafile_size__eq
        type: integer
      - description: neq filter for the "datafile_size" field
        format: int64
        in: query
        name: datafile_size__neq
        type: integer
      - description: in filter for the "datafile_size" field
        in: query
        name: datafile_size__in
        type: string
      - description: nin filter for the "datafile_size" field
        in: query
        name: datafile_size__nin
        type: string
      - description: eq filter for the "description" field
        in: query
        name: description__eq
        type: string
      - description: neq filter for the "description" field
        in: query
        name: description__neq
        type: string
      - description: in filter for the "description" field
        in: query
        name: description__in
        type: string
      - description: nin filter for the "description" field
        in: query
        name: description__nin
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "name" field
        in: query
        name: name__eq
        type: string
      - description: neq filter for the "name" field
        in: query
        name: name__neq
        type: string
      - description: in filter for the "name" field
        in: query
        name: name__in
        type: string
      - description: nin filter for the "name" field
        in: query
        name: name__nin
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      responses:
        '200':
          description: Request successful.
          schema:
            $ref: '#/definitions/FirmwareImagePage'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unable to find content.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List all images
      tags:
      - Device update - firmware images
      x-filter:
        created_at:
        - in
        - nin
        - lte
        - gte
        datafile:
        - eq
        - neq
        - in
        - nin
        datafile_checksum:
        - eq
        - neq
        - in
        - nin
        datafile_size:
        - eq
        - neq
        - in
        - nin
        description:
        - eq
        - neq
        - in
        - nin
        id:
        - eq
        - neq
        - in
        - nin
        name:
        - eq
        - neq
        - in
        - nin
        updated_at:
        - in
        - nin
        - lte
        - gte
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    post:
      consumes:
      - multipart/form-data
      description: 'Create a firmware image.

        <BR/> **Note:** Only use this API for images smaller than 100 MB. For larger
        images, [upload in chunks](https://www.pelion.com/docs/device-management/current/updating-firmware/uploading-a-large-firmware-image.html).

        <br>

        **Usage example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/firmware-images \

        -H ''Authorization: Bearer <api_key>'' \

        -H ''Content-Type: multipart/form-data'' \

        -F ''datafile=@myimage.bin;type=application/octet-stream''

        -F ''description=bla bla'' \

        -F ''name=My Linux Image''

        ```

        '
      operationId: Firmware_Image_create
      parameters:
      - description: The firmware image file to upload. File name must not exceed
          166 characters.
        in: formData
        maxLength: 166
        name: datafile
        required: true
        type: file
      - description: The description of the firmware image.
        format: free text
        in: formData
        maxLength: 2000
        name: description
        required: false
        type: string
      - description: The name of the firmware image.
        format: free text
        in: formData
        maxLength: 128
        name: name
        type: string
      responses:
        '201':
          description: Firmware image created. The API gateway enforces the account-specific
            file size.
          schema:
            $ref: '#/definitions/FirmwareImage'
        '400':
          description: Cannot validate the data used to create the firmware image.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        413:
          description: Firmware image too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create an image
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/firmware-images/upload-jobs:
    get:
      description: 'Get all upload jobs.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/firmware-images/upload-jobs
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Upload_Job_List
      parameters:
      - description: How many objects to retrieve in the page. The minimum limit is
          2 and the maximum is 1000. Limit values outside of this range are set to
          the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: ASC or DESC.
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'A comma-separated list of data fields to return. Currently supported:
          total_count.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data.\n\
          \n`?filter={URL-encoded query string}`\n\n###### Filterable fields:\n\n\
          The table lists all the fields that can be filtered on with certain filters:\n\
          \n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>= / __eq\
          \ / __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte / __gte</th>\n\
          \    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>name</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n\
          \      <td>description</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>complete</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n    \
          \  <td>id</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n\
          \    </tr>\n    <tr>\n      <td>firmware_image_id</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n\
          \      <td>status</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n \
          \     <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>created_at</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n \
          \   </tr>\n    <tr>\n      <td>etag</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n      <td>updated_at</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n \
          \   </tr>\n  </tbody>\n</table>\n&nbsp;\n\nThe query string is made up of\
          \ key-value pairs separated by ampersands. For example, this query:\n`key1=value1&key2=value2&key3=value3`\n\
          \nwould be URL-encoded as:\n`?filter=key1__eq%3Dvalue1%26key2__eq%3Dvalue2%26key3__eq%3Dvalue3`\n\
          \n\n**Filtering by properties**\n`name__eq=myimage`\n\n**Filtering on date-time\
          \ fields**\n\nDate-time fields should be specified in UTC RFC3339 format,\
          \ `YYYY-MM-DDThh:mm:ss.msZ`. There are three permitted variations:\n\n*\
          \ UTC RFC3339 with milliseconds. Example: `2016-11-30T16:25:12.1234Z`\n\
          * UTC RFC3339 without milliseconds. Example: `2016-11-30T16:25:12Z`\n* UTC\
          \ RFC3339 shortened without milliseconds and punctuation. Example: `20161130T162512Z`\n\
          \nDate-time filtering supports three operators:\n\n* equality by appending\
          \ `__eq` to the field name\n* greater than or equal to by appending `__gte`\
          \ to the field name\n* less than or equal to by appending `__lte` to the\
          \ field name\n\n`{field name}[|__eq|__lte|__gte]={UTC RFC3339 date-time}`\n\
          \nTime ranges may be specified by including both the `__gte` and `__lte`\
          \ forms in the filter. For example:\n\n`created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering on multiple fields**\n\n`name__eq=myimage&created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering with filter operators**\n\nString field filtering supports\
          \ the following operators:\n\n* equality: `__eq`\n* non-equality: `__neq`\n\
          * in : `__in`\n* not in: `__nin`\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n\n`name__in=fw-image1,fw-image2`"
        in: query
        name: filter
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      - description: eq filter for the "name" field
        in: query
        name: name__eq
        type: string
      - description: neq filter for the "name" field
        in: query
        name: name__neq
        type: string
      - description: in filter for the "name" field
        in: query
        name: name__in
        type: string
      - description: nin filter for the "name" field
        in: query
        name: name__nin
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: eq filter for the "description" field
        in: query
        name: description__eq
        type: string
      - description: neq filter for the "description" field
        in: query
        name: description__neq
        type: string
      - description: in filter for the "description" field
        in: query
        name: description__in
        type: string
      - description: nin filter for the "description" field
        in: query
        name: description__nin
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "complete" field
        in: query
        name: complete__eq
        type: boolean
      - description: neq filter for the "complete" field
        in: query
        name: complete__neq
        type: boolean
      - description: eq filter for the "status" field
        in: query
        name: status__eq
        type: string
      - description: neq filter for the "status" field
        in: query
        name: status__neq
        type: string
      - description: in filter for the "status" field
        in: query
        name: status__in
        type: string
      - description: nin filter for the "status" field
        in: query
        name: status__nin
        type: string
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/UploadJobPage'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all upload jobs
      tags:
      - Device update - firmware images
      x-filter:
        complete:
        - eq
        - neq
        created_at:
        - in
        - nin
        - lte
        - gte
        description:
        - eq
        - neq
        - in
        - nin
        id:
        - eq
        - neq
        - in
        - nin
        name:
        - eq
        - neq
        - in
        - nin
        status:
        - eq
        - neq
        - in
        - nin
        updated_at:
        - in
        - nin
        - lte
        - gte
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    post:
      description: "Create a new upload job\n<br>\n**Usage example:**\n```\ncurl -X\
        \ POST https://api.us-east-1.mbedcloud.com/v3/firmware-images/upload-jobs\
        \ \\\n-H 'Authorization: Bearer <api_key>' \\\n-H 'content-type: application/json;charset=UTF-8'\
        \ \\\n-d '{\n  \"name\": \"New Linux update\",\n  \"description\": \"New Linux\
        \ update for my devices\"\n}'\n```\n"
      operationId: Upload_Job_Create
      parameters:
      - description: Upload job.
        in: body
        name: Upload job
        required: true
        schema:
          properties:
            description: *id035
            name: *id036
          type: object
      responses:
        201:
          description: Success - New job created.
          headers:
            Location:
              description: URL of the metadata for the created upload job.
              type: string
          schema:
            $ref: '#/definitions/UploadJob'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: Conflict.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new upload job.
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/firmware-images/upload-jobs/{upload_job_id}:
    delete:
      description: 'Delete an upload job.

        <br>

        **Usage example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/firmware-images/upload-jobs/12345678901234567890123456789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Upload_Job_Delete
      parameters:
      - description: The upload job ID.
        in: path
        name: upload_job_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        204:
          description: Job deleted - no content to show.
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete an upload job
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    get:
      description: 'Get an upload job.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/firmware-images/upload-jobs/12345678901234567890123456789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Upload_Job_Retrieve
      parameters:
      - description: The upload job ID.
        in: path
        name: upload_job_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/UploadJob'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Retrieve information for an upload job
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    put:
      description: "Update an upload job.\n<br>\n**Usage example:**\n```\ncurl -X\
        \ PUT https://api.us-east-1.mbedcloud.com/v3/firmware-images/upload-jobs/12345678901234567890123456789012\
        \ \\\n-H 'Authorization: Bearer <api_key>' \\\n-d '{\n  \"name\": \"New Linux\
        \ update\",\n  \"description\": \"New Linux update for my class XX devices\"\
        \n}'\n```\n"
      operationId: Upload_Job_Update
      parameters:
      - description: The upload job ID.
        in: path
        name: upload_job_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: Upload job.
        in: body
        name: Upload job
        required: true
        schema:
          properties:
            description: *id035
            name: *id036
          type: object
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/UploadJob'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update an upload job
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/firmware-images/upload-jobs/{upload_job_id}/chunks:
    get:
      description: 'List all metadata for uploaded chunks.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/firmware-images/upload-jobs/12345678901234567890123456789012/chunks
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Upload_Job_Chunk_List
      parameters:
      - description: The upload job ID.
        in: path
        name: upload_job_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: How many objects to retrieve in the page. The minimum limit is
          2 and the maximum is 1000. Limit values outside of this range are set to
          the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: ASC or DESC.
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'A comma-separated list of data fields to return. Currently supported:
          total_count.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data\n\
          \n`?filter={URL-encoded query string}`\n\n###### Filterable fields:\n\n\
          The table lists all the fields that can be filtered on with certain filters:\n\
          \n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>= / __eq\
          \ / __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte / __gte</th>\n\
          \    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>created_at</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n  \
          \  </tr>\n    <tr>\n      <td>etag</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n      <td>id</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n  \
          \  </tr>\n    <tr>\n      <td>updated_at</td>\n      <td>\u2713</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n    \
          \  <td>hash</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n\
          \    </tr>\n    <tr>\n      <td>length</td>\n      <td>\u2713</td>\n   \
          \   <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n  </tbody>\n</table>\n\
          &nbsp;\n\nThe query string is made up of key-value pairs separated by ampersands.\
          \ For example, this query:\n`key1=value1&key2=value2&key3=value3`\n\nwould\
          \ be URL-encoded as:\n`?filter=key1__eq%3Dvalue1%26key2__eq%3Dvalue2%26key3__eq%3Dvalue3`\n\
          \n\n**Filtering by properties**\n`hash__eq=8FS70vXrq5y1VxAAssUMAg==`\n\n\
          **Filtering on date-time fields**\n\nDate-time fields should be specified\
          \ in UTC RFC3339 format, `YYYY-MM-DDThh:mm:ss.msZ`. There are three permitted\
          \ variations:\n\n* UTC RFC3339 with milliseconds. Example: `2016-11-30T16:25:12.1234Z`\n\
          * UTC RFC3339 without milliseconds. Example: `2016-11-30T16:25:12Z`\n* UTC\
          \ RFC3339 shortened without milliseconds and punctuation. Example: `20161130T162512Z`\n\
          \nDate-time filtering supports three operators:\n\n* equality by appending\
          \ `__eq` to the field name\n* greater than or equal to by appending `__gte`\
          \ to the field name\n* less than or equal to by appending `__lte` to the\
          \ field name\n\n`{field name}[|__eq|__lte|__gte]={UTC RFC3339 date-time}`\n\
          \nTime ranges may be specified by including both the `__gte` and `__lte`\
          \ forms in the filter. For example:\n\n`created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering on multiple fields**\n\n`status__eq=in_progress&created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering with filter operators**\n\nString field filtering supports\
          \ the following operators:\n\n* equality: `__eq`\n* non-equality: `__neq`\n\
          * in : `__in`\n* not in: `__nin`\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n\n`status__in=in_progress,success`"
        in: query
        name: filter
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: integer
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: integer
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      - description: eq filter for the "hash" field
        in: query
        name: hash__eq
        type: string
      - description: neq filter for the "hash" field
        in: query
        name: hash__neq
        type: string
      - description: in filter for the "hash" field
        in: query
        name: hash__in
        type: string
      - description: nin filter for the "hash" field
        in: query
        name: hash__nin
        type: string
      - description: eq filter for the "length" field
        in: query
        name: length__eq
        type: integer
      - description: neq filter for the "length" field
        in: query
        name: length__neq
        type: integer
      - description: in filter for the "length" field
        in: query
        name: length__in
        type: string
      - description: nin filter for the "length" field
        in: query
        name: length__nin
        type: string
      - description: lte filter for the "length" field
        in: query
        name: length__lte
        type: integer
      - description: gte filter for the "length" field
        in: query
        name: length__gte
        type: integer
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/UploadChunkInfoPage'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List all metadata for uploaded chunks
      tags:
      - Device update - firmware images
      x-filter:
        created_at:
        - in
        - nin
        - lte
        - gte
        hash:
        - eq
        - neq
        - in
        - nin
        id:
        - eq
        - neq
        - in
        - nin
        length:
        - eq
        - neq
        - in
        - nin
        - lte
        - gte
        updated_at:
        - in
        - nin
        - lte
        - gte
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    post:
      consumes:
      - application/octet-stream
      description: 'Append a chunk to an upload job. To finish a job, upload a zero-length
        chunk.

        <BR/> **Note:** Chunk size must be between 5MB and 100MB, the last chunk can
        be less than 5MB; the maximum number of chunks is limited to 10,000.

        <br>

        **Usage example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/firmware-images/upload-jobs/12345678901234567890123456789012/chunks
        \

        -H ''Authorization: Bearer <api_key>'' \

        -H ''Content-MD5: Q2h1Y2sgSW51ZwDIAXR5IQ=='' \

        -H ''Content-Type: binary/octet-stream'' \

        --data-binary ''@chunkfile.bin''

        ```

        '
      operationId: Upload_Job_Chunk_Create
      parameters:
      - description: The base64-encoded binary digest of the body (chunk data).
        format: byte
        in: header
        name: Content-MD5
        required: true
        type: string
      - in: header
        name: Content-Length
        required: true
        type: integer
      - description: The upload job ID.
        in: path
        name: upload_job_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: Chunk.
        in: body
        name: chunk
        required: false
        schema:
          format: binary
          type: string
      responses:
        201:
          description: Success - Chunk appended to the upload.
          headers:
            Content-Location:
              description: URL of the metadata for the uploaded chunk.
              type: string
            Location:
              description: URL of the metadata for the uploaded chunk.
              type: string
          schema:
            $ref: '#/definitions/UploadChunkInfo'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Append a chunk to an upload job
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/firmware-images/upload-jobs/{upload_job_id}/chunks/{chunk_id}:
    get:
      description: 'Get metadata about a chunk.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/firmware-images/upload-jobs/12345678901234567890123456789012/chunks/12345678901234567890123456789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Upload_Job_Chunk_retreive
      parameters:
      - description: The upload job ID.
        in: path
        name: upload_job_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: Chunk.
        in: path
        name: chunk_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/UploadChunkInfo'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get metadata about a chunk
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/firmware-images/{image_id}:
    delete:
      description: 'Delete a firmware image.

        <br>

        **Usage example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/firmware-images/11234567f9012ab56790120000789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Firmware_Image_destroy
      parameters:
      - description: The firmware image ID.
        in: path
        name: image_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '204':
          description: Firmware image deleted.
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Firmware image not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete an image
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    get:
      description: 'Retrieve a firmware image.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/firmware-images/1123456f9012ab567890120000789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Firmware_Image_retrieve
      parameters:
      - description: The firmware image ID
        in: path
        name: image_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '200':
          description: Retrieved result successfully.
          schema:
            $ref: '#/definitions/FirmwareImage'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Firmware image can't be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an image.
      tags:
      - Device update - firmware images
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/firmware-manifests/:
    get:
      description: 'List all firmware manifests.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/firmware-manifests \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Firmware_Manifest_list
      parameters:
      - description: How many objects to retrieve in the page. The minimum limit is
          2 and the maximum is 1000. Limit values outside of this range are set to
          the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: ASC or DESC.
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'A comma-separated list of data fields to return. Currently supported:
          total_count.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data\n\
          \n`?filter={URL-encoded query string}`\n\n###### Filterable fields:\n\n\
          The table lists all the fields that can be filtered on with certain filters:\n\
          \n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>= / __eq\
          \ / __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte / __gte</th>\n\
          \    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>created_at</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n  \
          \  </tr>\n    <tr>\n      <td>datafile</td>\n      <td>\u2713</td>\n   \
          \   <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>datafile_size</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n \
          \   </tr>\n    <tr>\n      <td>description</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n   \
          \   <td>device_class</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>etag</td>\n     \
          \ <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n\
          \    <tr>\n      <td>id</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>name</td>\n     \
          \ <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n\
          \    <tr>\n      <td>timestamp</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n      <td>updated_at</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n \
          \   </tr>\n  </tbody>\n</table>\n&nbsp;\n\nThe query string is made up of\
          \ key-value pairs separated by ampersands. For example, this query:\n`key1__eq=value1&key2__eq=value2&key3__eq=value3`\n\
          \nwould be URL-encoded as:\n`?filter=key1__eq%3Dvalue1%26key2__eq%3Dvalue2%26key3__eq%3Dvalue3`\n\
          \n\n**Filtering by properties**\n`name__eq=mymanifest`\n\n**Filtering on\
          \ date-time fields**\n\nDate-time fields should be specified in UTC RFC3339\
          \ format, `YYYY-MM-DDThh:mm:ss.msZ`. There are three permitted variations:\n\
          \n* UTC RFC3339 with milliseconds. Example: `2016-11-30T16:25:12.1234Z`\n\
          * UTC RFC3339 without milliseconds. Example: `2016-11-30T16:25:12Z`\n* UTC\
          \ RFC3339 shortened without milliseconds and punctuation. Example: `20161130T162512Z`\n\
          \nDate-time filtering supports three operators:\n\n* equality by appending\
          \ `__eq` to the field name\n* greater than or equal to by appending `__gte`\
          \ to the field name\n* less than or equal to by appending `__lte` to the\
          \ field name\n\n`{field name}[|__eq|__lte|__gte]={UTC RFC3339 date-time}`\n\
          \nTime ranges may be specified by including both the `__gte` and `__lte`\
          \ forms in the filter. For example:\n\n`created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering on multiple fields**\n\n`name__eq=mymanifest&created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering with filter operators**\n\nString field filtering supports\
          \ the following operators:\n\n* equality: `__eq`\n* non-equality: `__neq`\n\
          * in : `__in`\n* not in: `__nin`\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n\n`name__in=fw-manifest1,fw-manifest2`"
        in: query
        name: filter
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: eq filter for the "datafile" field
        in: query
        name: datafile__eq
        type: string
      - description: neq filter for the "datafile" field
        in: query
        name: datafile__neq
        type: string
      - description: in filter for the "datafile" field
        in: query
        name: datafile__in
        type: string
      - description: nin filter for the "datafile" field
        in: query
        name: datafile__nin
        type: string
      - description: eq filter for the "datafile_size" field
        format: int64
        in: query
        name: datafile_size__eq
        type: integer
      - description: neq filter for the "datafile_size" field
        format: int64
        in: query
        name: datafile_size__neq
        type: integer
      - description: in filter for the "datafile_size" field
        in: query
        name: datafile_size__in
        type: string
      - description: nin filter for the "datafile_size" field
        in: query
        name: datafile_size__nin
        type: string
      - description: eq filter for the "description" field
        in: query
        name: description__eq
        type: string
      - description: neq filter for the "description" field
        in: query
        name: description__neq
        type: string
      - description: in filter for the "description" field
        in: query
        name: description__in
        type: string
      - description: nin filter for the "description" field
        in: query
        name: description__nin
        type: string
      - description: eq filter for the "device_class" field
        in: query
        name: device_class__eq
        type: string
      - description: neq filter for the "device_class" field
        in: query
        name: device_class__neq
        type: string
      - description: in filter for the "device_class" field
        in: query
        name: device_class__in
        type: string
      - description: nin filter for the "device_class" field
        in: query
        name: device_class__nin
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "name" field
        in: query
        name: name__eq
        type: string
      - description: neq filter for the "name" field
        in: query
        name: name__neq
        type: string
      - description: in filter for the "name" field
        in: query
        name: name__in
        type: string
      - description: nin filter for the "name" field
        in: query
        name: name__nin
        type: string
      - description: in filter for the "timestamp" field
        in: query
        name: timestamp__in
        type: string
      - description: nin filter for the "timestamp" field
        in: query
        name: timestamp__nin
        type: string
      - description: lte filter for the "timestamp" field
        format: date-time
        in: query
        name: timestamp__lte
        type: string
      - description: gte filter for the "timestamp" field
        format: date-time
        in: query
        name: timestamp__gte
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      responses:
        '200':
          description: Request successful.
          schema:
            $ref: '#/definitions/FirmwareManifestPage'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unable to find content.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List all firmware manifests.
      tags:
      - Device update - firmware manifests
      x-filter:
        created_at:
        - in
        - nin
        - lte
        - gte
        datafile:
        - eq
        - neq
        - in
        - nin
        datafile_size:
        - eq
        - neq
        - in
        - nin
        description:
        - eq
        - neq
        - in
        - nin
        device_class:
        - eq
        - neq
        - in
        - nin
        id:
        - eq
        - neq
        - in
        - nin
        name:
        - eq
        - neq
        - in
        - nin
        timestamp:
        - in
        - nin
        - lte
        - gte
        updated_at:
        - in
        - nin
        - lte
        - gte
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    post:
      consumes:
      - multipart/form-data
      description: 'Upload a firmware manifest. The API enforces a maximum manifest
        size of 2KB.

        <br>

        **Usage example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/firmware-manifests \

        -H ''Authorization: Bearer <api_key>'' \

        -H ''Content-Type: multipart/form-data'' \

        -F ''datafile=@myimage.bin;type=application/octet-stream'' \

        -F ''description=bla bla'' \

        -F ''key_table=@myKeyTable.proto;type='' \

        -F ''name=My Manifest''

        ```

        '
      operationId: Firmware_Manifest_create
      parameters:
      - description: The manifest file to create. The API gateway enforces the account-specific
          file size. File name must not exceed 100 characters.
        in: formData
        name: datafile
        required: true
        type: file
      - description: The description of the firmware manifest.
        format: free text
        in: formData
        maxLength: 2000
        name: description
        required: false
        type: string
      - description: The key table of pre-shared keys for devices. The table is generated
          by the manifest tool. File name must not exceed 100 characters.
        in: formData
        name: key_table
        required: false
        type: file
      - description: The name of the firmware manifest.
        format: free text
        in: formData
        maxLength: 128
        name: name
        required: true
        type: string
      responses:
        '201':
          description: Created.
          schema:
            $ref: '#/definitions/FirmwareManifest'
        '400':
          description: 'Validation error. The data used to create the firmware manifest
            did not validate and/or the manifest uploaded exceeded 2 KB in size.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a manifest
      tags:
      - Device update - firmware manifests
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/firmware-manifests/{manifest_id}:
    delete:
      description: 'Delete a firmware manifest.

        <br>

        **Usage example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/firmware-manifests/11234567f9012ab56780120000789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Firmware_Manifest_destroy
      parameters:
      - description: The firmware manifest ID.
        in: path
        name: manifest_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '204':
          description: Firmware manifest deleted.
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Firmware manifest not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a manifest
      tags:
      - Device update - firmware manifests
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    get:
      description: 'Retrieve a firmware manifest.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/firmware-manifests/1123467f9012ab567890120000789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Firmware_Manifest_retrieve
      parameters:
      - description: The firmware manifest ID.
        in: path
        name: manifest_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '200':
          description: Retrieved result successfully.
          schema:
            $ref: '#/definitions/FirmwareManifest'
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Firmware manifest can't be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a manifest
      tags:
      - Device update - firmware manifests
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/identity-providers:
    get:
      consumes:
      - application/json
      description: 'Retrieve an array of identity providers.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: getAllIdentityProviders
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/IdentityProviderList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all identity providers.
      tags:
      - Account - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new identity provider.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: createIdentityProvider
      parameters:
      - allowEmptyValue: true
        description: 'Indicates that the OpenID Connect endpoints and keys should
          be set using the OpenID Connect Discovery mechanism. The following parameters
          are set automatically: * authorization_endpoint * token_endpoint * userinfo_endpoint
          * revocation_endpoint * jwks_uri * keys'
        in: query
        name: discovery
        type: boolean
      - description: Details of the identity provider to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/IdentityProviderCreationReq'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          headers:
            Content-Location:
              description: /v3/identity-providers/{identity_provider_id}
              type: string
            Location:
              description: /v3/identity-providers/{identity_provider_id}
              type: string
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '400':
          description: Error in input data, for example, name is too long.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new identity provider.
      tags:
      - Account - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/identity-providers/{identity_provider_id}:
    delete:
      description: 'Delete an identity provider by ID.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: deleteIdentityProvider
      parameters:
      - description: The ID of the identity provider to delete.
        in: path
        name: identity_provider_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, or identity provider is in use.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete an identity provider by ID.
      tags:
      - Account - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve an identity provider.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: getIdentityProvider
      parameters:
      - description: The ID of the identity provider to retrieve.
        in: path
        name: identity_provider_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get identity provider.
      tags:
      - Account - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update an existing identity provider.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: updateIdentityProvider
      parameters:
      - description: The ID of the identity provider to update.
        in: path
        name: identity_provider_id
        required: true
        type: string
      - allowEmptyValue: true
        description: 'Indicates that the OpenID Connect endpoints and keys should
          be set using the OpenID Connect Discovery mechanism. The following parameters
          are set automatically: * authorization_endpoint * token_endpoint * userinfo_endpoint
          * revocation_endpoint * jwks_uri * keys'
        in: query
        name: discovery
        type: boolean
      - description: Details of the identity provider to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/IdentityProviderUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '400':
          description: Error in input data, for example, missing name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update an existing identity provider.
      tags:
      - Account - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/identity-providers/{identity_provider_id}/delete-sp-certificate:
    post:
      consumes:
      - application/json
      description: 'Delete a service provider certificate.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: deleteSpCertificate
      parameters:
      - description: The ID of the identity provider.
        in: path
        name: identity_provider_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          headers:
            Content-Location:
              description: /v3/identity-providers/{identity_provider_id}
              type: string
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete the service provider certificate.
      tags:
      - Account - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/identity-providers/{identity_provider_id}/generate-sp-certificate:
    post:
      consumes:
      - application/json
      description: 'Generate a new service provider certificate.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: generateSpCertificate
      parameters:
      - description: The ID of the identity provider to generate a certificate for.
        in: path
        name: identity_provider_id
        required: true
        type: string
      - description: Details of the service provider certificate to generate.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/CertificateGenerationReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          headers:
            Content-Location:
              description: /v3/identity-providers/{identity_provider_id}
              type: string
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '400':
          description: Error in input data, for example, invalid certificate validity
            value.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Generate a new service provider certificate.
      tags:
      - Account - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/identity-providers/{identity_provider_id}/refresh-jwks:
    post:
      consumes:
      - application/json
      description: 'Refreshes an OIDC IdP''s signing keys.

        <b>Note:</b> This endpoint is restricted to administrators.'
      operationId: refreshJwks
      parameters:
      - description: The ID of the identity provider for which to refresh the signing
          keys.
        in: path
        name: identity_provider_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          headers:
            Content-Location:
              description: /v3/identity-providers/{identity_provider_id}
              type: string
          schema:
            $ref: '#/definitions/IdentityProviderInfo'
        '400':
          description: Not an OIDC IdP or JWKS URI is unspecified.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An identity provider not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Refreshes the OIDC signing keys.
      tags:
      - Account - identity providers
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/limitations:
    get:
      description: Retrieve an array of entitlement limitations.
      operationId: getAccountLimitations
      parameters:
      - description: Filter for finding account limitations by inheritance. True returns
          also inherited limitations. False returns only non-inherited ones.
        in: query
        name: inherited__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountLimitationList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get entitlement limitations.
      tags:
      - Account - entitlement limitations
      x-filter:
        inherited:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/limitations/{limitation_id}:
    get:
      description: Retrieve an entitlement limitation.
      operationId: getAccountLimitation
      parameters:
      - description: The ID of the limitation to be fetched.
        in: path
        name: limitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountLimitation'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Limitation with the given ID not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an entitlement limitation.
      tags:
      - Account - entitlement limitations
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/manufacturing/statistics:
    get:
      description: 'Get manufacturing statistics report.

        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/manufacturing/statistics?start=2020-06-23T21:00:00.000Z&end=2020-07-01T20:59:59.999Z
        --header ''Authorization: Bearer <access_key>''

        ```

        '
      operationId: ManufacturingStatisticsReport
      parameters:
      - description: The start date and time for the report.
        format: date-time
        in: query
        name: start
        required: true
        type: string
      - description: The end date and time for the report. The default value is the
          current date-time.
        format: date-time
        in: query
        name: end
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/StatisticsReportListResponse'
      summary: Retrieve provisioning statistics for devices in your factories.
      tags:
      - Factory manufacturing statistics
      x-origin: /home/circleci/project/manufacturing-statistics/public/swagger.yml
  /v3/metrics:
    get:
      description: This REST API is used to get account-specific statistics.
      operationId: getMetrics
      parameters:
      - description: "A comma-separated list of requested metrics and total_count\
          \ (if included, the response will contain total_count to specify the total\
          \ number of records available). Supported values are:\n\n- `transactions`\n\
          - `full_registrations`\n- `registration_updates`\n- `deleted_registrations`\n\
          - `expired_registrations`\n- `bootstraps_successful`\n- `bootstraps_failed`\n\
          - `bootstraps_pending`\n- `handshakes_successful`\n- `connect_rest_api_success`\n\
          - `connect_rest_api_error`\n- `device_proxy_request_success`\n- `device_proxy_request_error`\n\
          - `device_subscription_request_success`\n- `device_subscription_request_error`\n\
          - `device_observations`\n- `total_count`\n\n**Note:**\n\nThe metrics `device_proxy_request_success`,\
          \ `device_proxy_request_error`, `device_subscription_request_success`, `device_subscription_request_error`\
          \ and `device_observations` monitor only the response from the device to\
          \ Device Management Connect. They do not confirm that the response is delivered\
          \ to the client callback URLs used when you try to access device resources\
          \ using [Connect API](https://www.pelion.com/docs/device-management-api/connect/)\
          \ endpoints. New metrics will be added to monitor the response delivery\
          \ to client callback URLs later.\n\n**Example usage:**\n\n```\ncurl  -X\
          \ GET \\\n      -H \"Authorization : Bearer <access_key>\"\n       'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170207&end=20170407&interval=1d'\n\
          \n{\n    \"object\": \"list\",\n    \"limit\": 20,\n    \"total_count\"\
          : 54,\n    \"after\": \"2017-07-26T00:00:00Z\",\n    \"has_more\": true,\n\
          \    \"data\": [\n        {\n            \"id\": \"015d8157c800015e306fffff005374617473000\"\
          ,\n            \"timestamp\": \"2017-07-27T00:00:00Z\",\n            \"\
          transactions\": 27366\n        },\n        {\n            \"id\": \"015d867e2400015e306fffff005374617473000\"\
          ,\n            \"timestamp\": \"2017-07-28T00:00:00Z\",\n            \"\
          transactions\": 27480\n        }\n    ]\n}\n```\n"
        in: query
        name: include
        required: true
        type: string
      - description: 'UTC time/year/date in RFC3339 format. Fetch the data with timestamp
          greater than or equal to this value. Sample values: 20170207T092056990Z/2017-02-07T09:20:56.990Z
          / 2017 / 20170207. The maximum time between start and end parameters cannot
          exceed more than one year (365 days). The parameter is not mandatory, if
          the period is specified.

          '
        format: date
        in: query
        name: start
        required: false
        type: string
      - description: 'UTC time/year/date in RFC3339 format. Fetch the data with timestamp
          less than this value. Sample values: 20170207T092056990Z/2017-02-07T09:20:56.990Z
          / 2017 / 20170207. The maximum time between start and end parameters cannot
          exceed more than one year (365 days). The parameter is not mandatory, if
          the period is specified.

          '
        format: date
        in: query
        name: end
        required: false
        type: string
      - description: 'Period. Fetch the data for the period in minutes, hours, days
          or weeks. Sample values: 5m, 2h, 3d, 4w. The parameter is not mandatory,
          if the start and end time are specified. The maximum period cannot exceed
          one year (365 days). The allowed ranges are 5m-525600m/1h-8760h/1d-365d/1w-53w.

          '
        in: query
        name: period
        required: false
        type: string
      - description: 'Group the data by this interval in minutes, hours, days or weeks.
          Sample values: 5m, 2h, 3d, 4w. The maximum interval cannot exceed one year
          (365 days). The allowed ranges are 5m-525600m/1h-8760h/1d-365d/1w-53w.

          '
        in: query
        name: interval
        required: true
        type: string
      - description: 'The number of results to return. The default value is 50, minimum
          2 and maximum 1000.

          '
        in: query
        name: limit
        required: false
        type: integer
      - description: "The metric ID after which to start fetching. This also can be\
          \ used for pagination as follows:\n\n**Example usage:**\n\n```\ncurl  -X\
          \ GET \\\n      -H \"Authorization : Bearer <access_key>\"\n       'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170707&end=20170829&interval=1d&limit=20'\n\
          {\n   \"object\": \"list\",\n   \"limit\": 20,\n   \"total_count\": 54,\n\
          \   \"has_more\": true,\n   \"data\": [\n       {\n           \"id\": \"\
          015d1a589800015e306fffff005374617473000\",\n           \"timestamp\": \"\
          2017-07-07T00:00:00Z\",\n           \"transactions\": 26381\n       },\n\
          \       .\n       .\n       .\n       {\n           \"id\": \"015d7c316c00015e306fffff005374617473000\"\
          ,\n           \"timestamp\": \"2017-07-26T00:00:00Z\",\n           \"transactions\"\
          : 25569\n       }\n   ]\n}\n```\n\nIf the parameter `has more` is true,\
          \ it indicates that the list is not complete and more values are available.\
          \ You can give the last ID of the list as the value of the `after` query\
          \ parameter, and you get the next page of values. You can keep doing this\
          \ until `has more` is false.\n```\ncurl -X GET \\\n     -H \"Authorization\
          \ : Bearer <access_key>\"\n     'https://api.us-east-1.mbedcloud.com/v3/metrics?include=transactions,total_count&start=20170707&end=20170829&interval=1d&limit=20&after=015d7c316c00015e306fffff005374617473000'\n\
          \n{\n   \"object\": \"list\",\n   \"limit\": 20,\n   \"total_count\": 54,\n\
          \   \"after\": \"2017-07-26T00:00:00Z\",\n   \"has_more\": true,\n   \"\
          data\": [\n       {\n           \"id\": \"015d8157c800015e306fffff005374617473000\"\
          ,\n           \"timestamp\": \"2017-07-27T00:00:00Z\",\n           \"transactions\"\
          : 27366\n       },\n     .\n     .\n     .\n       {\n           \"id\"\
          : \"015de3309c00015e306fffff005374617473000\",\n           \"timestamp\"\
          : \"2017-08-15T00:00:00Z\",\n           \"transactions\": 24707\n      \
          \ }\n   ]\n}\n```\n"
        in: query
        name: after
        required: false
        type: string
      - description: 'The order of the records to return. Available values are ASC
          and DESC. The default value is ASC.

          '
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: '#/definitions/successful-response'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/error-response'
        401:
          description: Authentication failure.
          schema:
            $ref: '#/definitions/error-response'
        403:
          description: Access denied.
          schema:
            $ref: '#/definitions/error-response'
      summary: Provides account-specific statistics for other cloud services.
      tags:
      - Usage - service metrics
      x-origin: /home/circleci/project/statistics/public/rest-api-v3-external.yaml
  /v3/policy-groups:
    get:
      description: 'Retrieve an array of policy groups.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/policy-groups \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllGroups
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Filter for group name.
        in: query
        name: name__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups.
      tags:
      - Account - policy groups
      x-filter:
        name:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create a new group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' -d ''{"name": "MyGroup1"}''

        ```'
      operationId: createGroup
      parameters:
      - description: Details of the group to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupCreationInfo'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, invalid group name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: A group with that name already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}:
    delete:
      description: 'Delete a group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteGroup
      parameters:
      - description: The ID of the group to delete.
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, or Administrators group cannot be removed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve a policy group.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getGroupSummary
      parameters:
      - description: The ID of the policy group to retrieve.
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a policy group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Add users and API keys to a group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"users": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]}''

        ```'
      operationId: addSubjectsToGroup
      parameters:
      - description: The ID of the group to update.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of users and API keys to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the user or API key does
            not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user of this API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add members to a group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update a group name.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"name": "TestGroup2"}''

        ```'
      operationId: updateGroupName
      parameters:
      - description: The ID of the group to update.
        in: path
        name: group_id
        required: true
        type: string
      - description: Details of the group to create.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupUpdateInfo'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the group name is too long.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update the group name.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/api-keys:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API keys from groups.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/api-keys
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "apikeys": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: removeApiKeysFromGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the array of API keys is
            missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API keys from a group.
      tags:
      - Account - policy groups
      x-deprecation:
        comment: This endpoint is deprecated. Use POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/api-keys/remove/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      deprecated: true
      description: 'Retrieve an array of API keys associated with a policy group.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/api-keys
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getApiKeysOfGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApiKeyInfoRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get the API keys of a policy group.
      tags:
      - Account - policy groups
      x-deprecation:
        comment: This endpoint is deprecated, GET https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/applications
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      deprecated: true
      description: 'Add API keys to the group.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/api-keys
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "apikeys" : ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: addApiKeysToGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the group Id does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden. Adding an API key to the 'Administrators' group
            is restricted to administrators.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API keys to the group.
      tags:
      - Account - policy groups
      x-deprecation:
        comment: This endpoint is deprecated, use POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/api-keys/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/api-keys/add:
    post:
      deprecated: true
      description: 'Add API keys to the group.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/api-keys/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "apikeys" : ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: addListedApiKeysToGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the group Id does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden. Adding an API key to the 'Administrators' group
            is restricted to administrators.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The API key is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add API Keys to the group.
      tags:
      - Account - policy groups
      x-deprecation:
        comment: This endpoint is deprecated, POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/applications/add
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/api-keys/remove:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove API keys from groups.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/api-keys/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "apikeys" : ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: removeListedApiKeysFromGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the array of API keys is
            missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove API keys from a group.
      tags:
      - Account - policy groups
      x-deprecation:
        comment: This endpoint is deprecated, POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/applications/remove
        end_of_life_at: '2021-08-01T00:00:00+00:00'
        issued_at: '2020-08-01T00:00:00+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/applications:
    get:
      description: 'Retrieve an array of applications associated with a policy group.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/applications
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getApplicationsOfGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ApplicationList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get the applications of a policy group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/applications/add:
    post:
      description: 'Add applications to the group.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/applications/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "applications": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: addListedApplicationsToGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of applications to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the group Id does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The application is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add applications to the group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/applications/remove:
    post:
      consumes:
      - application/json
      description: 'Remove applications from groups.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/applications/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "applications": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: removeListedApplicationsFromGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of applications to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the array of applications
            is missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove applications from a group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/users:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: 'Manage policy groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/users
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "users": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: removeUsersFromGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of users to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the user removing themselves
            from the Administrators group.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove users from a group.
      tags:
      - Account - policy groups
      x-deprecation:
        comment: This endpoint is deprecated, POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/users/remove/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve an array of users associated with a policy group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/users
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getUsersOfGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: An optional filter to retrieve users by status.
        in: query
        name: status__eq
        required: false
        type: string
      - description: An optional filter to retrieve users with a specified set of
          statuses.
        in: query
        name: status__in
        required: false
        type: string
      - description: An optional filter to exclude users with a specified set of statuses.
        in: query
        name: status__nin
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get users of a policy group.
      tags:
      - Account - policy groups
      x-filter:
        status:
        - eq
        - in
        - nin
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      deprecated: true
      description: 'Add users to the group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/users
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "users": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: addUsersToGroup.
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the group Id does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add users to the group.
      tags:
      - Account - policy groups
      x-deprecation:
        comment: This endpoint is deprecated, POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/users/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/users/add:
    post:
      description: 'Add users to the group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/users/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "users": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: addListedUsersToGroup.
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of API keys to add to the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the group Id does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add users to the group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/policy-groups/{group_id}/users/remove:
    post:
      consumes:
      - application/json
      description: 'Remove users from a policy group.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group_id}/users/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{ "users": ["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]
        }''

        ```'
      operationId: removeListedUsersFromGroup
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        type: string
      - description: A list of users to remove from the group.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubjectList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummary'
        '400':
          description: Error in input data, for example, the user removing themselves
            from the Administrators group.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove users from a group.
      tags:
      - Account - policy groups
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/server-credentials:
    get:
      description: 'Return all (bootstrap and LwM2M) server credentials for client
        to connect to bootstrap or LwM2M server.


        **Example:**

        ```

        curl -X GET http://api.us-east-1.mbedcloud.com/v3/server-credentials \

        -H "Authorization: Bearer <access_key>"

        ```'
      operationId: getAllServerCredentials
      produces:
      - application/json
      responses:
        200:
          description: All server credentials fetched successfully.
          examples:
            Success:
              bootstrap:
                certificate: '-----BEGIN CERTIFICATE-----\nMIICNTCCAdugAwIBAgIQXCeldn1YhYpDkaBhq8+mWTAKBggqhkjOPQQDAjByMQsw\nCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNVBAcTCUNh\nbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIEludGVncmF0\naW9uIEJvb3RzdHJhcENBMCAXDTE3MDUxNTE5NDkxMVoYDzIwNTIwNTE1MTk1OTEw\nWjByMQswCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNV\nBAcTCUNhbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIElu\ndGVncmF0aW9uIEJvb3RzdHJhcENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE\ni3yGw4hU5l/gV04brCmC6n2RAGOnSgW8VMVxJzMZGy76Qfh6mgxd/LM3AZnFyb54\nWx3ssBod3ORvVwT0Osqo0qNRME8wCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMB\nAf8wHQYDVR0OBBYEFBPvafpiPwCG9AW4tuay8dtpELQ5MBAGCSsGAQQBgjcVAQQD\nAgEAMAoGCCqGSM49BAMCA0gAMEUCIQCiUIgPVegmSeb1cYYzKQVM+f0fFJiShdlc\nSAKewnmoWQIgPv48oL/TDxWDVrzy+hYmesFoqryRPGlENvl0oYJ2em4=\n-----END
                  CERTIFICATE-----'
                url: coaps://coap.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000
              lwm2m:
                certificate: '-----BEGIN CERTIFICATE-----\nMIICMDCCAdWgAwIBAgIQJvkI/PHARqRKTSzxlCf5HzAKBggqhkjOPQQDAjBvMQsw\nCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNVBAcTCUNh\nbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEhMB8GA1UEAxMYQVJNIEludGVncmF0\naW9uIExXTTJNIENBMCAXDTE3MDIxMjEwMzc1MloYDzIwNTIwMjEyMTA0NzUyWjBv\nMQswCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNVBAcT\nCUNhbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEhMB8GA1UEAxMYQVJNIEludGVn\ncmF0aW9uIExXTTJNIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEuuqAAS3w\n4bbFX/l2hDGpKaHHqP2grdmU5+xaM6EsjjZDmxjfznEUJLH7FjQOQ/wjd9QT1xGq\nOWCrot8ks+ugxaNRME8wCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYD\nVR0OBBYEFHuhpZSl5Y+VXdTO3A+Kvq2aa2Y+MBAGCSsGAQQBgjcVAQQDAgEAMAoG\nCCqGSM49BAMCA0kAMEYCIQDSBijFMToRjbbLKz/dKpoTMFJ3qtray865XOQyHAL6\nMAIhALOCJKKxZ2tpBw7Nd3SZBpxZsgDAs7s3W8Ab+9lwmLke\n-----END
                  CERTIFICATE-----'
                url: coaps://mds.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000
          schema:
            $ref: '#/definitions/AllServerCredentialsResponseData'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          examples:
            Authentication Error:
              code: 401
              message: Invalid access token.
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: invalid_auth
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Fetch all (Bootstrap and LwM2M) server credentials.
      tags:
      - Security and identity - server credentials
      x-origin: /home/circleci/project/connector-ca/public/swagger.yaml
  /v3/server-credentials/bootstrap:
    get:
      deprecated: true
      description: 'Return bootstrap server credentials for client to connect to bootstrap
        server.


        **Example:**

        ```

        curl -X GET http://api.us-east-1.mbedcloud.com/v3/server-credentials/bootstrap
        \

        -H "Authorization: Bearer <access_key>"

        ```'
      operationId: getBootstrapServerCredentials
      produces:
      - application/json
      responses:
        200:
          description: Bootstrap server credentials fetched successfully.
          examples:
            Success:
              created_at: '2017-12-11T14:22:20.009Z'
              etag: '1'
              id: 015fee4431fd38c98640fbfb00000000
              object: server-credentials
              server_certificate: '-----BEGIN CERTIFICATE-----\nMIICNTCCAdugAwIBAgIQXCeldn1YhYpDkaBhq8+mWTAKBggqhkjOPQQDAjByMQsw\nCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNVBAcTCUNh\nbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIEludGVncmF0\naW9uIEJvb3RzdHJhcENBMCAXDTE3MDUxNTE5NDkxMVoYDzIwNTIwNTE1MTk1OTEw\nWjByMQswCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNV\nBAcTCUNhbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIElu\ndGVncmF0aW9uIEJvb3RzdHJhcENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE\ni3yGw4hU5l/gV04brCmC6n2RAGOnSgW8VMVxJzMZGy76Qfh6mgxd/LM3AZnFyb54\nWx3ssBod3ORvVwT0Osqo0qNRME8wCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMB\nAf8wHQYDVR0OBBYEFBPvafpiPwCG9AW4tuay8dtpELQ5MBAGCSsGAQQBgjcVAQQD\nAgEAMAoGCCqGSM49BAMCA0gAMEUCIQCiUIgPVegmSeb1cYYzKQVM+f0fFJiShdlc\nSAKewnmoWQIgPv48oL/TDxWDVrzy+hYmesFoqryRPGlENvl0oYJ2em4=\n-----END
                CERTIFICATE-----'
              server_uri: coaps://coap.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000
          schema:
            $ref: '#/definitions/ServerCredentialsResponseData'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          examples:
            Authentication Error:
              code: 401
              message: Invalid access token.
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: invalid_auth
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Fetch bootstrap server credentials.
      tags:
      - Security and identity - server credentials
      x-origin: /home/circleci/project/connector-ca/public/swagger.yaml
  /v3/server-credentials/lwm2m:
    get:
      deprecated: true
      description: 'Return LwM2M server credentials for client to connect to LwM2M
        server.


        **Example:**

        ```

        curl -X GET http://api.us-east-1.mbedcloud.com/v3/server-credentials/lwm2m
        \

        -H "Authorization: Bearer <access_key>"

        ```'
      operationId: getL2M2MServerCredentials
      produces:
      - application/json
      responses:
        200:
          description: LwM2M server credentials fetched successfully.
          examples:
            Success:
              created_at: '2017-12-11T14:22:20.009Z'
              etag: '1'
              id: 015fee4431fd38c98640fbfb00000000
              object: server-credentials
              server_certificate: '-----BEGIN CERTIFICATE-----\nMIICNTCCAdugAwIBAgIQXCeldn1YhYpDkaBhq8+mWTAKBggqhkjOPQQDAjByMQsw\nCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNVBAcTCUNh\nbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIEludGVncmF0\naW9uIEJvb3RzdHJhcENBMCAXDTE3MDUxNTE5NDkxMVoYDzIwNTIwNTE1MTk1OTEw\nWjByMQswCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNV\nBAcTCUNhbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIElu\ndGVncmF0aW9uIEJvb3RzdHJhcENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE\ni3yGw4hU5l/gV04brCmC6n2RAGOnSgW8VMVxJzMZGy76Qfh6mgxd/LM3AZnFyb54\nWx3ssBod3ORvVwT0Osqo0qNRME8wCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMB\nAf8wHQYDVR0OBBYEFBPvafpiPwCG9AW4tuay8dtpELQ5MBAGCSsGAQQBgjcVAQQD\nAgEAMAoGCCqGSM49BAMCA0gAMEUCIQCiUIgPVegmSeb1cYYzKQVM+f0fFJiShdlc\nSAKewnmoWQIgPv48oL/TDxWDVrzy+hYmesFoqryRPGlENvl0oYJ2em4=\n-----END
                CERTIFICATE-----'
              server_uri: coaps://mds.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000
          schema:
            $ref: '#/definitions/ServerCredentialsResponseData'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Invalid access token.
          examples:
            Authentication Error:
              code: 401
              message: Invalid access token.
              object: error
              request_id: 015fee4431fd38c98640fbfb00000000
              type: invalid_auth
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Fetch LwM2M server credentials.
      tags:
      - Security and identity - server credentials
      x-origin: /home/circleci/project/connector-ca/public/swagger.yaml
  /v3/service-packages:
    get:
      description: 'Get information for all service packages for the current authenticated
        commercial account. The response is returned in

        descending order by service package created timestamp: first the pending service
        package, then the active service package,

        then the previous service packages.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/service-packages \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getServicePackages
      responses:
        200:
          description: Information for all service packages associated with an account.
          examples:
            application/json:
              active:
                created: '2017-01-01T00:00:00.000Z'
                expires: '2018-01-01T00:00:00.000Z'
                firmware_update_count: 300000
                grace_perid: false
                id: example-service-package-id-3
                modified: '2017-01-01T00:00:00.000Z'
                next_id: example-service-package-id-4
                previous_id: example-service-package-id-2
                start_time: '2017-01-01T00:00:00.000Z'
              object: service-packages
              pending:
                created: '2017-03-01T00:00:00.000Z'
                expires: '2019-01-01T00:00:00.000Z'
                firmware_update_count: 400000
                id: example-service-package-id-4
                modified: '2017-03-01T00:00:00.000Z'
                previous_id: example-service-package-id-3
                start_time: '2018-01-01T00:00:00.000Z'
              previous:
              - created: '2016-01-01T00:00:00.000Z'
                end_time: '2017-02-01T00:00:00.000Z'
                expires: '2017-01-01T00:00:00.000Z'
                firmware_update_count: 200000
                id: example-service-package-id-2
                modified: '2017-02-01T00:00:00.000Z'
                next_id: example-service-package-id-3
                previous_id: example-service-package-id-3
                reason: renewed
                start_time: '2016-01-01T00:00:00.000Z'
              - created: '2015-01-01T00:00:00.000Z'
                end_time: '2016-02-01T00:00:00.000Z'
                expires: '2016-01-01T00:00:00.000Z'
                firmware_update_count: 100000
                id: example-service-package-id-1
                modified: '2016-02-01T00:00:00.000Z'
                next_id: example-service-package-id-2
                previous_id: null
                reason: renewed
                start_time: '2015-01-01T00:00:00.000Z'
          schema:
            $ref: '#/definitions/ServicePackagesResponse'
        401:
          description: Unauthorized access.
          examples:
            application/json:
              code: 401
              message: Access is denied.
              object: error
              request_id: example-request-id
              type: unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedErrorResponse'
        403:
          description: Forbidden.
          examples:
            application/json:
              code: 403
              message: Account is not a commercial account.
              object: error
              request_id: example-request-id
              type: forbidden
          schema:
            $ref: '#/definitions/ForbiddenErrorResponse'
        500:
          description: Internal server error.
          examples:
            application/json:
              code: 500
              message: Unexpected internal server error.
              object: error
              request_id: example-request-id
              type: internal_error
          schema:
            $ref: '#/definitions/InternalServerErrorResponse'
      summary: Get all service packages.
      tags:
      - Usage - billing reports
      x-origin: /home/circleci/project/billing/public/swagger-public-apis.yaml
  /v3/service-packages-quota:
    get:
      description: 'Get the available firmware update quota for the current authenticated
        commercial account.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/service-packages-quota
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getServicePackageQuota
      responses:
        200:
          description: Firmware update quota for the current authenticated commercial
            account.
          examples:
            application/json:
              object: service-package-quota
              quota: 1000
          schema:
            $ref: '#/definitions/ServicePackageQuota'
        401:
          description: Unauthorized access.
          examples:
            application/json:
              code: 401
              message: Access is denied.
              object: error
              request_id: example-request-id
              type: unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedErrorResponse'
        403:
          description: Forbidden.
          examples:
            application/json:
              code: 403
              message: Account is not a commercial account.
              object: error
              request_id: example-request-id
              type: forbidden
          schema:
            $ref: '#/definitions/ForbiddenErrorResponse'
        500:
          description: Internal server error.
          examples:
            application/json:
              code: 500
              message: Unexpected internal server error.
              object: error
              request_id: example-request-id
              type: internal_error
          schema:
            $ref: '#/definitions/InternalServerErrorResponse'
      summary: Service package quota.
      tags:
      - Usage - billing reports
      x-origin: /home/circleci/project/billing/public/swagger-public-apis.yaml
  /v3/service-packages-quota-history:
    get:
      description: 'Get your quota usage history. This API is available only for commercial
        accounts. Aggregator accounts can see their own and tenant quota usage data.

        Data is in ascending order based on creation time.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/service-packages-quota-history
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getServicePackageQuotaHistory
      parameters:
      - description: Maximum number of quota history entries in one paged response.
        format: int32
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        required: false
        type: integer
      - description: Results after specified entry ID.
        in: query
        maxLength: 32
        minLength: 32
        name: after
        required: false
        type: string
      - description: 'Record order. Acceptable values: ASC, DESC. Default: ASC.'
        enum:
        - ASC
        - DESC
        in: query
        name: order
        required: false
        type: string
      responses:
        200:
          description: Quota history for the currently authenticated commercial account.
          examples:
            application/json:
              after: null
              data:
              - added: '2017-10-10T10:45:12.896Z'
                amount: 20
                id: 787148a58f51434e938f8e0e54c09699
                reason: package_creation
                reservation: null
                service_package:
                  expires: '2018-10-10T10:45:12.300Z'
                  firmware_update_count: 20
                  id: 010c804b945f4c33b2d1e313ed95094e
                  previous_id: null
                  start_time: '2017-10-10T10:45:12.300Z'
              - added: '2017-11-10T13:45:51.273Z'
                amount: -1
                id: b0817554677248a1b038d7fcd2c020c5
                reason: reservation
                reservation:
                  account_id: 10171c6f56084c4f8b53210762650246
                  campaign_name: campaign
                  id: b5322aabe29d458ea6e4402594085a15
                service_package: null
              has_more: false
              limit: 50
              object: service-package-quota-history
              total_count: 2
          schema:
            $ref: '#/definitions/ServicePackageQuotaHistoryResponse'
        401:
          description: Unauthorized access.
          examples:
            application/json:
              code: 401
              message: Access is denied.
              object: error
              request_id: example-request-id
              type: unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedErrorResponse'
        403:
          description: Forbidden.
          examples:
            application/json:
              code: 403
              message: Account is not a commercial account.
              object: error
              request_id: example-request-id
              type: forbidden
          schema:
            $ref: '#/definitions/ForbiddenErrorResponse'
        500:
          description: Internal server error.
          examples:
            application/json:
              code: 500
              message: Unexpected internal server error.
              object: error
              request_id: example-request-id
              type: internal_error
          schema:
            $ref: '#/definitions/InternalServerErrorResponse'
      summary: Service package quota history.
      tags:
      - Usage - service packages
      x-origin: /home/circleci/project/billing/public/swagger-public-apis.yaml
  /v3/trusted-certificates:
    get:
      description: 'Retrieve an array of trusted certificates.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/trusted-certificates \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllCertificates
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Filter for certificate name.
        in: query
        name: name__eq
        required: false
        type: string
      - description: Service filter, either LwM2M or bootstrap.
        in: query
        name: service__eq
        required: false
        type: string
      - description: Expire filter in days.
        format: int32
        in: query
        name: expire__eq
        required: false
        type: integer
      - description: 'Device execution mode: 1 for developer certificates or another
          natural integer value.'
        format: int32
        in: query
        name: device_execution_mode__eq
        required: false
        type: integer
      - description: Device execution mode `not_equals` filter.
        format: int32
        in: query
        name: device_execution_mode__neq
        required: false
        type: integer
      - description: Owner name filter.
        in: query
        name: owner__eq
        required: false
        type: string
      - description: Enrollment mode filter.
        in: query
        name: enrollment_mode__eq
        required: false
        type: boolean
      - description: Filter for certificate status.
        in: query
        name: status__eq
        required: false
        type: string
      - description: 'Issuer filter. Finds all matches where the filter value is a
          case-insensitive substring of the result. Example: issuer__like=cn=iss matches
          CN=issuer.'
        in: query
        name: issuer__like
        required: false
        type: string
      - description: 'Subject filter. Finds all matches where the filter value is
          a case-insensitive substring of the result. Example: subject__like=cn=su
          matches CN=subject.'
        in: query
        name: subject__like
        required: false
        type: string
      - description: Filter for certificate fingerprint.
        in: query
        name: certificate_fingerprint__eq
        required: false
        type: string
      - description: Filter for finding certificates by validity. True returns certificates
          which are not yet expired. False returns certificates which have expired.
        in: query
        name: valid__eq
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/TrustedCertificateRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all trusted certificates.
      tags:
      - Security and identity - certificates
      x-filter:
        certificate_fingerprint:
        - eq
        device_execution_mode:
        - eq
        - neq
        enrollment_mode:
        - eq
        expire:
        - eq
        issuer:
        - like
        name:
        - eq
        owner:
        - eq
        service:
        - eq
        status:
        - eq
        subject:
        - like
        valid:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Upload new trusted certificates.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/trusted-certificates \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d {"name": "myCert1", "description": "very important cert", "certificate":
        "certificate_data", "service": "lwm2m"}

        ```'
      operationId: addCertificate
      parameters:
      - description: A trusted certificate object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TrustedCertificateReq'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/TrustedCertificateResp'
        '400':
          description: Invalid certificate data, or missing or invalid parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden, only available for administrators of commercial
            accounts.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Certificate with the given name or subject already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload a new trusted certificate.
      tags:
      - Security and identity - certificates
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/trusted-certificates/{cert_id}:
    delete:
      description: 'Delete a trusted certificate.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteCertificate
      parameters:
      - description: The ID of the trusted certificate to delete.
        in: path
        name: cert_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A certificate not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a trusted certificate by ID.
      tags:
      - Security and identity - certificates
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve a trusted certificate.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getCertificate
      parameters:
      - description: The ID of the trusted certificate to retrieve.
        in: path
        name: cert_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/TrustedCertificateResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A certificate not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a trusted certificate.
      tags:
      - Security and identity - certificates
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update existing trusted certificates.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert_id}
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d {"description": "very important cert"}

        ```'
      operationId: updateCertificate
      parameters:
      - description: The ID of the trusted certificate to update.
        in: path
        name: cert_id
        required: true
        type: string
      - description: A trusted certificate object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TrustedCertificateUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/TrustedCertificateResp'
        '400':
          description: Invalid certificate data, or missing or invalid parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A certificate not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Certificate with the given name or subject already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update trusted certificate.
      tags:
      - Security and identity - certificates
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/update-campaigns:
    get:
      description: 'Get update campaigns for devices specified by a filter.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/update-campaigns \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_list
      parameters:
      - description: How many objects to retrieve in the page. The minimum limit is
          2 and the maximum is 1000. Limit values outside of this range are set to
          the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: 'The order of the records. Acceptable values: ASC, DESC. Default:
          ASC.'
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'A comma-separated list of data fields to return. Currently supported:
          total_count.'
        in: query
        name: include
        type: string
      - description: "URL-encoded query string parameter to filter returned data\n\
          \n`?filter={URL-encoded query string}`\n\n\n###### Filterable fields:\n\n\
          The below table lists all the fields that can be filtered on with certain\
          \ filters:\n\n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n     \
          \ <th>= / __eq / __neq</th>\n      <th>__in /  __nin</th>\n      <th>__lte\
          \ / __gte</th>\n    <tr>\n  <thead>\n  <tbody>\n    <tr>\n      <td>created_at</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n \
          \   </tr>\n    <tr>\n      <td>description</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n   \
          \   <td>device_filter</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n\
          \      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>etag</td>\n     \
          \ <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n\
          \    <tr>\n      <td>finished</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n      <td>id</td>\n \
          \     <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n  \
          \  </tr>\n    <tr>\n      <td>name</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>root_manifest_id</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n      <td>&nbsp;</td>\n \
          \   </tr>\n    <tr>\n      <td>started_at</td>\n      <td>\u2713</td>\n\
          \      <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n    <tr>\n   \
          \   <td>state</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n     \
          \ <td>&nbsp;</td>\n    </tr>\n    <tr>\n      <td>updated_at</td>\n    \
          \  <td>\u2713</td>\n      <td>\u2713</td>\n      <td>\u2713</td>\n    </tr>\n\
          \    <tr>\n      <td>when</td>\n      <td>\u2713</td>\n      <td>\u2713\
          </td>\n      <td>\u2713</td>\n    </tr>\n  </tbody>\n</table>\n&nbsp;\n\n\
          The query string is made up of key-value pairs separated by ampersands.\
          \ For example, this query:\n`key1__eq=value1&key2__eq=value2&key3__eq=value3`\n\
          \nwould be URL-encoded as:\n`?filter=key1__eq%3Dvalue1%26key2__eq%3Dvalue2%26key3__eq%3Dvalue3`\n\
          \n\n**Filtering by campaign properties**\n`state__eq=[draft|scheduled|devicefectch|devicecopy|publishing|deploying|deployed|manifestremoved|expired]`\n\
          \n`root_manifest_id__eq=43217771234242e594ddb433816c498a`\n\n**Filtering\
          \ on date-time fields**\n\nDate-time fields should be specified in UTC RFC3339\
          \ format, `YYYY-MM-DDThh:mm:ss.msZ`. There are three permitted variations:\n\
          \n* UTC RFC3339 with milliseconds. Example: `2016-11-30T16:25:12.1234Z`\n\
          * UTC RFC3339 without milliseconds. Example: `2016-11-30T16:25:12Z`\n* UTC\
          \ RFC3339 shortened without milliseconds and punctuation. Example: `20161130T162512Z`\n\
          \nDate-time filtering supports three operators:\n\n* equality by appending\
          \ `__eq` to the field name\n* greater than or equal to by appending `__gte`\
          \ to the field name\n* less than or equal to by appending `__lte` to the\
          \ field name\n\n`{field name}[|__eq|__lte|__gte]={UTC RFC3339 date-time}`\n\
          \nTime ranges may be specified by including both the `__gte` and `__lte`\
          \ forms in the filter. For example:\n\n`created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering on multiple fields**\n\n`state__eq=deployed&created_at__gte=2016-11-30T16:25:12.1234Z&created_at__lte=2016-12-30T00:00:00Z`\n\
          \n**Filtering with filter operators**\n\nString field filtering supports\
          \ the following operators:\n\n* equality: `__eq`\n* non-equality: `__neq`\n\
          * in : `__in`\n* not in: `__nin`\n\nFor `__in` and `__nin` filters list\
          \ of parameters must be comma-separated:\n\n`name__in=fw-image1,fw-image2`"
        in: query
        name: filter
        type: string
      - description: in filter for the "created_at" field
        in: query
        name: created_at__in
        type: string
      - description: nin filter for the "created_at" field
        in: query
        name: created_at__nin
        type: string
      - description: lte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__lte
        type: string
      - description: gte filter for the "created_at" field
        format: date-time
        in: query
        name: created_at__gte
        type: string
      - description: eq filter for the "description" field
        in: query
        name: description__eq
        type: string
      - description: neq filter for the "description" field
        in: query
        name: description__neq
        type: string
      - description: in filter for the "description" field
        in: query
        name: description__in
        type: string
      - description: nin filter for the "description" field
        in: query
        name: description__nin
        type: string
      - description: eq filter for the "device_filter" field
        in: query
        name: device_filter__eq
        type: string
      - description: neq filter for the "device_filter" field
        in: query
        name: device_filter__neq
        type: string
      - description: in filter for the "device_filter" field
        in: query
        name: device_filter__in
        type: string
      - description: nin filter for the "device_filter" field
        in: query
        name: device_filter__nin
        type: string
      - description: in filter for the "finished" field
        in: query
        name: finished__in
        type: string
      - description: nin filter for the "finished" field
        in: query
        name: finished__nin
        type: string
      - description: lte filter for the "finished" field
        format: date-time
        in: query
        name: finished__lte
        type: string
      - description: gte filter for the "finished" field
        format: date-time
        in: query
        name: finished__gte
        type: string
      - description: eq filter for the "id" field
        in: query
        name: id__eq
        type: string
      - description: neq filter for the "id" field
        in: query
        name: id__neq
        type: string
      - description: in filter for the "id" field
        in: query
        name: id__in
        type: string
      - description: nin filter for the "id" field
        in: query
        name: id__nin
        type: string
      - description: eq filter for the "name" field
        in: query
        name: name__eq
        type: string
      - description: neq filter for the "name" field
        in: query
        name: name__neq
        type: string
      - description: in filter for the "name" field
        in: query
        name: name__in
        type: string
      - description: nin filter for the "name" field
        in: query
        name: name__nin
        type: string
      - description: eq filter for the "root_manifest_id" field
        in: query
        name: root_manifest_id__eq
        type: string
      - description: neq filter for the "root_manifest_id" field
        in: query
        name: root_manifest_id__neq
        type: string
      - description: in filter for the "root_manifest_id" field
        in: query
        name: root_manifest_id__in
        type: string
      - description: nin filter for the "root_manifest_id" field
        in: query
        name: root_manifest_id__nin
        type: string
      - description: in filter for the "started_at" field
        in: query
        name: started_at__in
        type: string
      - description: nin filter for the "started_at" field
        in: query
        name: started_at__nin
        type: string
      - description: lte filter for the "started_at" field
        format: date-time
        in: query
        name: started_at__lte
        type: string
      - description: gte filter for the "started_at" field
        format: date-time
        in: query
        name: started_at__gte
        type: string
      - description: eq filter for the "state" field
        in: query
        name: state__eq
        type: string
      - description: neq filter for the "state" field
        in: query
        name: state__neq
        type: string
      - description: in filter for the "state" field
        in: query
        name: state__in
        type: string
      - description: nin filter for the "state" field
        in: query
        name: state__nin
        type: string
      - description: in filter for the "updated_at" field
        in: query
        name: updated_at__in
        type: string
      - description: nin filter for the "updated_at" field
        in: query
        name: updated_at__nin
        type: string
      - description: lte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__lte
        type: string
      - description: gte filter for the "updated_at" field
        format: date-time
        in: query
        name: updated_at__gte
        type: string
      - description: in filter for the "when" field
        in: query
        name: when__in
        type: string
      - description: nin filter for the "when" field
        in: query
        name: when__nin
        type: string
      - description: lte filter for the "when" field
        format: date-time
        in: query
        name: when__lte
        type: string
      - description: gte filter for the "when" field
        format: date-time
        in: query
        name: when__gte
        type: string
      responses:
        '200':
          description: Request successful.
          schema:
            $ref: '#/definitions/UpdateCampaignPage'
        '400':
          description: 'Validation error: The data used to update the campaign did
            not validate.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unable to find content.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List all campaigns
      tags:
      - Device update - campaigns
      x-filter:
        created_at:
        - in
        - nin
        - lte
        - gte
        description:
        - eq
        - neq
        - in
        - nin
        device_filter:
        - eq
        - neq
        - in
        - nin
        finished:
        - in
        - nin
        - lte
        - gte
        id:
        - eq
        - neq
        - in
        - nin
        name:
        - eq
        - neq
        - in
        - nin
        root_manifest_id:
        - eq
        - neq
        - in
        - nin
        started_at:
        - in
        - nin
        - lte
        - gte
        state:
        - eq
        - neq
        - in
        - nin
        updated_at:
        - in
        - nin
        - lte
        - gte
        when:
        - in
        - nin
        - lte
        - gte
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    post:
      description: "Create an update campaign.\n\nTo include a filter for targeted\
        \ devices, refer to the filter using `<filter_id>` in the message body.\n\
        <br>\n**Usage example:**\n```\ncurl -X POST https://api.us-east-1.mbedcloud.com/v3/update-campaigns\
        \ \\\n-H 'Authorization: Bearer <api_key>' \\\n-H 'content-type: application/json;charset=UTF-8'\
        \ \\\n-d '{\n  \"campaign_strategy\": \"one-shot\",\n  \"description\": \"\
        Campaign is for ...\",\n  \"device_filter\": \"<filter_id>\",\n  \"name\"\
        : \"campaign\",\n  \"root_manifest_id\": \"56780000000000a5b70000000000bd98\"\
        \n}'\n```\n"
      operationId: Update_Campaign_create
      parameters:
      - description: Update campaign.
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/UpdateCampaignPostRequest'
      responses:
        '201':
          description: Update campaign created.
          schema:
            $ref: '#/definitions/UpdateCampaign'
        '400':
          description: 'Validation error: The data used to create the campaign did
            not validate.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict, a campaign with the same name already exists
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a campaign
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}:
    delete:
      description: 'Delete an update campaign.

        <br>

        **Usage example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/update-campaigns/1123457f9012ab567890120000789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_destroy
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '204':
          description: Update campaign deleted.
        '400':
          description: 'Validation error: The data used to update the campaign did
            not validate.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Update campaign can't be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: Conflict - Cannot delete the campaign while in the current
            phase.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a campaign
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    get:
      description: 'Get an update campaign.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/update-campaigns/11234567f9012ab56890120000789012
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_retrieve
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '200':
          description: Retrieved result successfully.
          schema:
            $ref: '#/definitions/UpdateCampaign'
        '400':
          description: 'Validation error: The data used to update the campaign did
            not validate.

            '
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Unable to find campaign.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a campaign.
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
    put:
      description: "Modify an update campaign.\n<br>\n**Usage example:**\n```\ncurl\
        \ -X PUT https://api.us-east-1.mbedcloud.com/v3/update-campaigns/1123007f9012ab567890120000789012\
        \ \\\n-H 'Authorization: Bearer <api_key>' \\\nd '{\n  \"description\": \"\
        Campaign is for ...\",\n  \"device_filter\": \"123400000000000000000000000ae45\"\
        ,\n  \"name\": \"campaign\",\n  \"root_manifest_id\": \"5678000000000000000000000000bd98\"\
        ,\n}'\n```\n"
      operationId: Update_Campaign_update
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: Update campaign.
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/UpdateCampaignPutRequest'
      responses:
        '200':
          description: Update campaign updated.
          schema:
            $ref: '#/definitions/UpdateCampaign'
        '400':
          description: 'Validation error: The data used to update the campaign did
            not validate.

            '
        '401':
          description: Not authenticated.
        '403':
          description: Fields apart from 'name', 'description' and 'state' cannot
            be modified when the state is not 'draft'.
        '404':
          description: Update campaign can't be found.
      summary: Modify a campaign
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/archive:
    post:
      description: 'Archive a campaign.

        <br>

        **Usage example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/update-campaigns/016e83ddc649000000000001001000b8/archive
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_archive
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '202':
          description: The campaign has been archived.
        '400':
          description: Unable to change the phase of the campaign.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the campaign.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Cannot archive the campaign while in the current phase.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Archive a campaign.
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/campaign-device-metadata:
    get:
      description: 'Get metadata for all devices in a campaign.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/update-campaigns/11234567f9012ab56790120000789012/campaign-device-metadata
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_Metadata_list
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: How many objects to retrieve in the page. The minimum limit is
          2 and the maximum is 1000. Limit values outside of this range are set to
          the closest limit.
        in: query
        maximum: 1000
        minimum: 2
        name: limit
        type: integer
      - description: ASC or DESC.
        in: query
        name: order
        type: string
      - description: The ID of the item after which to retrieve the next page.
        in: query
        name: after
        type: string
      - description: 'A comma-separated list of data fields to return. Currently supported:
          total_count.'
        in: query
        name: include
        type: string
      responses:
        200:
          description: Request successful.
          schema:
            $ref: '#/definitions/CampaignDeviceMetadataPage'
        401:
          description: Unauthorized
      summary: List all campaign device metadata
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/campaign-device-metadata/{campaign_device_metadata_id}:
    get:
      description: 'Get update campaign metadata for a specific device.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/update-campaigns/5d645eaec2315a89900000655cd94fa8/campaign-device-metadata/016e83ddc645000000000001001000f6
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_Metadata_retrieve
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: The campaign device metadata ID.
        in: path
        name: campaign_device_metadata_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        200:
          description: Request successful.
          schema:
            $ref: '#/definitions/CampaignDeviceMetadata'
        401:
          description: Unauthorized.
        404:
          description: Not Found.
      summary: Get a campaign device metadata
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/metrics:
    get:
      deprecated: true
      description: 'Get [information](https://www.pelion.com/docs/device-management/current/updating-firmware/campaign-metrics-in-portal.html)
        for a campaign based on **SUCCESS**, **FAIL**, or **SKIPPED** criteria for
        each device.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/update-campaigns/1123467f9012ab567890120000789012/metrics
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_metrics
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        200:
          description: Request successful.
          schema:
            $ref: '#/definitions/CampaignMetrics'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Unable to find campaign or the campaign hasn't started.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get campaign metrics
      tags:
      - Device update - campaigns
      x-deprecation:
        comment: Use GET /v3/update-campaigns/{campaign_id}/statistics instead.
        end_of_life_at: '2020-04-10T13:41:00+00:00'
        issued_at: '2019-04-10T13:41:00+00:00'
        links: []
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/start:
    post:
      description: 'Start a campaign.

        <br>

        **Usage example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/update-campaigns/5d645eaec2315a8900002e655cd94fa8/start
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_start
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '202':
          description: The campaign is starting.
        '400':
          description: Unable to change the phase of the campaign.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the campaign.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Cannot start the campaign while in the current phase.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Start a campaign.
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/statistics:
    get:
      description: 'Get a list of statistics for a campaign, including the number
        of devices reporting specific event codes.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/update-campaigns/11234567f9012ab56780120000789012/statistics
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_statistics_list
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/EventTypeSummaryList'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get statistics for a campaign
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/statistics/{summary_status_id}:
    get:
      description: 'Get the count of successfully updated, skipped, and failed devices.

        <br>

        **Usage example:**

        ```

        curl https://api.us-east-1.mbedcloud.com/v3/update-campaigns/12345678901234567890123456789012/statistics/fail
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_statistics_retrieve
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: The summary status. For example, fail.
        enum: &id037
        - fail
        - success
        - info
        - skipped
        in: path
        name: summary_status_id
        required: true
        type: string
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/EventTypeSummary'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a status summary
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/statistics/{summary_status_id}/event_types:
    get:
      description: 'Get a list of events grouped by summary.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/update-campaigns/12345678901234567890123456789012/statistics/skipped/event_types
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_event_types_list
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: The summary status. For example, fail.
        enum: *id037
        in: path
        name: summary_status_id
        required: true
        type: string
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/EventTypeList'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a list of events grouped by summary
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/statistics/{summary_status_id}/event_types/{event_type_id}:
    get:
      description: 'Get the count for a specific event type, for example, succeeded,
        failed or skipped.

        <br>

        **Usage example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/update-campaigns/12345678901234567890123456789012/statistics/success/event_types/sys_112
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_event_types_retrieve
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      - description: The summary status. For example, fail.
        enum: *id037
        in: path
        name: summary_status_id
        required: true
        type: string
      - description: 'The event type parameter. Event types are grouped into the four
          values of the summary_status, i.e. fail, success, info and skipped.

          success: SYS_112, UPD4_OK_M1, UPD1_OK_1, UPD4_OK_100, UPD2_OK_19, UPD2_OK_1,
          UPD2_OK_18

          fail: UPD4_FAIL_508, UPD4_FAIL_217, UPD4_FAIL_305, UPD4_FAIL_405, UPD4_FAIL_511,
          UPD4_FAIL_220, UPD1_FAIL_6, UPD4_FAIL_302, UPD2_FAIL_11, UPD4_FAIL_219,
          SYS_103, UPD4_FAIL_407, UPD4_FAIL_224, SYS_111, UPD4_FAIL_210, UPD4_FAIL_306,
          UPD2_FAIL_14, UPD4_FAIL_221, UPD4_FAIL_315, UPD4_FAIL_403, UPD2_FAIL_12,
          UPD4_FAIL_207, UPD4_FAIL_215, UPD4_FAIL_504, UPD2_FAIL_3, UPD4_FAIL_103,
          UPD2_FAIL_16, UPD2_FAIL_6, UPD4_FAIL_101, UPD4_FAIL_202, UPD4_FAIL_313,
          UPD4_FAIL_209, UPD4_FAIL_301, UPD2_FAIL_4, SYS_123, UPD4_FAIL_314, UPD4_FAIL_205,
          UPD4_FAIL_212, UPD4_FAIL_311, UPD4_FAIL_304, UPD4_FAIL_223, UPD4_FAIL_226,
          UPD1_FAIL_2, UPD4_FAIL_203, UPD4_FAIL_507, UPD4_FAIL_402, UPD4_FAIL_204,
          UPD4_FAIL_510, UPD1_FAIL_7, UPD4_FAIL_218, UPD1_FAIL_8, UPD2_FAIL_5, UPD4_FAIL_201,
          UPD4_FAIL_213, UPD4_FAIL_400, UPD2_FAIL_17, UPD4_FAIL_310, UPD4_FAIL_206,
          UPD4_FAIL_102, UPD2_FAIL_7, UPD1_FAIL_9, UPD4_FAIL_22, UPD4_FAIL_502, UPD4_FAIL_211,
          UPD1_FAIL_4, UPD1_FAIL_3, UPD4_FAIL_409, UPD4_FAIL_408, UPD4_FAIL_200, SYS_104,
          UPD2_FAIL_10, UPD2_FAIL_15, UPD4_FAIL_216, UPD4_FAIL_214, UPD4_FAIL_308,
          UPD4_FAIL_401, UPD1_FAIL_5, UPD2_FAIL_13, UPD4_FAIL_208, UPD2_FAIL_2, UPD4_FAIL_312,
          UPD4_FAIL_509, UPD4_FAIL_303, UPD4_FAIL_512, UPD2_FAIL_9, UPD4_FAIL_316,
          UPD4_FAIL_506, SYS_101, UPD4_FAIL_309, UPD4_FAIL_307, UPD4_FAIL_404, UPD4_FAIL_503,
          UPD4_FAIL_225, UPD4_FAIL_300, UPD4_FAIL_500, UPD4_FAIL_505, UPD4_FAIL_406,
          UPD4_FAIL_222, UPD4_FAIL_501, UPD2_FAIL_8, SYS_124

          info: UPD1_STATE_0, UPD2_REPORT_HASH, UPD1_REPORT_HASH, UPD2_STATE_5, UPD2_STATE_0,
          UPD2_STATE_4, UPD2_STATE_3, SYS_107, SYS_105, SYS_106, UPD1_REPORT_VERSION,
          UPD1_STATE_2, SYS_116, SYS_108, SYS_100, UPD2_STATE_8, UPD2_STATE_7, SYS_120,
          UPD2_STATE_1, SYS_113, UPD2_STATE_6, UPD2_REPORT_VERSION, SYS_115, UPD2_STATE_2,
          SYS_114, UPD1_STATE_3, UPD1_STATE_1, SYS_125

          skipped: SYS_121, SYS_118, SYS_122, SYS_110, SYS_117

          '
        in: path
        name: event_type_id
        required: true
        type: string
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/EventType'
        401:
          description: Not Authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an event type for a campaign
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/update-campaigns/{campaign_id}/stop:
    post:
      description: 'Stop a campaign. Stopping is a process that requires the campaign
        go through several [phases](https://www.pelion.com/docs/device-management/current/updating-firmware/device-management-update-using-the-apis.html).

        <br>

        **Usage example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/update-campaigns/016e83ddc645000000000001001000b5/stop
        \

        -H ''Authorization: Bearer <api_key>''

        ```

        '
      operationId: Update_Campaign_stop
      parameters:
      - description: The campaign ID.
        in: path
        name: campaign_id
        pattern: '[A-Fa-f0-9]{32}'
        required: true
        type: string
      responses:
        '202':
          description: The campaign is stopping.
        '400':
          description: Unable to change the phase of the campaign.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the campaign.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Cannot stop the campaign while in the current phase.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Stop a campaign.
      tags:
      - Device update - campaigns
      x-origin: /home/circleci/project/update-service/public/swagger.yml
  /v3/user-invitations:
    get:
      description: 'Retrieve an array of active user invitations sent by email.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/user-invitations \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllInvitations
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: Filter to retrieve user invitations by a specified login profile.
        in: query
        name: login_profiles__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInvitationRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get user invitations.
      tags:
      - Account - user invitations
      x-filter:
        login_profiles:
        - eq
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Invite a new or existing user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/user-invitations \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d {"email": "myemail@company.com"}

        ```'
      operationId: createInvitation
      parameters:
      - description: A user invitation object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserInvitationReq'
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/UserInvitationResp'
        '400':
          description: Error in input data, for example, an invalid email address.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a user invitation.
      tags:
      - Account - user invitations
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/user-invitations/{invitation_id}:
    delete:
      description: 'Delete an active user invitation sent to a new or existing user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/user-invitations/{invitation_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteInvitation
      parameters:
      - description: The ID of the invitation to delete.
        in: path
        name: invitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An invitation with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a user invitation.
      tags:
      - Account - user invitations
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the details of an active user invitation.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/user-invitations/{invitation_id}
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getInvitation
      parameters:
      - description: The ID of the invitation to retrieve.
        in: path
        name: invitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInvitationResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: An invitation with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Details of a user invitation.
      tags:
      - Account - user invitations
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/users:
    get:
      description: 'Retrieve an array of users.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/users \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getAllUsers
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: Filter for email address
        in: query
        name: email__eq
        required: false
        type: string
      - description: Filter for status, for example, active or reset.
        in: query
        name: status__eq
        required: false
        type: string
      - description: An optional filter to retrieve users with a specified set of
          statuses.
        in: query
        name: status__in
        required: false
        type: string
      - description: An optional filter to exclude users with a specified set of statuses.
        in: query
        name: status__nin
        required: false
        type: string
      - description: An optional filter to retrieve users with a specified login profile.
        in: query
        name: login_profiles__eq
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoRespList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get users.
      tags:
      - Account - users
      x-filter:
        email:
        - eq
        login_profiles:
        - eq
        status:
        - eq
        - in
        - nin
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      description: 'Create or invite a new user to the account. The invited user has
        to accept the invitation by clicking the link in the invitation email.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/users?action=invite \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d {"email": "myemail@company.com"}

        ```'
      operationId: createUser
      parameters:
      - description: A user object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserInfoReq'
      - default: create
        description: Action, either `create` or `invite`.
        in: query
        name: action
        required: false
        type: string
      produces:
      - application/json
      responses:
        '201':
          description: New entity created.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data, for example, an invalid email address.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: A user with the given username or email already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new user.
      tags:
      - Account - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/users/{user_id}:
    delete:
      description: 'Delete a user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/users/{user_id} \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: deleteUser
      parameters:
      - description: The ID of the user to delete.
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Deleted successfully.
        '400':
          description: Bad request, for example, trying to delete active user.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A user with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a user.
      tags:
      - Account - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve the details of a user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/users/{user_id} \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getUser
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A user with the specified ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Details of a user.
      tags:
      - Account - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    put:
      consumes:
      - application/json
      description: 'Update user details.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X PUT https://api.us-east-1.mbedcloud.com/v3/users/{user_id} \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''{"username": "myusername"}''

        ```'
      operationId: updateUser
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        type: string
      - description: A user object with attributes.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserUpdateReq'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data, for example, an invalid email address.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A user with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: A user with the given username or email already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user details.
      tags:
      - Account - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/users/{user_id}/groups:
    delete:
      consumes:
      - application/json
      deprecated: true
      description: 'Remove user from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/users/{user_id}/groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeUserFromGroups
      parameters:
      - description: The ID of the user to remove from the group.
        in: path
        name: user_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A user with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove user from groups.
      tags:
      - Account - users
      x-deprecation:
        comment: This endpoint is deprecated, use POST https://api.us-east-1.mbedcloud.com/v3/users/{user_id}/groups/remove/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    get:
      description: 'Retrieve an array of policy groups associated with a user.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X GET https://api.us-east-1.mbedcloud.com/v3/users/{user_id}/groups
        \

        -H ''Authorization: Bearer <access_key>''

        ```'
      operationId: getGroupsOfUser
      parameters:
      - default: 50
        description: The number of results to return (2-1000). Default 50.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      - description: The entity ID to retrieve after the given one.
        in: query
        name: after
        required: false
        type: string
      - default: ASC
        description: 'Record order based on creation. Acceptable values: ASC, DESC.
          Default: ASC.'
        in: query
        name: order
        required: false
        type: string
      - description: 'Comma-separated additional data to return. Currently supported:
          total_count.'
        in: query
        name: include
        required: false
        type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupSummaryList'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A user with the given ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get policy groups for a user.
      tags:
      - Account - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Add user to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/users/{user_id}/groups
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addUserToGroups
      parameters:
      - description: The ID of the user to add to the group.
        in: path
        name: user_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A user or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add user to a list of groups.
      tags:
      - Account - users
      x-deprecation:
        comment: This endpoint is deprecated, use POST https://api.us-east-1.mbedcloud.com/v3/users/{user_id}/groups/add/
        end_of_life_at: '2020-07-11T11:04:57+00:00'
        issued_at: '2019-07-11T11:04:57+00:00'
        links: []
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/users/{user_id}/groups/add:
    post:
      consumes:
      - application/json
      description: 'Add user to groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/users/{user_id}/groups/add
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: addUserToListedGroups
      parameters:
      - description: The ID of the user to add to the group.
        in: path
        name: user_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A user or group with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The user is a member of the group already.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add user to a list of groups.
      tags:
      - Account - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
  /v3/users/{user_id}/groups/remove:
    post:
      consumes:
      - application/json
      description: 'Remove user from groups.

        <b>Note:</b> This endpoint is restricted to administrators.


        **Example:**

        ```

        curl -X POST https://api.us-east-1.mbedcloud.com/v3/users/{user_id}/groups/remove
        \

        -H ''Authorization: Bearer <access_key>'' \

        -H ''content-type: application/json'' \

        -d ''["0162056a9a1586f30242590700000000","0117056a9a1586f30242590700000000"]''

        ```'
      operationId: removeUserFromListedGroups
      parameters:
      - description: The ID of the user to remove from the group.
        in: path
        name: user_id
        required: true
        type: string
      - description: A list of IDs of the groups to update.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupIdList'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/UserInfoResp'
        '400':
          description: Error in input data.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Authentication failure.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: A user with that ID does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove user from groups.
      tags:
      - Account - users
      x-origin: /home/circleci/project/auth/public/iam-identity-swagger.yaml
produces:
- application/json
schemes:
- https
security:
- Bearer: []
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
