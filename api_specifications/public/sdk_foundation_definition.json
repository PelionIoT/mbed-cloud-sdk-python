{
  "groups": [
    {
      "entities": [
        "password_policy",
        "login_history",
        "parent_account",
        "policy",
        "login_profile",
        "active_session",
        "user",
        "subtenant_user",
        "user_invitation",
        "subtenant_user_invitation",
        "api_key",
        "account"
      ],
      "enums": [
        "user_status_enum",
        "user_order_enum",
        "subtenant_user_status_enum",
        "user_invitation_order_enum",
        "api_key_status_enum",
        "api_key_order_enum",
        "account_mfa_status_enum",
        "account_status_enum",
        "account_order_enum"
      ],
      "_key": "Accounts"
    },
    {
      "entities": [
        "device",
        "device_events",
        "device_enrollment_bulk_create",
        "device_enrollment_bulk_delete",
        "device_enrollment"
      ],
      "enums": [
        "device_lifecycle_status_enum",
        "device_deployed_state_enum",
        "device_mechanism_enum",
        "device_state_enum",
        "device_enrollment_bulk_create_status_enum",
        "device_enrollment_bulk_delete_status_enum",
        "device_enrollment_order_enum"
      ],
      "_key": "Devices"
    },
    {
      "entities": [
        "certificate_issuer_config",
        "verification_response",
        "certificate_issuer",
        "certificate_enrollment",
        "server_credentials",
        "trusted_certificate",
        "subtenant_trusted_certificate",
        "developer_certificate"
      ],
      "enums": [
        "certificate_issuer_type_enum",
        "certificate_enrollment_enroll_result_enum",
        "certificate_enrollment_enroll_status_enum",
        "certificate_enrollment_order_enum",
        "certificate_enrollment_include_enum",
        "trusted_certificate_service_enum",
        "trusted_certificate_status_enum",
        "trusted_certificate_order_enum",
        "subtenant_trusted_certificate_service_enum",
        "subtenant_trusted_certificate_status_enum"
      ],
      "_key": "Security"
    }
  ],
  "enums": [
    {
      "entity_name": "account",
      "field_name": "mfa_status",
      "enum_name": "account_mfa_status_enum",
      "values": [
        "enforced",
        "optional"
      ],
      "group_id": "Accounts",
      "_key": "account_mfa_status_enum"
    },
    {
      "entity_name": "account",
      "field_name": "order",
      "enum_name": "account_order_enum",
      "values": [
        "ASC",
        "DESC"
      ],
      "group_id": "Accounts",
      "_key": "account_order_enum"
    },
    {
      "entity_name": "account",
      "field_name": "status",
      "enum_name": "account_status_enum",
      "values": [
        "ACTIVE",
        "ENROLLING",
        "RESTRICTED",
        "SUSPENDED"
      ],
      "group_id": "Accounts",
      "_key": "account_status_enum"
    },
    {
      "entity_name": "api_key",
      "field_name": "order",
      "enum_name": "api_key_order_enum",
      "values": [
        "ASC",
        "DESC"
      ],
      "group_id": "Accounts",
      "_key": "api_key_order_enum"
    },
    {
      "entity_name": "api_key",
      "field_name": "status",
      "enum_name": "api_key_status_enum",
      "values": [
        "ACTIVE",
        "INACTIVE"
      ],
      "group_id": "Accounts",
      "_key": "api_key_status_enum"
    },
    {
      "entity_name": "certificate_enrollment",
      "field_name": "enroll_result",
      "enum_name": "certificate_enrollment_enroll_result_enum",
      "values": [
        "failure",
        "forbidden",
        "not_found",
        "success"
      ],
      "group_id": "Security",
      "_key": "certificate_enrollment_enroll_result_enum"
    },
    {
      "entity_name": "certificate_enrollment",
      "field_name": "enroll_status",
      "enum_name": "certificate_enrollment_enroll_status_enum",
      "values": [
        "completed",
        "new"
      ],
      "group_id": "Security",
      "_key": "certificate_enrollment_enroll_status_enum"
    },
    {
      "entity_name": "certificate_enrollment",
      "field_name": "include",
      "enum_name": "certificate_enrollment_include_enum",
      "values": [
        "total_count"
      ],
      "group_id": "Security",
      "_key": "certificate_enrollment_include_enum"
    },
    {
      "entity_name": "certificate_enrollment",
      "field_name": "order",
      "enum_name": "certificate_enrollment_order_enum",
      "values": [
        "ASC",
        "DESC"
      ],
      "group_id": "Security",
      "_key": "certificate_enrollment_order_enum"
    },
    {
      "entity_name": "certificate_issuer",
      "field_name": "issuer_type",
      "enum_name": "certificate_issuer_type_enum",
      "values": [
        "CFSSL_AUTH",
        "GLOBAL_SIGN"
      ],
      "group_id": "Security",
      "_key": "certificate_issuer_type_enum"
    },
    {
      "entity_name": "device",
      "field_name": "deployed_state",
      "enum_name": "device_deployed_state_enum",
      "values": [
        "development",
        "production"
      ],
      "group_id": "Devices",
      "_key": "device_deployed_state_enum"
    },
    {
      "entity_name": "device_enrollment_bulk_create",
      "field_name": "status",
      "enum_name": "device_enrollment_bulk_create_status_enum",
      "values": [
        "completed",
        "new",
        "processing"
      ],
      "group_id": "Devices",
      "_key": "device_enrollment_bulk_create_status_enum"
    },
    {
      "entity_name": "device_enrollment_bulk_delete",
      "field_name": "status",
      "enum_name": "device_enrollment_bulk_delete_status_enum",
      "values": [
        "completed",
        "new",
        "processing"
      ],
      "group_id": "Devices",
      "_key": "device_enrollment_bulk_delete_status_enum"
    },
    {
      "entity_name": "device_enrollment",
      "field_name": "order",
      "enum_name": "device_enrollment_order_enum",
      "values": [
        "ASC",
        "DESC"
      ],
      "group_id": "Devices",
      "_key": "device_enrollment_order_enum"
    },
    {
      "entity_name": "device",
      "field_name": "lifecycle_status",
      "enum_name": "device_lifecycle_status_enum",
      "values": [
        "blocked",
        "enabled"
      ],
      "group_id": "Devices",
      "_key": "device_lifecycle_status_enum"
    },
    {
      "entity_name": "device",
      "field_name": "mechanism",
      "enum_name": "device_mechanism_enum",
      "values": [
        "connector",
        "direct"
      ],
      "group_id": "Devices",
      "_key": "device_mechanism_enum"
    },
    {
      "entity_name": "device",
      "field_name": "state",
      "enum_name": "device_state_enum",
      "values": [
        "bootstrapped",
        "cloud_enrolling",
        "deregistered",
        "registered",
        "unenrolled"
      ],
      "group_id": "Devices",
      "_key": "device_state_enum"
    },
    {
      "entity_name": "subtenant_trusted_certificate",
      "field_name": "service",
      "enum_name": "subtenant_trusted_certificate_service_enum",
      "values": [
        "bootstrap",
        "lwm2m"
      ],
      "group_id": "Security",
      "_key": "subtenant_trusted_certificate_service_enum"
    },
    {
      "entity_name": "subtenant_trusted_certificate",
      "field_name": "status",
      "enum_name": "subtenant_trusted_certificate_status_enum",
      "values": [
        "ACTIVE",
        "INACTIVE"
      ],
      "group_id": "Security",
      "_key": "subtenant_trusted_certificate_status_enum"
    },
    {
      "entity_name": "subtenant_user",
      "field_name": "status",
      "enum_name": "subtenant_user_status_enum",
      "values": [
        "ACTIVE",
        "ENROLLING",
        "INACTIVE",
        "INVITED",
        "RESET"
      ],
      "group_id": "Accounts",
      "_key": "subtenant_user_status_enum"
    },
    {
      "entity_name": "trusted_certificate",
      "field_name": "order",
      "enum_name": "trusted_certificate_order_enum",
      "values": [
        "ASC",
        "DESC"
      ],
      "group_id": "Security",
      "_key": "trusted_certificate_order_enum"
    },
    {
      "entity_name": "trusted_certificate",
      "field_name": "service",
      "enum_name": "trusted_certificate_service_enum",
      "values": [
        "bootstrap",
        "lwm2m"
      ],
      "group_id": "Security",
      "_key": "trusted_certificate_service_enum"
    },
    {
      "entity_name": "trusted_certificate",
      "field_name": "status",
      "enum_name": "trusted_certificate_status_enum",
      "values": [
        "ACTIVE",
        "INACTIVE"
      ],
      "group_id": "Security",
      "_key": "trusted_certificate_status_enum"
    },
    {
      "entity_name": "user_invitation",
      "field_name": "order",
      "enum_name": "user_invitation_order_enum",
      "values": [
        "ASC",
        "DESC"
      ],
      "group_id": "Accounts",
      "_key": "user_invitation_order_enum"
    },
    {
      "entity_name": "user",
      "field_name": "order",
      "enum_name": "user_order_enum",
      "values": [
        "ASC",
        "DESC"
      ],
      "group_id": "Accounts",
      "_key": "user_order_enum"
    },
    {
      "entity_name": "user",
      "field_name": "status",
      "enum_name": "user_status_enum",
      "values": [
        "ACTIVE",
        "ENROLLING",
        "INACTIVE",
        "INVITED",
        "RESET"
      ],
      "group_id": "Accounts",
      "_key": "user_status_enum"
    }
  ],
  "entities": [
    {
      "swagger_models": [
        "AccountCreationReq",
        "AccountInfo",
        "AccountInfoList",
        "AccountUpdateRootReq",
        "TrustedCertificateRespList",
        "UserInfoRespList",
        "UserInvitationRespList"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "An endpoint for creating a new account.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts -d '{\"display_name\": \"MyAccount1\", \"admin_name\": \"accountAdmin1\", \"email\": \"example_admin@myaccount.info\", \"country\": \"United Kingdom\", \"end_market\": \"Smart City\", \"address_line1\": \"110 Fulbourn Rd\", \"city\": \"Cambridge\", \"contact\": \"J. Doe\", \"company\": \"Arm\"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "default": "create",
              "description": "Action, either 'create' or 'enroll'. <ul><li>'create' creates the account where its admin user has ACTIVE status if admin_password was defined in the request, or RESET status if no admin_password was defined. If the user already exists, its status is not modified. </li><li>'enroll' creates the account where its admin user has ENROLLING status. If the user already exists, its status is not modified. Email to finish the enrollment or to notify the existing user about the new account is sent to the admin_email defined in the request. </li></ul>",
              "in": "query",
              "name": "action",
              "required": false,
              "type": "string",
              "entity_fieldname": "action",
              "api_fieldname": "action",
              "external_param": true,
              "parameter_fieldname": "action",
              "_key": "action"
            },
            {
              "description": "Postal address line 1.",
              "example": "110 Fulbourn Rd",
              "type": "string",
              "api_fieldname": "address_line1",
              "entity_fieldname": "address_line1",
              "parameter_fieldname": "address_line1",
              "in": "body",
              "required": false,
              "_key": "address_line1"
            },
            {
              "description": "Postal address line 2.",
              "example": " ",
              "type": "string",
              "api_fieldname": "address_line2",
              "entity_fieldname": "address_line2",
              "parameter_fieldname": "address_line2",
              "in": "body",
              "required": false,
              "_key": "address_line2"
            },
            {
              "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
              "example": "admin@arm.com",
              "type": "string",
              "api_fieldname": "admin_email",
              "entity_fieldname": "admin_email",
              "parameter_fieldname": "admin_email",
              "in": "body",
              "required": false,
              "_key": "admin_email"
            },
            {
              "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
              "example": "Admin Doe",
              "type": "string",
              "api_fieldname": "admin_full_name",
              "entity_fieldname": "admin_full_name",
              "parameter_fieldname": "admin_full_name",
              "in": "body",
              "required": false,
              "_key": "admin_full_name"
            },
            {
              "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
              "example": "admin",
              "type": "string",
              "api_fieldname": "admin_name",
              "entity_fieldname": "admin_name",
              "parameter_fieldname": "admin_name",
              "in": "body",
              "required": false,
              "_key": "admin_name"
            },
            {
              "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
              "example": "PZf9eEUH43DAPE9ULINFeuj",
              "type": "string",
              "api_fieldname": "admin_password",
              "entity_fieldname": "admin_password",
              "parameter_fieldname": "admin_password",
              "in": "body",
              "required": false,
              "_key": "admin_password"
            },
            {
              "description": "An array of aliases.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "api_fieldname": "aliases",
              "entity_fieldname": "aliases",
              "parameter_fieldname": "aliases",
              "in": "body",
              "required": false,
              "_key": "aliases"
            },
            {
              "description": "The city part of the postal address.",
              "example": "Cambridge",
              "type": "string",
              "api_fieldname": "city",
              "entity_fieldname": "city",
              "parameter_fieldname": "city",
              "in": "body",
              "required": false,
              "_key": "city"
            },
            {
              "description": "The name of the company.",
              "example": "ARM Holdings Plc",
              "type": "string",
              "api_fieldname": "company",
              "entity_fieldname": "company",
              "parameter_fieldname": "company",
              "in": "body",
              "required": false,
              "_key": "company"
            },
            {
              "description": "The name of the contact person for this account.",
              "example": "J. Doe",
              "type": "string",
              "api_fieldname": "contact",
              "entity_fieldname": "contact",
              "parameter_fieldname": "contact",
              "in": "body",
              "required": false,
              "_key": "contact"
            },
            {
              "description": "Contract number of the customer.",
              "example": "1NX25_0001",
              "type": "string",
              "api_fieldname": "contract_number",
              "entity_fieldname": "contract_number",
              "parameter_fieldname": "contract_number",
              "in": "body",
              "required": false,
              "_key": "contract_number"
            },
            {
              "description": "The country part of the postal address.",
              "example": "United Kingdom",
              "type": "string",
              "api_fieldname": "country",
              "entity_fieldname": "country",
              "parameter_fieldname": "country",
              "in": "body",
              "required": false,
              "_key": "country"
            },
            {
              "description": "Customer number of the customer.",
              "example": "1NC25_0001",
              "type": "string",
              "api_fieldname": "customer_number",
              "entity_fieldname": "customer_number",
              "parameter_fieldname": "customer_number",
              "in": "body",
              "required": false,
              "_key": "customer_number"
            },
            {
              "description": "The display name for the account.",
              "example": "ARM",
              "type": "string",
              "api_fieldname": "display_name",
              "entity_fieldname": "display_name",
              "parameter_fieldname": "display_name",
              "in": "body",
              "required": false,
              "_key": "display_name"
            },
            {
              "description": "The company email address for this account.",
              "example": "info@arm.com",
              "type": "string",
              "api_fieldname": "email",
              "entity_fieldname": "email",
              "parameter_fieldname": "email",
              "in": "body",
              "required": false,
              "_key": "email"
            },
            {
              "description": "Account end market.",
              "example": "IT",
              "type": "string",
              "api_fieldname": "end_market",
              "entity_fieldname": "end_market",
              "parameter_fieldname": "end_market",
              "in": "body",
              "required": false,
              "_key": "end_market"
            },
            {
              "description": "The phone number of a representative of the company.",
              "example": "+44 (1223) 400 400",
              "type": "string",
              "api_fieldname": "phone_number",
              "entity_fieldname": "phone_number",
              "parameter_fieldname": "phone_number",
              "in": "body",
              "required": false,
              "_key": "phone_number"
            },
            {
              "description": "The postal code part of the postal address.",
              "example": "CB1 9NJ",
              "type": "string",
              "api_fieldname": "postal_code",
              "entity_fieldname": "postal_code",
              "parameter_fieldname": "postal_code",
              "in": "body",
              "required": false,
              "_key": "postal_code"
            },
            {
              "description": "The state part of the postal address.",
              "example": " ",
              "type": "string",
              "api_fieldname": "state",
              "entity_fieldname": "state",
              "parameter_fieldname": "state",
              "in": "body",
              "required": false,
              "_key": "state"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "description": "This object represents an account in requests and responses.",
                "properties": [
                  {
                    "description": "Postal address line 1.",
                    "example": "110 Fulbourn Rd",
                    "type": "string",
                    "api_fieldname": "address_line1",
                    "entity_fieldname": "address_line1",
                    "_key": "address_line1"
                  },
                  {
                    "description": "Postal address line 2.",
                    "example": " ",
                    "type": "string",
                    "api_fieldname": "address_line2",
                    "entity_fieldname": "address_line2",
                    "_key": "address_line2"
                  },
                  {
                    "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "admin@arm.com",
                    "type": "string",
                    "api_fieldname": "admin_email",
                    "entity_fieldname": "admin_email",
                    "_key": "admin_email"
                  },
                  {
                    "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "Admin Doe",
                    "type": "string",
                    "api_fieldname": "admin_full_name",
                    "entity_fieldname": "admin_full_name",
                    "_key": "admin_full_name"
                  },
                  {
                    "description": "The ID of the admin user created for this account.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "admin_id",
                    "entity_fieldname": "admin_id",
                    "_key": "admin_id"
                  },
                  {
                    "description": "The admin API key created for this account. Present only in the response for the account creation.",
                    "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "admin_key",
                    "entity_fieldname": "admin_key",
                    "_key": "admin_key"
                  },
                  {
                    "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "admin_name",
                    "entity_fieldname": "admin_name",
                    "_key": "admin_name"
                  },
                  {
                    "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "admin_password",
                    "entity_fieldname": "admin_password",
                    "_key": "admin_password"
                  },
                  {
                    "description": "An array of aliases.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "aliases",
                    "entity_fieldname": "aliases",
                    "_key": "aliases"
                  },
                  {
                    "description": "The city part of the postal address.",
                    "example": "Cambridge",
                    "type": "string",
                    "api_fieldname": "city",
                    "entity_fieldname": "city",
                    "_key": "city"
                  },
                  {
                    "description": "The name of the company.",
                    "example": "ARM Holdings Plc",
                    "type": "string",
                    "api_fieldname": "company",
                    "entity_fieldname": "company",
                    "_key": "company"
                  },
                  {
                    "description": "The name of the contact person for this account.",
                    "example": "J. Doe",
                    "type": "string",
                    "api_fieldname": "contact",
                    "entity_fieldname": "contact",
                    "_key": "contact"
                  },
                  {
                    "description": "Contract number of the customer.",
                    "example": "1NX25_0001",
                    "type": "string",
                    "api_fieldname": "contract_number",
                    "entity_fieldname": "contract_number",
                    "_key": "contract_number"
                  },
                  {
                    "description": "The country part of the postal address.",
                    "example": "United Kingdom",
                    "type": "string",
                    "api_fieldname": "country",
                    "entity_fieldname": "country",
                    "_key": "country"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Account's custom properties as key-value pairs.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "Customer number of the customer.",
                    "example": "1NC25_0001",
                    "type": "string",
                    "api_fieldname": "customer_number",
                    "entity_fieldname": "customer_number",
                    "_key": "customer_number"
                  },
                  {
                    "description": "The display name for the account.",
                    "example": "ARM",
                    "type": "string",
                    "api_fieldname": "display_name",
                    "entity_fieldname": "display_name",
                    "_key": "display_name"
                  },
                  {
                    "description": "The company email address for this account.",
                    "example": "info@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "Account end market.",
                    "example": "IT",
                    "type": "string",
                    "api_fieldname": "end_market",
                    "entity_fieldname": "end_market",
                    "_key": "end_market"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Expiration time of the account, as UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expiration",
                    "entity_fieldname": "expiration",
                    "_key": "expiration"
                  },
                  {
                    "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                    "example": "180",
                    "type": "string",
                    "api_fieldname": "expiration_warning_threshold",
                    "entity_fieldname": "expiration_warning_threshold",
                    "_key": "expiration_warning_threshold"
                  },
                  {
                    "description": "Account ID.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The reference token expiration time in minutes for this account.",
                    "example": "30",
                    "type": "string",
                    "api_fieldname": "idle_timeout",
                    "entity_fieldname": "idle_timeout",
                    "_key": "idle_timeout"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "List of limits as key-value pairs if requested.",
                    "type": "object",
                    "api_fieldname": "limits",
                    "entity_fieldname": "limits",
                    "_key": "limits"
                  },
                  {
                    "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                    "enum": [
                      "enforced",
                      "optional"
                    ],
                    "type": "string",
                    "api_fieldname": "mfa_status",
                    "entity_fieldname": "mfa_status",
                    "_key": "mfa_status"
                  },
                  {
                    "description": "A list of notification email addresses.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "notification_emails",
                    "entity_fieldname": "notification_emails",
                    "_key": "notification_emails"
                  },
                  {
                    "description": "Entity name: always 'account'",
                    "enum": [
                      "account"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "This object represents parent account contact details in responses.",
                    "properties": [
                      {
                        "description": "The email address of the admin user who is the contact person of the parent account.",
                        "example": "info@arm.com",
                        "type": "string",
                        "api_fieldname": "admin_email",
                        "entity_fieldname": "admin_email",
                        "_key": "admin_email"
                      },
                      {
                        "description": "The name of the admin user who is the contact person of the parent account.",
                        "example": "J. Doe",
                        "type": "string",
                        "api_fieldname": "admin_name",
                        "entity_fieldname": "admin_name",
                        "_key": "admin_name"
                      },
                      {
                        "description": "The ID of the parent account",
                        "example": "01619571dad80242ac12000600000000",
                        "type": "string",
                        "api_fieldname": "id",
                        "entity_fieldname": "id",
                        "_key": "id"
                      }
                    ],
                    "type": "object",
                    "foreign_key": {
                      "group": "Accounts",
                      "entity": "parent_account"
                    },
                    "api_fieldname": "parent_account",
                    "entity_fieldname": "parent_account",
                    "_key": "parent_account"
                  },
                  {
                    "description": "The ID of the parent account, if it has any.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "parent_id",
                    "entity_fieldname": "parent_id",
                    "_key": "parent_id"
                  },
                  {
                    "properties": [
                      {
                        "description": "Minimum length for the password. A number between 8 and 512.",
                        "example": "8",
                        "type": "string",
                        "api_fieldname": "minimum_length",
                        "entity_fieldname": "minimum_length",
                        "_key": "minimum_length"
                      }
                    ],
                    "required": [
                      "minimum_length"
                    ],
                    "type": "object",
                    "foreign_key": {
                      "group": "Accounts",
                      "entity": "password_policy"
                    },
                    "api_fieldname": "password_policy",
                    "entity_fieldname": "password_policy",
                    "_key": "password_policy"
                  },
                  {
                    "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                    "format": "int32",
                    "maximum": 45,
                    "minimum": 1,
                    "type": "integer",
                    "api_fieldname": "password_recovery_expiration",
                    "entity_fieldname": "password_recovery_expiration",
                    "_key": "password_recovery_expiration"
                  },
                  {
                    "description": "The phone number of a representative of the company.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "_key": "phone_number"
                  },
                  {
                    "description": "List of policies if requested.",
                    "items": {
                      "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                      "properties": [
                        {
                          "description": "Comma separated list of actions, empty string represents all actions.",
                          "example": "GET",
                          "type": "string",
                          "api_fieldname": "action",
                          "entity_fieldname": "action",
                          "_key": "action"
                        },
                        {
                          "description": "True or false controlling whether an action is allowed or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "allow",
                          "entity_fieldname": "allow",
                          "_key": "allow"
                        },
                        {
                          "description": "Feature name corresponding to this policy.",
                          "example": "update-campaigns",
                          "type": "string",
                          "api_fieldname": "feature",
                          "entity_fieldname": "feature",
                          "_key": "feature"
                        },
                        {
                          "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                          "example": false,
                          "type": "boolean",
                          "api_fieldname": "inherited",
                          "entity_fieldname": "inherited",
                          "_key": "inherited"
                        },
                        {
                          "description": "Resource that is protected by this policy.",
                          "example": "/v3/update-campaign",
                          "type": "string",
                          "api_fieldname": "resource",
                          "entity_fieldname": "resource",
                          "_key": "resource"
                        }
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "policy"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "policies",
                    "entity_fieldname": "policies",
                    "_key": "policies"
                  },
                  {
                    "description": "The postal code part of the postal address.",
                    "example": "CB1 9NJ",
                    "type": "string",
                    "api_fieldname": "postal_code",
                    "entity_fieldname": "postal_code",
                    "_key": "postal_code"
                  },
                  {
                    "description": "A reason note for updating the status of the account",
                    "example": "Subscription paid.",
                    "type": "string",
                    "api_fieldname": "reason",
                    "entity_fieldname": "reason",
                    "_key": "reason"
                  },
                  {
                    "description": "A reference note for updating the status of the account",
                    "example": "ARM-INT-0001",
                    "type": "string",
                    "api_fieldname": "reference_note",
                    "entity_fieldname": "reference_note",
                    "_key": "reference_note"
                  },
                  {
                    "description": "Email address of the sales contact.",
                    "example": "sales@arm.com",
                    "type": "string",
                    "api_fieldname": "sales_contact",
                    "entity_fieldname": "sales_contact",
                    "_key": "sales_contact"
                  },
                  {
                    "description": "The state part of the postal address.",
                    "example": " ",
                    "type": "string",
                    "api_fieldname": "state",
                    "entity_fieldname": "state",
                    "_key": "state"
                  },
                  {
                    "description": "The status of the account.",
                    "enum": [
                      "ENROLLING",
                      "ACTIVE",
                      "RESTRICTED",
                      "SUSPENDED"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "List of sub accounts. Not available for developer users.",
                    "items": {
                      "description": "This object represents an account in requests and responses.",
                      "properties": [
                        {
                          "description": "Postal address line 1.",
                          "example": "110 Fulbourn Rd",
                          "type": "string",
                          "_key": "address_line1"
                        },
                        {
                          "description": "Postal address line 2.",
                          "example": " ",
                          "type": "string",
                          "_key": "address_line2"
                        },
                        {
                          "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin@arm.com",
                          "type": "string",
                          "_key": "admin_email"
                        },
                        {
                          "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "Admin Doe",
                          "type": "string",
                          "_key": "admin_full_name"
                        },
                        {
                          "description": "The ID of the admin user created for this account.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "admin_id"
                        },
                        {
                          "description": "The admin API key created for this account. Present only in the response for the account creation.",
                          "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                          "readOnly": true,
                          "type": "string",
                          "_key": "admin_key"
                        },
                        {
                          "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin",
                          "type": "string",
                          "_key": "admin_name"
                        },
                        {
                          "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "PZf9eEUH43DAPE9ULINFeuj",
                          "type": "string",
                          "_key": "admin_password"
                        },
                        {
                          "description": "An array of aliases.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "aliases"
                        },
                        {
                          "description": "The city part of the postal address.",
                          "example": "Cambridge",
                          "type": "string",
                          "_key": "city"
                        },
                        {
                          "description": "The name of the company.",
                          "example": "ARM Holdings Plc",
                          "type": "string",
                          "_key": "company"
                        },
                        {
                          "description": "The name of the contact person for this account.",
                          "example": "J. Doe",
                          "type": "string",
                          "_key": "contact"
                        },
                        {
                          "description": "Contract number of the customer.",
                          "example": "1NX25_0001",
                          "type": "string",
                          "_key": "contract_number"
                        },
                        {
                          "description": "The country part of the postal address.",
                          "example": "United Kingdom",
                          "type": "string",
                          "_key": "country"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Account's custom properties as key-value pairs.",
                          "type": "object",
                          "_key": "custom_fields"
                        },
                        {
                          "description": "Customer number of the customer.",
                          "example": "1NC25_0001",
                          "type": "string",
                          "_key": "customer_number"
                        },
                        {
                          "description": "The display name for the account.",
                          "example": "ARM",
                          "type": "string",
                          "_key": "display_name"
                        },
                        {
                          "description": "The company email address for this account.",
                          "example": "info@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "Account end market.",
                          "example": "IT",
                          "type": "string",
                          "_key": "end_market"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Expiration time of the account, as UTC time RFC3339.",
                          "format": "date-time",
                          "type": "string",
                          "_key": "expiration"
                        },
                        {
                          "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                          "example": "180",
                          "type": "string",
                          "_key": "expiration_warning_threshold"
                        },
                        {
                          "description": "Account ID.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "The reference token expiration time in minutes for this account.",
                          "example": "30",
                          "type": "string",
                          "_key": "idle_timeout"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "List of limits as key-value pairs if requested.",
                          "type": "object",
                          "_key": "limits"
                        },
                        {
                          "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                          "enum": [
                            "enforced",
                            "optional"
                          ],
                          "type": "string",
                          "_key": "mfa_status"
                        },
                        {
                          "description": "A list of notification email addresses.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "notification_emails"
                        },
                        {
                          "description": "Entity name: always 'account'",
                          "enum": [
                            "account"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "This object represents parent account contact details in responses.",
                          "properties": [
                            {
                              "description": "The email address of the admin user who is the contact person of the parent account.",
                              "example": "info@arm.com",
                              "type": "string",
                              "api_fieldname": "admin_email",
                              "entity_fieldname": "admin_email",
                              "_key": "admin_email"
                            },
                            {
                              "description": "The name of the admin user who is the contact person of the parent account.",
                              "example": "J. Doe",
                              "type": "string",
                              "api_fieldname": "admin_name",
                              "entity_fieldname": "admin_name",
                              "_key": "admin_name"
                            },
                            {
                              "description": "The ID of the parent account",
                              "example": "01619571dad80242ac12000600000000",
                              "type": "string",
                              "api_fieldname": "id",
                              "entity_fieldname": "id",
                              "_key": "id"
                            }
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "parent_account"
                          },
                          "_key": "parent_account"
                        },
                        {
                          "description": "The ID of the parent account, if it has any.",
                          "example": "01619571dad80242ac12000600000000",
                          "type": "string",
                          "_key": "parent_id"
                        },
                        {
                          "properties": [
                            {
                              "description": "Minimum length for the password. A number between 8 and 512.",
                              "example": "8",
                              "type": "string",
                              "api_fieldname": "minimum_length",
                              "entity_fieldname": "minimum_length",
                              "_key": "minimum_length"
                            }
                          ],
                          "required": [
                            "minimum_length"
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "password_policy"
                          },
                          "_key": "password_policy"
                        },
                        {
                          "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                          "format": "int32",
                          "maximum": 45,
                          "minimum": 1,
                          "type": "integer",
                          "_key": "password_recovery_expiration"
                        },
                        {
                          "description": "The phone number of a representative of the company.",
                          "example": "+44 (1223) 400 400",
                          "type": "string",
                          "_key": "phone_number"
                        },
                        {
                          "description": "List of policies if requested.",
                          "items": {
                            "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                            "properties": [
                              {
                                "description": "Comma separated list of actions, empty string represents all actions.",
                                "example": "GET",
                                "type": "string",
                                "api_fieldname": "action",
                                "entity_fieldname": "action",
                                "_key": "action"
                              },
                              {
                                "description": "True or false controlling whether an action is allowed or not.",
                                "example": true,
                                "type": "boolean",
                                "api_fieldname": "allow",
                                "entity_fieldname": "allow",
                                "_key": "allow"
                              },
                              {
                                "description": "Feature name corresponding to this policy.",
                                "example": "update-campaigns",
                                "type": "string",
                                "api_fieldname": "feature",
                                "entity_fieldname": "feature",
                                "_key": "feature"
                              },
                              {
                                "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                                "example": false,
                                "type": "boolean",
                                "api_fieldname": "inherited",
                                "entity_fieldname": "inherited",
                                "_key": "inherited"
                              },
                              {
                                "description": "Resource that is protected by this policy.",
                                "example": "/v3/update-campaign",
                                "type": "string",
                                "api_fieldname": "resource",
                                "entity_fieldname": "resource",
                                "_key": "resource"
                              }
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "policy"
                            }
                          },
                          "type": "array",
                          "_key": "policies"
                        },
                        {
                          "description": "The postal code part of the postal address.",
                          "example": "CB1 9NJ",
                          "type": "string",
                          "_key": "postal_code"
                        },
                        {
                          "description": "A reason note for updating the status of the account",
                          "example": "Subscription paid.",
                          "type": "string",
                          "_key": "reason"
                        },
                        {
                          "description": "A reference note for updating the status of the account",
                          "example": "ARM-INT-0001",
                          "type": "string",
                          "_key": "reference_note"
                        },
                        {
                          "description": "Email address of the sales contact.",
                          "example": "sales@arm.com",
                          "type": "string",
                          "_key": "sales_contact"
                        },
                        {
                          "description": "The state part of the postal address.",
                          "example": " ",
                          "type": "string",
                          "_key": "state"
                        },
                        {
                          "description": "The status of the account.",
                          "enum": [
                            "ENROLLING",
                            "ACTIVE",
                            "RESTRICTED",
                            "SUSPENDED"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "List of sub accounts. Not available for developer users.",
                          "items": [],
                          "type": "array",
                          "_key": "sub_accounts"
                        },
                        {
                          "description": "Account template ID.",
                          "example": "01619571e7160242ac12000600000000",
                          "type": "string",
                          "_key": "template_id"
                        },
                        {
                          "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                          "example": "1",
                          "type": "string",
                          "_key": "tier"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "upgraded_at"
                        }
                      ],
                      "required": [
                        "end_market",
                        "etag",
                        "id",
                        "object",
                        "status",
                        "tier"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "api_fieldname": "sub_accounts",
                    "entity_fieldname": "sub_accounts",
                    "_key": "sub_accounts"
                  },
                  {
                    "description": "Account template ID.",
                    "example": "01619571e7160242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "template_id",
                    "entity_fieldname": "template_id",
                    "_key": "template_id"
                  },
                  {
                    "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "tier",
                    "entity_fieldname": "tier",
                    "_key": "tier"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "upgraded_at",
                    "entity_fieldname": "upgraded_at",
                    "_key": "upgraded_at"
                  }
                ],
                "required": [
                  "end_market",
                  "etag",
                  "id",
                  "object",
                  "status",
                  "tier"
                ],
                "type": "object"
              },
              "_key": "201"
            },
            {
              "description": "Error in input data, for example invalid username.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/accounts",
          "summary": "Create a new account.",
          "return_type": "account",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "account"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "admin_id",
            "admin_key",
            "created_at",
            "custom_fields",
            "expiration",
            "expiration_warning_threshold",
            "id",
            "idle_timeout",
            "limits",
            "mfa_status",
            "notification_emails",
            "parent_account",
            "parent_id",
            "password_policy",
            "password_recovery_expiration",
            "policies",
            "reason",
            "reference_note",
            "sales_contact",
            "status",
            "template_id",
            "tier",
            "updated_at",
            "upgraded_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "account_id": "id"
          },
          "operation_id": "createAccount",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "Returns an array of account objects, optionally filtered by status and tier level.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts -H 'Authorization: Bearer API_KEY'`.",
          "field_renames": [],
          "fields": [
            {
              "description": "The entity ID to fetch after the given one.",
              "example": "01619571f3c00242ac12000600000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "Format information for the response to the query, supported: format=breakdown.",
              "in": "query",
              "name": "format",
              "required": false,
              "type": "string",
              "entity_fieldname": "format",
              "api_fieldname": "format",
              "external_param": true,
              "parameter_fieldname": "format",
              "_key": "format"
            },
            {
              "description": "Comma separated additional data to return. Currently supported: limits, policies, sub_accounts",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "The number of results to return (2-1000), default is 1000.",
              "example": 50,
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "default": 1000,
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, ASC or DESC. Default value is ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "default": "ASC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "account_order_enum",
              "_key": "order"
            },
            {
              "description": "Property name to be returned from account specific properties.",
              "in": "query",
              "name": "properties",
              "required": false,
              "type": "string",
              "entity_fieldname": "properties",
              "api_fieldname": "properties",
              "external_param": true,
              "parameter_fieldname": "properties",
              "_key": "properties"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01619571f3c00242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "A list of entities.",
                    "items": {
                      "description": "This object represents an account in requests and responses.",
                      "properties": [
                        {
                          "description": "Postal address line 1.",
                          "example": "110 Fulbourn Rd",
                          "type": "string",
                          "_key": "address_line1"
                        },
                        {
                          "description": "Postal address line 2.",
                          "example": " ",
                          "type": "string",
                          "_key": "address_line2"
                        },
                        {
                          "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin@arm.com",
                          "type": "string",
                          "_key": "admin_email"
                        },
                        {
                          "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "Admin Doe",
                          "type": "string",
                          "_key": "admin_full_name"
                        },
                        {
                          "description": "The ID of the admin user created for this account.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "admin_id"
                        },
                        {
                          "description": "The admin API key created for this account. Present only in the response for the account creation.",
                          "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                          "readOnly": true,
                          "type": "string",
                          "_key": "admin_key"
                        },
                        {
                          "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin",
                          "type": "string",
                          "_key": "admin_name"
                        },
                        {
                          "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "PZf9eEUH43DAPE9ULINFeuj",
                          "type": "string",
                          "_key": "admin_password"
                        },
                        {
                          "description": "An array of aliases.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "aliases"
                        },
                        {
                          "description": "The city part of the postal address.",
                          "example": "Cambridge",
                          "type": "string",
                          "_key": "city"
                        },
                        {
                          "description": "The name of the company.",
                          "example": "ARM Holdings Plc",
                          "type": "string",
                          "_key": "company"
                        },
                        {
                          "description": "The name of the contact person for this account.",
                          "example": "J. Doe",
                          "type": "string",
                          "_key": "contact"
                        },
                        {
                          "description": "Contract number of the customer.",
                          "example": "1NX25_0001",
                          "type": "string",
                          "_key": "contract_number"
                        },
                        {
                          "description": "The country part of the postal address.",
                          "example": "United Kingdom",
                          "type": "string",
                          "_key": "country"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Account's custom properties as key-value pairs.",
                          "type": "object",
                          "_key": "custom_fields"
                        },
                        {
                          "description": "Customer number of the customer.",
                          "example": "1NC25_0001",
                          "type": "string",
                          "_key": "customer_number"
                        },
                        {
                          "description": "The display name for the account.",
                          "example": "ARM",
                          "type": "string",
                          "_key": "display_name"
                        },
                        {
                          "description": "The company email address for this account.",
                          "example": "info@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "Account end market.",
                          "example": "IT",
                          "type": "string",
                          "_key": "end_market"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Expiration time of the account, as UTC time RFC3339.",
                          "format": "date-time",
                          "type": "string",
                          "_key": "expiration"
                        },
                        {
                          "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                          "example": "180",
                          "type": "string",
                          "_key": "expiration_warning_threshold"
                        },
                        {
                          "description": "Account ID.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "The reference token expiration time in minutes for this account.",
                          "example": "30",
                          "type": "string",
                          "_key": "idle_timeout"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "List of limits as key-value pairs if requested.",
                          "type": "object",
                          "_key": "limits"
                        },
                        {
                          "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                          "enum": [
                            "enforced",
                            "optional"
                          ],
                          "type": "string",
                          "_key": "mfa_status"
                        },
                        {
                          "description": "A list of notification email addresses.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "notification_emails"
                        },
                        {
                          "description": "Entity name: always 'account'",
                          "enum": [
                            "account"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "This object represents parent account contact details in responses.",
                          "properties": [
                            {
                              "description": "The email address of the admin user who is the contact person of the parent account.",
                              "example": "info@arm.com",
                              "type": "string",
                              "api_fieldname": "admin_email",
                              "entity_fieldname": "admin_email",
                              "_key": "admin_email"
                            },
                            {
                              "description": "The name of the admin user who is the contact person of the parent account.",
                              "example": "J. Doe",
                              "type": "string",
                              "api_fieldname": "admin_name",
                              "entity_fieldname": "admin_name",
                              "_key": "admin_name"
                            },
                            {
                              "description": "The ID of the parent account",
                              "example": "01619571dad80242ac12000600000000",
                              "type": "string",
                              "api_fieldname": "id",
                              "entity_fieldname": "id",
                              "_key": "id"
                            }
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "parent_account"
                          },
                          "_key": "parent_account"
                        },
                        {
                          "description": "The ID of the parent account, if it has any.",
                          "example": "01619571dad80242ac12000600000000",
                          "type": "string",
                          "_key": "parent_id"
                        },
                        {
                          "properties": [
                            {
                              "description": "Minimum length for the password. A number between 8 and 512.",
                              "example": "8",
                              "type": "string",
                              "api_fieldname": "minimum_length",
                              "entity_fieldname": "minimum_length",
                              "_key": "minimum_length"
                            }
                          ],
                          "required": [
                            "minimum_length"
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "password_policy"
                          },
                          "_key": "password_policy"
                        },
                        {
                          "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                          "format": "int32",
                          "maximum": 45,
                          "minimum": 1,
                          "type": "integer",
                          "_key": "password_recovery_expiration"
                        },
                        {
                          "description": "The phone number of a representative of the company.",
                          "example": "+44 (1223) 400 400",
                          "type": "string",
                          "_key": "phone_number"
                        },
                        {
                          "description": "List of policies if requested.",
                          "items": {
                            "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                            "properties": [
                              {
                                "description": "Comma separated list of actions, empty string represents all actions.",
                                "example": "GET",
                                "type": "string",
                                "api_fieldname": "action",
                                "entity_fieldname": "action",
                                "_key": "action"
                              },
                              {
                                "description": "True or false controlling whether an action is allowed or not.",
                                "example": true,
                                "type": "boolean",
                                "api_fieldname": "allow",
                                "entity_fieldname": "allow",
                                "_key": "allow"
                              },
                              {
                                "description": "Feature name corresponding to this policy.",
                                "example": "update-campaigns",
                                "type": "string",
                                "api_fieldname": "feature",
                                "entity_fieldname": "feature",
                                "_key": "feature"
                              },
                              {
                                "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                                "example": false,
                                "type": "boolean",
                                "api_fieldname": "inherited",
                                "entity_fieldname": "inherited",
                                "_key": "inherited"
                              },
                              {
                                "description": "Resource that is protected by this policy.",
                                "example": "/v3/update-campaign",
                                "type": "string",
                                "api_fieldname": "resource",
                                "entity_fieldname": "resource",
                                "_key": "resource"
                              }
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "policy"
                            }
                          },
                          "type": "array",
                          "_key": "policies"
                        },
                        {
                          "description": "The postal code part of the postal address.",
                          "example": "CB1 9NJ",
                          "type": "string",
                          "_key": "postal_code"
                        },
                        {
                          "description": "A reason note for updating the status of the account",
                          "example": "Subscription paid.",
                          "type": "string",
                          "_key": "reason"
                        },
                        {
                          "description": "A reference note for updating the status of the account",
                          "example": "ARM-INT-0001",
                          "type": "string",
                          "_key": "reference_note"
                        },
                        {
                          "description": "Email address of the sales contact.",
                          "example": "sales@arm.com",
                          "type": "string",
                          "_key": "sales_contact"
                        },
                        {
                          "description": "The state part of the postal address.",
                          "example": " ",
                          "type": "string",
                          "_key": "state"
                        },
                        {
                          "description": "The status of the account.",
                          "enum": [
                            "ENROLLING",
                            "ACTIVE",
                            "RESTRICTED",
                            "SUSPENDED"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "List of sub accounts. Not available for developer users.",
                          "items": {
                            "description": "This object represents an account in requests and responses.",
                            "properties": [
                              {
                                "description": "Postal address line 1.",
                                "example": "110 Fulbourn Rd",
                                "type": "string",
                                "_key": "address_line1"
                              },
                              {
                                "description": "Postal address line 2.",
                                "example": " ",
                                "type": "string",
                                "_key": "address_line2"
                              },
                              {
                                "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                                "example": "admin@arm.com",
                                "type": "string",
                                "_key": "admin_email"
                              },
                              {
                                "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                                "example": "Admin Doe",
                                "type": "string",
                                "_key": "admin_full_name"
                              },
                              {
                                "description": "The ID of the admin user created for this account.",
                                "example": "01619571e2e89242ac12000600000000",
                                "type": "string",
                                "_key": "admin_id"
                              },
                              {
                                "description": "The admin API key created for this account. Present only in the response for the account creation.",
                                "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                                "readOnly": true,
                                "type": "string",
                                "_key": "admin_key"
                              },
                              {
                                "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                                "example": "admin",
                                "type": "string",
                                "_key": "admin_name"
                              },
                              {
                                "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                                "example": "PZf9eEUH43DAPE9ULINFeuj",
                                "type": "string",
                                "_key": "admin_password"
                              },
                              {
                                "description": "An array of aliases.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "_key": "aliases"
                              },
                              {
                                "description": "The city part of the postal address.",
                                "example": "Cambridge",
                                "type": "string",
                                "_key": "city"
                              },
                              {
                                "description": "The name of the company.",
                                "example": "ARM Holdings Plc",
                                "type": "string",
                                "_key": "company"
                              },
                              {
                                "description": "The name of the contact person for this account.",
                                "example": "J. Doe",
                                "type": "string",
                                "_key": "contact"
                              },
                              {
                                "description": "Contract number of the customer.",
                                "example": "1NX25_0001",
                                "type": "string",
                                "_key": "contract_number"
                              },
                              {
                                "description": "The country part of the postal address.",
                                "example": "United Kingdom",
                                "type": "string",
                                "_key": "country"
                              },
                              {
                                "description": "Creation UTC time RFC3339.",
                                "example": "2018-02-13T09:35:20Z",
                                "format": "date-time",
                                "type": "string",
                                "_key": "created_at"
                              },
                              {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Account's custom properties as key-value pairs.",
                                "type": "object",
                                "_key": "custom_fields"
                              },
                              {
                                "description": "Customer number of the customer.",
                                "example": "1NC25_0001",
                                "type": "string",
                                "_key": "customer_number"
                              },
                              {
                                "description": "The display name for the account.",
                                "example": "ARM",
                                "type": "string",
                                "_key": "display_name"
                              },
                              {
                                "description": "The company email address for this account.",
                                "example": "info@arm.com",
                                "type": "string",
                                "_key": "email"
                              },
                              {
                                "description": "Account end market.",
                                "example": "IT",
                                "type": "string",
                                "_key": "end_market"
                              },
                              {
                                "description": "API resource entity version.",
                                "example": "1",
                                "type": "string",
                                "_key": "etag"
                              },
                              {
                                "description": "Expiration time of the account, as UTC time RFC3339.",
                                "format": "date-time",
                                "type": "string",
                                "_key": "expiration"
                              },
                              {
                                "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                                "example": "180",
                                "type": "string",
                                "_key": "expiration_warning_threshold"
                              },
                              {
                                "description": "Account ID.",
                                "example": "01619571e2e90242ac12000600000000",
                                "type": "string",
                                "_key": "id"
                              },
                              {
                                "description": "The reference token expiration time in minutes for this account.",
                                "example": "30",
                                "type": "string",
                                "_key": "idle_timeout"
                              },
                              {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "List of limits as key-value pairs if requested.",
                                "type": "object",
                                "_key": "limits"
                              },
                              {
                                "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                                "enum": [
                                  "enforced",
                                  "optional"
                                ],
                                "type": "string",
                                "_key": "mfa_status"
                              },
                              {
                                "description": "A list of notification email addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "_key": "notification_emails"
                              },
                              {
                                "description": "Entity name: always 'account'",
                                "enum": [
                                  "account"
                                ],
                                "type": "string",
                                "_key": "object"
                              },
                              {
                                "description": "This object represents parent account contact details in responses.",
                                "properties": [
                                  {
                                    "description": "The email address of the admin user who is the contact person of the parent account.",
                                    "example": "info@arm.com",
                                    "type": "string",
                                    "api_fieldname": "admin_email",
                                    "entity_fieldname": "admin_email",
                                    "_key": "admin_email"
                                  },
                                  {
                                    "description": "The name of the admin user who is the contact person of the parent account.",
                                    "example": "J. Doe",
                                    "type": "string",
                                    "api_fieldname": "admin_name",
                                    "entity_fieldname": "admin_name",
                                    "_key": "admin_name"
                                  },
                                  {
                                    "description": "The ID of the parent account",
                                    "example": "01619571dad80242ac12000600000000",
                                    "type": "string",
                                    "api_fieldname": "id",
                                    "entity_fieldname": "id",
                                    "_key": "id"
                                  }
                                ],
                                "type": "object",
                                "foreign_key": {
                                  "group": "Accounts",
                                  "entity": "parent_account"
                                },
                                "_key": "parent_account"
                              },
                              {
                                "description": "The ID of the parent account, if it has any.",
                                "example": "01619571dad80242ac12000600000000",
                                "type": "string",
                                "_key": "parent_id"
                              },
                              {
                                "properties": [
                                  {
                                    "description": "Minimum length for the password. A number between 8 and 512.",
                                    "example": "8",
                                    "type": "string",
                                    "api_fieldname": "minimum_length",
                                    "entity_fieldname": "minimum_length",
                                    "_key": "minimum_length"
                                  }
                                ],
                                "required": [
                                  "minimum_length"
                                ],
                                "type": "object",
                                "foreign_key": {
                                  "group": "Accounts",
                                  "entity": "password_policy"
                                },
                                "_key": "password_policy"
                              },
                              {
                                "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                                "format": "int32",
                                "maximum": 45,
                                "minimum": 1,
                                "type": "integer",
                                "_key": "password_recovery_expiration"
                              },
                              {
                                "description": "The phone number of a representative of the company.",
                                "example": "+44 (1223) 400 400",
                                "type": "string",
                                "_key": "phone_number"
                              },
                              {
                                "description": "List of policies if requested.",
                                "items": {
                                  "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                                  "properties": [
                                    {
                                      "description": "Comma separated list of actions, empty string represents all actions.",
                                      "example": "GET",
                                      "type": "string",
                                      "api_fieldname": "action",
                                      "entity_fieldname": "action",
                                      "_key": "action"
                                    },
                                    {
                                      "description": "True or false controlling whether an action is allowed or not.",
                                      "example": true,
                                      "type": "boolean",
                                      "api_fieldname": "allow",
                                      "entity_fieldname": "allow",
                                      "_key": "allow"
                                    },
                                    {
                                      "description": "Feature name corresponding to this policy.",
                                      "example": "update-campaigns",
                                      "type": "string",
                                      "api_fieldname": "feature",
                                      "entity_fieldname": "feature",
                                      "_key": "feature"
                                    },
                                    {
                                      "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                                      "example": false,
                                      "type": "boolean",
                                      "api_fieldname": "inherited",
                                      "entity_fieldname": "inherited",
                                      "_key": "inherited"
                                    },
                                    {
                                      "description": "Resource that is protected by this policy.",
                                      "example": "/v3/update-campaign",
                                      "type": "string",
                                      "api_fieldname": "resource",
                                      "entity_fieldname": "resource",
                                      "_key": "resource"
                                    }
                                  ],
                                  "type": "object",
                                  "foreign_key": {
                                    "group": "Accounts",
                                    "entity": "policy"
                                  }
                                },
                                "type": "array",
                                "_key": "policies"
                              },
                              {
                                "description": "The postal code part of the postal address.",
                                "example": "CB1 9NJ",
                                "type": "string",
                                "_key": "postal_code"
                              },
                              {
                                "description": "A reason note for updating the status of the account",
                                "example": "Subscription paid.",
                                "type": "string",
                                "_key": "reason"
                              },
                              {
                                "description": "A reference note for updating the status of the account",
                                "example": "ARM-INT-0001",
                                "type": "string",
                                "_key": "reference_note"
                              },
                              {
                                "description": "Email address of the sales contact.",
                                "example": "sales@arm.com",
                                "type": "string",
                                "_key": "sales_contact"
                              },
                              {
                                "description": "The state part of the postal address.",
                                "example": " ",
                                "type": "string",
                                "_key": "state"
                              },
                              {
                                "description": "The status of the account.",
                                "enum": [
                                  "ENROLLING",
                                  "ACTIVE",
                                  "RESTRICTED",
                                  "SUSPENDED"
                                ],
                                "example": "ACTIVE",
                                "type": "string",
                                "_key": "status"
                              },
                              {
                                "description": "List of sub accounts. Not available for developer users.",
                                "items": [],
                                "type": "array",
                                "_key": "sub_accounts"
                              },
                              {
                                "description": "Account template ID.",
                                "example": "01619571e7160242ac12000600000000",
                                "type": "string",
                                "_key": "template_id"
                              },
                              {
                                "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                                "example": "1",
                                "type": "string",
                                "_key": "tier"
                              },
                              {
                                "description": "Last update UTC time RFC3339.",
                                "example": "2018-02-14T15:24:14Z",
                                "format": "date-time",
                                "type": "string",
                                "_key": "updated_at"
                              },
                              {
                                "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                                "example": "2018-02-14T15:24:14Z",
                                "format": "date-time",
                                "type": "string",
                                "_key": "upgraded_at"
                              }
                            ],
                            "required": [
                              "end_market",
                              "etag",
                              "id",
                              "object",
                              "status",
                              "tier"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "_key": "sub_accounts"
                        },
                        {
                          "description": "Account template ID.",
                          "example": "01619571e7160242ac12000600000000",
                          "type": "string",
                          "_key": "template_id"
                        },
                        {
                          "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                          "example": "1",
                          "type": "string",
                          "_key": "tier"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "upgraded_at"
                        }
                      ],
                      "required": [
                        "end_market",
                        "etag",
                        "id",
                        "object",
                        "status",
                        "tier"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there is more results.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return, (range: 2-1000), or equals to `total_count`",
                    "example": 50,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Entity name: always 'list'",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records to return based on creation time. Available values: ASC, DESC; by default ASC.",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "description": "The total number or records, if requested. It might be returned also for small lists.",
                    "example": 20,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "data",
                  "has_more",
                  "limit",
                  "object",
                  "total_count"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "account"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/accounts",
          "summary": "Get all accounts.",
          "return_type": "paginated_response(account)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "account"
          },
          "x_filter": {
            "country": [
              "like",
              "like"
            ],
            "end_market": [
              "eq",
              "eq"
            ],
            "parent": [
              "eq",
              "eq"
            ],
            "status": [
              "eq",
              "in",
              "nin",
              "eq",
              "in",
              "nin"
            ],
            "tier": [
              "eq",
              "eq"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "status__eq",
            "status__in",
            "status__nin",
            "tier__eq",
            "parent__eq",
            "end_market__eq",
            "country__like"
          ],
          "foreign_key_priority": "self",
          "group_id": "Accounts",
          "parameter_map": {
            "account_id": "id"
          },
          "operation_id": "getAllAccounts",
          "pagination": true,
          "_key": "list"
        },
        {
          "description": "Returns detailed information about the account.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts/me?include=policies -H 'Authorization: Bearer API_KEY'`.",
          "field_renames": [],
          "fields": [
            {
              "description": "Comma separated additional data to return. Currently supported: limits, policies, sub_accounts.",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "Property name to be returned from account specific properties.",
              "in": "query",
              "name": "properties",
              "required": false,
              "type": "string",
              "entity_fieldname": "properties",
              "api_fieldname": "properties",
              "external_param": true,
              "parameter_fieldname": "properties",
              "_key": "properties"
            }
          ],
          "method": "get",
          "mode": "me",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "description": "This object represents an account in requests and responses.",
                "properties": [
                  {
                    "description": "Postal address line 1.",
                    "example": "110 Fulbourn Rd",
                    "type": "string",
                    "api_fieldname": "address_line1",
                    "entity_fieldname": "address_line1",
                    "_key": "address_line1"
                  },
                  {
                    "description": "Postal address line 2.",
                    "example": " ",
                    "type": "string",
                    "api_fieldname": "address_line2",
                    "entity_fieldname": "address_line2",
                    "_key": "address_line2"
                  },
                  {
                    "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "admin@arm.com",
                    "type": "string",
                    "api_fieldname": "admin_email",
                    "entity_fieldname": "admin_email",
                    "_key": "admin_email"
                  },
                  {
                    "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "Admin Doe",
                    "type": "string",
                    "api_fieldname": "admin_full_name",
                    "entity_fieldname": "admin_full_name",
                    "_key": "admin_full_name"
                  },
                  {
                    "description": "The ID of the admin user created for this account.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "admin_id",
                    "entity_fieldname": "admin_id",
                    "_key": "admin_id"
                  },
                  {
                    "description": "The admin API key created for this account. Present only in the response for the account creation.",
                    "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "admin_key",
                    "entity_fieldname": "admin_key",
                    "_key": "admin_key"
                  },
                  {
                    "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "admin_name",
                    "entity_fieldname": "admin_name",
                    "_key": "admin_name"
                  },
                  {
                    "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "admin_password",
                    "entity_fieldname": "admin_password",
                    "_key": "admin_password"
                  },
                  {
                    "description": "An array of aliases.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "aliases",
                    "entity_fieldname": "aliases",
                    "_key": "aliases"
                  },
                  {
                    "description": "The city part of the postal address.",
                    "example": "Cambridge",
                    "type": "string",
                    "api_fieldname": "city",
                    "entity_fieldname": "city",
                    "_key": "city"
                  },
                  {
                    "description": "The name of the company.",
                    "example": "ARM Holdings Plc",
                    "type": "string",
                    "api_fieldname": "company",
                    "entity_fieldname": "company",
                    "_key": "company"
                  },
                  {
                    "description": "The name of the contact person for this account.",
                    "example": "J. Doe",
                    "type": "string",
                    "api_fieldname": "contact",
                    "entity_fieldname": "contact",
                    "_key": "contact"
                  },
                  {
                    "description": "Contract number of the customer.",
                    "example": "1NX25_0001",
                    "type": "string",
                    "api_fieldname": "contract_number",
                    "entity_fieldname": "contract_number",
                    "_key": "contract_number"
                  },
                  {
                    "description": "The country part of the postal address.",
                    "example": "United Kingdom",
                    "type": "string",
                    "api_fieldname": "country",
                    "entity_fieldname": "country",
                    "_key": "country"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Account's custom properties as key-value pairs.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "Customer number of the customer.",
                    "example": "1NC25_0001",
                    "type": "string",
                    "api_fieldname": "customer_number",
                    "entity_fieldname": "customer_number",
                    "_key": "customer_number"
                  },
                  {
                    "description": "The display name for the account.",
                    "example": "ARM",
                    "type": "string",
                    "api_fieldname": "display_name",
                    "entity_fieldname": "display_name",
                    "_key": "display_name"
                  },
                  {
                    "description": "The company email address for this account.",
                    "example": "info@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "Account end market.",
                    "example": "IT",
                    "type": "string",
                    "api_fieldname": "end_market",
                    "entity_fieldname": "end_market",
                    "_key": "end_market"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Expiration time of the account, as UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expiration",
                    "entity_fieldname": "expiration",
                    "_key": "expiration"
                  },
                  {
                    "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                    "example": "180",
                    "type": "string",
                    "api_fieldname": "expiration_warning_threshold",
                    "entity_fieldname": "expiration_warning_threshold",
                    "_key": "expiration_warning_threshold"
                  },
                  {
                    "description": "Account ID.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The reference token expiration time in minutes for this account.",
                    "example": "30",
                    "type": "string",
                    "api_fieldname": "idle_timeout",
                    "entity_fieldname": "idle_timeout",
                    "_key": "idle_timeout"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "List of limits as key-value pairs if requested.",
                    "type": "object",
                    "api_fieldname": "limits",
                    "entity_fieldname": "limits",
                    "_key": "limits"
                  },
                  {
                    "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                    "enum": [
                      "enforced",
                      "optional"
                    ],
                    "type": "string",
                    "api_fieldname": "mfa_status",
                    "entity_fieldname": "mfa_status",
                    "_key": "mfa_status"
                  },
                  {
                    "description": "A list of notification email addresses.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "notification_emails",
                    "entity_fieldname": "notification_emails",
                    "_key": "notification_emails"
                  },
                  {
                    "description": "Entity name: always 'account'",
                    "enum": [
                      "account"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "This object represents parent account contact details in responses.",
                    "properties": [
                      {
                        "description": "The email address of the admin user who is the contact person of the parent account.",
                        "example": "info@arm.com",
                        "type": "string",
                        "api_fieldname": "admin_email",
                        "entity_fieldname": "admin_email",
                        "_key": "admin_email"
                      },
                      {
                        "description": "The name of the admin user who is the contact person of the parent account.",
                        "example": "J. Doe",
                        "type": "string",
                        "api_fieldname": "admin_name",
                        "entity_fieldname": "admin_name",
                        "_key": "admin_name"
                      },
                      {
                        "description": "The ID of the parent account",
                        "example": "01619571dad80242ac12000600000000",
                        "type": "string",
                        "api_fieldname": "id",
                        "entity_fieldname": "id",
                        "_key": "id"
                      }
                    ],
                    "type": "object",
                    "foreign_key": {
                      "group": "Accounts",
                      "entity": "parent_account"
                    },
                    "api_fieldname": "parent_account",
                    "entity_fieldname": "parent_account",
                    "_key": "parent_account"
                  },
                  {
                    "description": "The ID of the parent account, if it has any.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "parent_id",
                    "entity_fieldname": "parent_id",
                    "_key": "parent_id"
                  },
                  {
                    "properties": [
                      {
                        "description": "Minimum length for the password. A number between 8 and 512.",
                        "example": "8",
                        "type": "string",
                        "api_fieldname": "minimum_length",
                        "entity_fieldname": "minimum_length",
                        "_key": "minimum_length"
                      }
                    ],
                    "required": [
                      "minimum_length"
                    ],
                    "type": "object",
                    "foreign_key": {
                      "group": "Accounts",
                      "entity": "password_policy"
                    },
                    "api_fieldname": "password_policy",
                    "entity_fieldname": "password_policy",
                    "_key": "password_policy"
                  },
                  {
                    "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                    "format": "int32",
                    "maximum": 45,
                    "minimum": 1,
                    "type": "integer",
                    "api_fieldname": "password_recovery_expiration",
                    "entity_fieldname": "password_recovery_expiration",
                    "_key": "password_recovery_expiration"
                  },
                  {
                    "description": "The phone number of a representative of the company.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "_key": "phone_number"
                  },
                  {
                    "description": "List of policies if requested.",
                    "items": {
                      "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                      "properties": [
                        {
                          "description": "Comma separated list of actions, empty string represents all actions.",
                          "example": "GET",
                          "type": "string",
                          "api_fieldname": "action",
                          "entity_fieldname": "action",
                          "_key": "action"
                        },
                        {
                          "description": "True or false controlling whether an action is allowed or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "allow",
                          "entity_fieldname": "allow",
                          "_key": "allow"
                        },
                        {
                          "description": "Feature name corresponding to this policy.",
                          "example": "update-campaigns",
                          "type": "string",
                          "api_fieldname": "feature",
                          "entity_fieldname": "feature",
                          "_key": "feature"
                        },
                        {
                          "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                          "example": false,
                          "type": "boolean",
                          "api_fieldname": "inherited",
                          "entity_fieldname": "inherited",
                          "_key": "inherited"
                        },
                        {
                          "description": "Resource that is protected by this policy.",
                          "example": "/v3/update-campaign",
                          "type": "string",
                          "api_fieldname": "resource",
                          "entity_fieldname": "resource",
                          "_key": "resource"
                        }
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "policy"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "policies",
                    "entity_fieldname": "policies",
                    "_key": "policies"
                  },
                  {
                    "description": "The postal code part of the postal address.",
                    "example": "CB1 9NJ",
                    "type": "string",
                    "api_fieldname": "postal_code",
                    "entity_fieldname": "postal_code",
                    "_key": "postal_code"
                  },
                  {
                    "description": "A reason note for updating the status of the account",
                    "example": "Subscription paid.",
                    "type": "string",
                    "api_fieldname": "reason",
                    "entity_fieldname": "reason",
                    "_key": "reason"
                  },
                  {
                    "description": "A reference note for updating the status of the account",
                    "example": "ARM-INT-0001",
                    "type": "string",
                    "api_fieldname": "reference_note",
                    "entity_fieldname": "reference_note",
                    "_key": "reference_note"
                  },
                  {
                    "description": "Email address of the sales contact.",
                    "example": "sales@arm.com",
                    "type": "string",
                    "api_fieldname": "sales_contact",
                    "entity_fieldname": "sales_contact",
                    "_key": "sales_contact"
                  },
                  {
                    "description": "The state part of the postal address.",
                    "example": " ",
                    "type": "string",
                    "api_fieldname": "state",
                    "entity_fieldname": "state",
                    "_key": "state"
                  },
                  {
                    "description": "The status of the account.",
                    "enum": [
                      "ENROLLING",
                      "ACTIVE",
                      "RESTRICTED",
                      "SUSPENDED"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "List of sub accounts. Not available for developer users.",
                    "items": {
                      "description": "This object represents an account in requests and responses.",
                      "properties": [
                        {
                          "description": "Postal address line 1.",
                          "example": "110 Fulbourn Rd",
                          "type": "string",
                          "_key": "address_line1"
                        },
                        {
                          "description": "Postal address line 2.",
                          "example": " ",
                          "type": "string",
                          "_key": "address_line2"
                        },
                        {
                          "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin@arm.com",
                          "type": "string",
                          "_key": "admin_email"
                        },
                        {
                          "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "Admin Doe",
                          "type": "string",
                          "_key": "admin_full_name"
                        },
                        {
                          "description": "The ID of the admin user created for this account.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "admin_id"
                        },
                        {
                          "description": "The admin API key created for this account. Present only in the response for the account creation.",
                          "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                          "readOnly": true,
                          "type": "string",
                          "_key": "admin_key"
                        },
                        {
                          "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin",
                          "type": "string",
                          "_key": "admin_name"
                        },
                        {
                          "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "PZf9eEUH43DAPE9ULINFeuj",
                          "type": "string",
                          "_key": "admin_password"
                        },
                        {
                          "description": "An array of aliases.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "aliases"
                        },
                        {
                          "description": "The city part of the postal address.",
                          "example": "Cambridge",
                          "type": "string",
                          "_key": "city"
                        },
                        {
                          "description": "The name of the company.",
                          "example": "ARM Holdings Plc",
                          "type": "string",
                          "_key": "company"
                        },
                        {
                          "description": "The name of the contact person for this account.",
                          "example": "J. Doe",
                          "type": "string",
                          "_key": "contact"
                        },
                        {
                          "description": "Contract number of the customer.",
                          "example": "1NX25_0001",
                          "type": "string",
                          "_key": "contract_number"
                        },
                        {
                          "description": "The country part of the postal address.",
                          "example": "United Kingdom",
                          "type": "string",
                          "_key": "country"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Account's custom properties as key-value pairs.",
                          "type": "object",
                          "_key": "custom_fields"
                        },
                        {
                          "description": "Customer number of the customer.",
                          "example": "1NC25_0001",
                          "type": "string",
                          "_key": "customer_number"
                        },
                        {
                          "description": "The display name for the account.",
                          "example": "ARM",
                          "type": "string",
                          "_key": "display_name"
                        },
                        {
                          "description": "The company email address for this account.",
                          "example": "info@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "Account end market.",
                          "example": "IT",
                          "type": "string",
                          "_key": "end_market"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Expiration time of the account, as UTC time RFC3339.",
                          "format": "date-time",
                          "type": "string",
                          "_key": "expiration"
                        },
                        {
                          "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                          "example": "180",
                          "type": "string",
                          "_key": "expiration_warning_threshold"
                        },
                        {
                          "description": "Account ID.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "The reference token expiration time in minutes for this account.",
                          "example": "30",
                          "type": "string",
                          "_key": "idle_timeout"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "List of limits as key-value pairs if requested.",
                          "type": "object",
                          "_key": "limits"
                        },
                        {
                          "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                          "enum": [
                            "enforced",
                            "optional"
                          ],
                          "type": "string",
                          "_key": "mfa_status"
                        },
                        {
                          "description": "A list of notification email addresses.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "notification_emails"
                        },
                        {
                          "description": "Entity name: always 'account'",
                          "enum": [
                            "account"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "This object represents parent account contact details in responses.",
                          "properties": [
                            {
                              "description": "The email address of the admin user who is the contact person of the parent account.",
                              "example": "info@arm.com",
                              "type": "string",
                              "api_fieldname": "admin_email",
                              "entity_fieldname": "admin_email",
                              "_key": "admin_email"
                            },
                            {
                              "description": "The name of the admin user who is the contact person of the parent account.",
                              "example": "J. Doe",
                              "type": "string",
                              "api_fieldname": "admin_name",
                              "entity_fieldname": "admin_name",
                              "_key": "admin_name"
                            },
                            {
                              "description": "The ID of the parent account",
                              "example": "01619571dad80242ac12000600000000",
                              "type": "string",
                              "api_fieldname": "id",
                              "entity_fieldname": "id",
                              "_key": "id"
                            }
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "parent_account"
                          },
                          "_key": "parent_account"
                        },
                        {
                          "description": "The ID of the parent account, if it has any.",
                          "example": "01619571dad80242ac12000600000000",
                          "type": "string",
                          "_key": "parent_id"
                        },
                        {
                          "properties": [
                            {
                              "description": "Minimum length for the password. A number between 8 and 512.",
                              "example": "8",
                              "type": "string",
                              "api_fieldname": "minimum_length",
                              "entity_fieldname": "minimum_length",
                              "_key": "minimum_length"
                            }
                          ],
                          "required": [
                            "minimum_length"
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "password_policy"
                          },
                          "_key": "password_policy"
                        },
                        {
                          "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                          "format": "int32",
                          "maximum": 45,
                          "minimum": 1,
                          "type": "integer",
                          "_key": "password_recovery_expiration"
                        },
                        {
                          "description": "The phone number of a representative of the company.",
                          "example": "+44 (1223) 400 400",
                          "type": "string",
                          "_key": "phone_number"
                        },
                        {
                          "description": "List of policies if requested.",
                          "items": {
                            "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                            "properties": [
                              {
                                "description": "Comma separated list of actions, empty string represents all actions.",
                                "example": "GET",
                                "type": "string",
                                "api_fieldname": "action",
                                "entity_fieldname": "action",
                                "_key": "action"
                              },
                              {
                                "description": "True or false controlling whether an action is allowed or not.",
                                "example": true,
                                "type": "boolean",
                                "api_fieldname": "allow",
                                "entity_fieldname": "allow",
                                "_key": "allow"
                              },
                              {
                                "description": "Feature name corresponding to this policy.",
                                "example": "update-campaigns",
                                "type": "string",
                                "api_fieldname": "feature",
                                "entity_fieldname": "feature",
                                "_key": "feature"
                              },
                              {
                                "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                                "example": false,
                                "type": "boolean",
                                "api_fieldname": "inherited",
                                "entity_fieldname": "inherited",
                                "_key": "inherited"
                              },
                              {
                                "description": "Resource that is protected by this policy.",
                                "example": "/v3/update-campaign",
                                "type": "string",
                                "api_fieldname": "resource",
                                "entity_fieldname": "resource",
                                "_key": "resource"
                              }
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "policy"
                            }
                          },
                          "type": "array",
                          "_key": "policies"
                        },
                        {
                          "description": "The postal code part of the postal address.",
                          "example": "CB1 9NJ",
                          "type": "string",
                          "_key": "postal_code"
                        },
                        {
                          "description": "A reason note for updating the status of the account",
                          "example": "Subscription paid.",
                          "type": "string",
                          "_key": "reason"
                        },
                        {
                          "description": "A reference note for updating the status of the account",
                          "example": "ARM-INT-0001",
                          "type": "string",
                          "_key": "reference_note"
                        },
                        {
                          "description": "Email address of the sales contact.",
                          "example": "sales@arm.com",
                          "type": "string",
                          "_key": "sales_contact"
                        },
                        {
                          "description": "The state part of the postal address.",
                          "example": " ",
                          "type": "string",
                          "_key": "state"
                        },
                        {
                          "description": "The status of the account.",
                          "enum": [
                            "ENROLLING",
                            "ACTIVE",
                            "RESTRICTED",
                            "SUSPENDED"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "List of sub accounts. Not available for developer users.",
                          "items": [],
                          "type": "array",
                          "_key": "sub_accounts"
                        },
                        {
                          "description": "Account template ID.",
                          "example": "01619571e7160242ac12000600000000",
                          "type": "string",
                          "_key": "template_id"
                        },
                        {
                          "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                          "example": "1",
                          "type": "string",
                          "_key": "tier"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "upgraded_at"
                        }
                      ],
                      "required": [
                        "end_market",
                        "etag",
                        "id",
                        "object",
                        "status",
                        "tier"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "api_fieldname": "sub_accounts",
                    "entity_fieldname": "sub_accounts",
                    "_key": "sub_accounts"
                  },
                  {
                    "description": "Account template ID.",
                    "example": "01619571e7160242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "template_id",
                    "entity_fieldname": "template_id",
                    "_key": "template_id"
                  },
                  {
                    "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "tier",
                    "entity_fieldname": "tier",
                    "_key": "tier"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "upgraded_at",
                    "entity_fieldname": "upgraded_at",
                    "_key": "upgraded_at"
                  }
                ],
                "required": [
                  "end_market",
                  "etag",
                  "id",
                  "object",
                  "status",
                  "tier"
                ],
                "type": "object"
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/accounts/me",
          "summary": "Get account info.",
          "return_type": "account",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "account"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "address_line1",
            "address_line2",
            "admin_email",
            "admin_full_name",
            "admin_id",
            "admin_key",
            "admin_name",
            "admin_password",
            "aliases",
            "city",
            "company",
            "contact",
            "contract_number",
            "country",
            "created_at",
            "custom_fields",
            "customer_number",
            "display_name",
            "email",
            "end_market",
            "expiration",
            "expiration_warning_threshold",
            "id",
            "idle_timeout",
            "limits",
            "mfa_status",
            "notification_emails",
            "parent_account",
            "parent_id",
            "password_policy",
            "password_recovery_expiration",
            "phone_number",
            "policies",
            "postal_code",
            "reason",
            "reference_note",
            "sales_contact",
            "state",
            "status",
            "template_id",
            "tier",
            "updated_at",
            "upgraded_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "account_id": "id"
          },
          "operation_id": "getMyAccountInfo",
          "notes": "This is provided by the SDK to avoid listing to retrieve the user's own Account.",
          "pagination": false,
          "_key": "me"
        },
        {
          "description": "Returns detailed information about the account.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id} -H 'Authorization: Bearer API_KEY'`.",
          "field_renames": [],
          "fields": [
            {
              "description": "Account ID.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "Comma separated additional data to return. Currently supported: limits, policies, sub_accounts",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "Property name to be returned from account specific properties.",
              "in": "query",
              "name": "properties",
              "required": false,
              "type": "string",
              "entity_fieldname": "properties",
              "api_fieldname": "properties",
              "external_param": true,
              "parameter_fieldname": "properties",
              "_key": "properties"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents an account in requests and responses.",
                "properties": [
                  {
                    "description": "Postal address line 1.",
                    "example": "110 Fulbourn Rd",
                    "type": "string",
                    "api_fieldname": "address_line1",
                    "entity_fieldname": "address_line1",
                    "_key": "address_line1"
                  },
                  {
                    "description": "Postal address line 2.",
                    "example": " ",
                    "type": "string",
                    "api_fieldname": "address_line2",
                    "entity_fieldname": "address_line2",
                    "_key": "address_line2"
                  },
                  {
                    "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "admin@arm.com",
                    "type": "string",
                    "api_fieldname": "admin_email",
                    "entity_fieldname": "admin_email",
                    "_key": "admin_email"
                  },
                  {
                    "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "Admin Doe",
                    "type": "string",
                    "api_fieldname": "admin_full_name",
                    "entity_fieldname": "admin_full_name",
                    "_key": "admin_full_name"
                  },
                  {
                    "description": "The ID of the admin user created for this account.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "admin_id",
                    "entity_fieldname": "admin_id",
                    "_key": "admin_id"
                  },
                  {
                    "description": "The admin API key created for this account. Present only in the response for the account creation.",
                    "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "admin_key",
                    "entity_fieldname": "admin_key",
                    "_key": "admin_key"
                  },
                  {
                    "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "admin_name",
                    "entity_fieldname": "admin_name",
                    "_key": "admin_name"
                  },
                  {
                    "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "admin_password",
                    "entity_fieldname": "admin_password",
                    "_key": "admin_password"
                  },
                  {
                    "description": "An array of aliases.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "aliases",
                    "entity_fieldname": "aliases",
                    "_key": "aliases"
                  },
                  {
                    "description": "The city part of the postal address.",
                    "example": "Cambridge",
                    "type": "string",
                    "api_fieldname": "city",
                    "entity_fieldname": "city",
                    "_key": "city"
                  },
                  {
                    "description": "The name of the company.",
                    "example": "ARM Holdings Plc",
                    "type": "string",
                    "api_fieldname": "company",
                    "entity_fieldname": "company",
                    "_key": "company"
                  },
                  {
                    "description": "The name of the contact person for this account.",
                    "example": "J. Doe",
                    "type": "string",
                    "api_fieldname": "contact",
                    "entity_fieldname": "contact",
                    "_key": "contact"
                  },
                  {
                    "description": "Contract number of the customer.",
                    "example": "1NX25_0001",
                    "type": "string",
                    "api_fieldname": "contract_number",
                    "entity_fieldname": "contract_number",
                    "_key": "contract_number"
                  },
                  {
                    "description": "The country part of the postal address.",
                    "example": "United Kingdom",
                    "type": "string",
                    "api_fieldname": "country",
                    "entity_fieldname": "country",
                    "_key": "country"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Account's custom properties as key-value pairs.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "Customer number of the customer.",
                    "example": "1NC25_0001",
                    "type": "string",
                    "api_fieldname": "customer_number",
                    "entity_fieldname": "customer_number",
                    "_key": "customer_number"
                  },
                  {
                    "description": "The display name for the account.",
                    "example": "ARM",
                    "type": "string",
                    "api_fieldname": "display_name",
                    "entity_fieldname": "display_name",
                    "_key": "display_name"
                  },
                  {
                    "description": "The company email address for this account.",
                    "example": "info@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "Account end market.",
                    "example": "IT",
                    "type": "string",
                    "api_fieldname": "end_market",
                    "entity_fieldname": "end_market",
                    "_key": "end_market"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Expiration time of the account, as UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expiration",
                    "entity_fieldname": "expiration",
                    "_key": "expiration"
                  },
                  {
                    "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                    "example": "180",
                    "type": "string",
                    "api_fieldname": "expiration_warning_threshold",
                    "entity_fieldname": "expiration_warning_threshold",
                    "_key": "expiration_warning_threshold"
                  },
                  {
                    "description": "Account ID.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The reference token expiration time in minutes for this account.",
                    "example": "30",
                    "type": "string",
                    "api_fieldname": "idle_timeout",
                    "entity_fieldname": "idle_timeout",
                    "_key": "idle_timeout"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "List of limits as key-value pairs if requested.",
                    "type": "object",
                    "api_fieldname": "limits",
                    "entity_fieldname": "limits",
                    "_key": "limits"
                  },
                  {
                    "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                    "enum": [
                      "enforced",
                      "optional"
                    ],
                    "type": "string",
                    "api_fieldname": "mfa_status",
                    "entity_fieldname": "mfa_status",
                    "_key": "mfa_status"
                  },
                  {
                    "description": "A list of notification email addresses.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "notification_emails",
                    "entity_fieldname": "notification_emails",
                    "_key": "notification_emails"
                  },
                  {
                    "description": "Entity name: always 'account'",
                    "enum": [
                      "account"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "This object represents parent account contact details in responses.",
                    "properties": [
                      {
                        "description": "The email address of the admin user who is the contact person of the parent account.",
                        "example": "info@arm.com",
                        "type": "string",
                        "api_fieldname": "admin_email",
                        "entity_fieldname": "admin_email",
                        "_key": "admin_email"
                      },
                      {
                        "description": "The name of the admin user who is the contact person of the parent account.",
                        "example": "J. Doe",
                        "type": "string",
                        "api_fieldname": "admin_name",
                        "entity_fieldname": "admin_name",
                        "_key": "admin_name"
                      },
                      {
                        "description": "The ID of the parent account",
                        "example": "01619571dad80242ac12000600000000",
                        "type": "string",
                        "api_fieldname": "id",
                        "entity_fieldname": "id",
                        "_key": "id"
                      }
                    ],
                    "type": "object",
                    "foreign_key": {
                      "group": "Accounts",
                      "entity": "parent_account"
                    },
                    "api_fieldname": "parent_account",
                    "entity_fieldname": "parent_account",
                    "_key": "parent_account"
                  },
                  {
                    "description": "The ID of the parent account, if it has any.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "parent_id",
                    "entity_fieldname": "parent_id",
                    "_key": "parent_id"
                  },
                  {
                    "properties": [
                      {
                        "description": "Minimum length for the password. A number between 8 and 512.",
                        "example": "8",
                        "type": "string",
                        "api_fieldname": "minimum_length",
                        "entity_fieldname": "minimum_length",
                        "_key": "minimum_length"
                      }
                    ],
                    "required": [
                      "minimum_length"
                    ],
                    "type": "object",
                    "foreign_key": {
                      "group": "Accounts",
                      "entity": "password_policy"
                    },
                    "api_fieldname": "password_policy",
                    "entity_fieldname": "password_policy",
                    "_key": "password_policy"
                  },
                  {
                    "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                    "format": "int32",
                    "maximum": 45,
                    "minimum": 1,
                    "type": "integer",
                    "api_fieldname": "password_recovery_expiration",
                    "entity_fieldname": "password_recovery_expiration",
                    "_key": "password_recovery_expiration"
                  },
                  {
                    "description": "The phone number of a representative of the company.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "_key": "phone_number"
                  },
                  {
                    "description": "List of policies if requested.",
                    "items": {
                      "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                      "properties": [
                        {
                          "description": "Comma separated list of actions, empty string represents all actions.",
                          "example": "GET",
                          "type": "string",
                          "api_fieldname": "action",
                          "entity_fieldname": "action",
                          "_key": "action"
                        },
                        {
                          "description": "True or false controlling whether an action is allowed or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "allow",
                          "entity_fieldname": "allow",
                          "_key": "allow"
                        },
                        {
                          "description": "Feature name corresponding to this policy.",
                          "example": "update-campaigns",
                          "type": "string",
                          "api_fieldname": "feature",
                          "entity_fieldname": "feature",
                          "_key": "feature"
                        },
                        {
                          "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                          "example": false,
                          "type": "boolean",
                          "api_fieldname": "inherited",
                          "entity_fieldname": "inherited",
                          "_key": "inherited"
                        },
                        {
                          "description": "Resource that is protected by this policy.",
                          "example": "/v3/update-campaign",
                          "type": "string",
                          "api_fieldname": "resource",
                          "entity_fieldname": "resource",
                          "_key": "resource"
                        }
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "policy"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "policies",
                    "entity_fieldname": "policies",
                    "_key": "policies"
                  },
                  {
                    "description": "The postal code part of the postal address.",
                    "example": "CB1 9NJ",
                    "type": "string",
                    "api_fieldname": "postal_code",
                    "entity_fieldname": "postal_code",
                    "_key": "postal_code"
                  },
                  {
                    "description": "A reason note for updating the status of the account",
                    "example": "Subscription paid.",
                    "type": "string",
                    "api_fieldname": "reason",
                    "entity_fieldname": "reason",
                    "_key": "reason"
                  },
                  {
                    "description": "A reference note for updating the status of the account",
                    "example": "ARM-INT-0001",
                    "type": "string",
                    "api_fieldname": "reference_note",
                    "entity_fieldname": "reference_note",
                    "_key": "reference_note"
                  },
                  {
                    "description": "Email address of the sales contact.",
                    "example": "sales@arm.com",
                    "type": "string",
                    "api_fieldname": "sales_contact",
                    "entity_fieldname": "sales_contact",
                    "_key": "sales_contact"
                  },
                  {
                    "description": "The state part of the postal address.",
                    "example": " ",
                    "type": "string",
                    "api_fieldname": "state",
                    "entity_fieldname": "state",
                    "_key": "state"
                  },
                  {
                    "description": "The status of the account.",
                    "enum": [
                      "ENROLLING",
                      "ACTIVE",
                      "RESTRICTED",
                      "SUSPENDED"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "List of sub accounts. Not available for developer users.",
                    "items": {
                      "description": "This object represents an account in requests and responses.",
                      "properties": [
                        {
                          "description": "Postal address line 1.",
                          "example": "110 Fulbourn Rd",
                          "type": "string",
                          "_key": "address_line1"
                        },
                        {
                          "description": "Postal address line 2.",
                          "example": " ",
                          "type": "string",
                          "_key": "address_line2"
                        },
                        {
                          "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin@arm.com",
                          "type": "string",
                          "_key": "admin_email"
                        },
                        {
                          "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "Admin Doe",
                          "type": "string",
                          "_key": "admin_full_name"
                        },
                        {
                          "description": "The ID of the admin user created for this account.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "admin_id"
                        },
                        {
                          "description": "The admin API key created for this account. Present only in the response for the account creation.",
                          "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                          "readOnly": true,
                          "type": "string",
                          "_key": "admin_key"
                        },
                        {
                          "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin",
                          "type": "string",
                          "_key": "admin_name"
                        },
                        {
                          "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "PZf9eEUH43DAPE9ULINFeuj",
                          "type": "string",
                          "_key": "admin_password"
                        },
                        {
                          "description": "An array of aliases.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "aliases"
                        },
                        {
                          "description": "The city part of the postal address.",
                          "example": "Cambridge",
                          "type": "string",
                          "_key": "city"
                        },
                        {
                          "description": "The name of the company.",
                          "example": "ARM Holdings Plc",
                          "type": "string",
                          "_key": "company"
                        },
                        {
                          "description": "The name of the contact person for this account.",
                          "example": "J. Doe",
                          "type": "string",
                          "_key": "contact"
                        },
                        {
                          "description": "Contract number of the customer.",
                          "example": "1NX25_0001",
                          "type": "string",
                          "_key": "contract_number"
                        },
                        {
                          "description": "The country part of the postal address.",
                          "example": "United Kingdom",
                          "type": "string",
                          "_key": "country"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Account's custom properties as key-value pairs.",
                          "type": "object",
                          "_key": "custom_fields"
                        },
                        {
                          "description": "Customer number of the customer.",
                          "example": "1NC25_0001",
                          "type": "string",
                          "_key": "customer_number"
                        },
                        {
                          "description": "The display name for the account.",
                          "example": "ARM",
                          "type": "string",
                          "_key": "display_name"
                        },
                        {
                          "description": "The company email address for this account.",
                          "example": "info@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "Account end market.",
                          "example": "IT",
                          "type": "string",
                          "_key": "end_market"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Expiration time of the account, as UTC time RFC3339.",
                          "format": "date-time",
                          "type": "string",
                          "_key": "expiration"
                        },
                        {
                          "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                          "example": "180",
                          "type": "string",
                          "_key": "expiration_warning_threshold"
                        },
                        {
                          "description": "Account ID.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "The reference token expiration time in minutes for this account.",
                          "example": "30",
                          "type": "string",
                          "_key": "idle_timeout"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "List of limits as key-value pairs if requested.",
                          "type": "object",
                          "_key": "limits"
                        },
                        {
                          "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                          "enum": [
                            "enforced",
                            "optional"
                          ],
                          "type": "string",
                          "_key": "mfa_status"
                        },
                        {
                          "description": "A list of notification email addresses.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "notification_emails"
                        },
                        {
                          "description": "Entity name: always 'account'",
                          "enum": [
                            "account"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "This object represents parent account contact details in responses.",
                          "properties": [
                            {
                              "description": "The email address of the admin user who is the contact person of the parent account.",
                              "example": "info@arm.com",
                              "type": "string",
                              "api_fieldname": "admin_email",
                              "entity_fieldname": "admin_email",
                              "_key": "admin_email"
                            },
                            {
                              "description": "The name of the admin user who is the contact person of the parent account.",
                              "example": "J. Doe",
                              "type": "string",
                              "api_fieldname": "admin_name",
                              "entity_fieldname": "admin_name",
                              "_key": "admin_name"
                            },
                            {
                              "description": "The ID of the parent account",
                              "example": "01619571dad80242ac12000600000000",
                              "type": "string",
                              "api_fieldname": "id",
                              "entity_fieldname": "id",
                              "_key": "id"
                            }
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "parent_account"
                          },
                          "_key": "parent_account"
                        },
                        {
                          "description": "The ID of the parent account, if it has any.",
                          "example": "01619571dad80242ac12000600000000",
                          "type": "string",
                          "_key": "parent_id"
                        },
                        {
                          "properties": [
                            {
                              "description": "Minimum length for the password. A number between 8 and 512.",
                              "example": "8",
                              "type": "string",
                              "api_fieldname": "minimum_length",
                              "entity_fieldname": "minimum_length",
                              "_key": "minimum_length"
                            }
                          ],
                          "required": [
                            "minimum_length"
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "password_policy"
                          },
                          "_key": "password_policy"
                        },
                        {
                          "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                          "format": "int32",
                          "maximum": 45,
                          "minimum": 1,
                          "type": "integer",
                          "_key": "password_recovery_expiration"
                        },
                        {
                          "description": "The phone number of a representative of the company.",
                          "example": "+44 (1223) 400 400",
                          "type": "string",
                          "_key": "phone_number"
                        },
                        {
                          "description": "List of policies if requested.",
                          "items": {
                            "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                            "properties": [
                              {
                                "description": "Comma separated list of actions, empty string represents all actions.",
                                "example": "GET",
                                "type": "string",
                                "api_fieldname": "action",
                                "entity_fieldname": "action",
                                "_key": "action"
                              },
                              {
                                "description": "True or false controlling whether an action is allowed or not.",
                                "example": true,
                                "type": "boolean",
                                "api_fieldname": "allow",
                                "entity_fieldname": "allow",
                                "_key": "allow"
                              },
                              {
                                "description": "Feature name corresponding to this policy.",
                                "example": "update-campaigns",
                                "type": "string",
                                "api_fieldname": "feature",
                                "entity_fieldname": "feature",
                                "_key": "feature"
                              },
                              {
                                "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                                "example": false,
                                "type": "boolean",
                                "api_fieldname": "inherited",
                                "entity_fieldname": "inherited",
                                "_key": "inherited"
                              },
                              {
                                "description": "Resource that is protected by this policy.",
                                "example": "/v3/update-campaign",
                                "type": "string",
                                "api_fieldname": "resource",
                                "entity_fieldname": "resource",
                                "_key": "resource"
                              }
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "policy"
                            }
                          },
                          "type": "array",
                          "_key": "policies"
                        },
                        {
                          "description": "The postal code part of the postal address.",
                          "example": "CB1 9NJ",
                          "type": "string",
                          "_key": "postal_code"
                        },
                        {
                          "description": "A reason note for updating the status of the account",
                          "example": "Subscription paid.",
                          "type": "string",
                          "_key": "reason"
                        },
                        {
                          "description": "A reference note for updating the status of the account",
                          "example": "ARM-INT-0001",
                          "type": "string",
                          "_key": "reference_note"
                        },
                        {
                          "description": "Email address of the sales contact.",
                          "example": "sales@arm.com",
                          "type": "string",
                          "_key": "sales_contact"
                        },
                        {
                          "description": "The state part of the postal address.",
                          "example": " ",
                          "type": "string",
                          "_key": "state"
                        },
                        {
                          "description": "The status of the account.",
                          "enum": [
                            "ENROLLING",
                            "ACTIVE",
                            "RESTRICTED",
                            "SUSPENDED"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "List of sub accounts. Not available for developer users.",
                          "items": [],
                          "type": "array",
                          "_key": "sub_accounts"
                        },
                        {
                          "description": "Account template ID.",
                          "example": "01619571e7160242ac12000600000000",
                          "type": "string",
                          "_key": "template_id"
                        },
                        {
                          "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                          "example": "1",
                          "type": "string",
                          "_key": "tier"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "upgraded_at"
                        }
                      ],
                      "required": [
                        "end_market",
                        "etag",
                        "id",
                        "object",
                        "status",
                        "tier"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "api_fieldname": "sub_accounts",
                    "entity_fieldname": "sub_accounts",
                    "_key": "sub_accounts"
                  },
                  {
                    "description": "Account template ID.",
                    "example": "01619571e7160242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "template_id",
                    "entity_fieldname": "template_id",
                    "_key": "template_id"
                  },
                  {
                    "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "tier",
                    "entity_fieldname": "tier",
                    "_key": "tier"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "upgraded_at",
                    "entity_fieldname": "upgraded_at",
                    "_key": "upgraded_at"
                  }
                ],
                "required": [
                  "end_market",
                  "etag",
                  "id",
                  "object",
                  "status",
                  "tier"
                ],
                "type": "object"
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Account with the given ID not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}",
          "summary": "Get account info.",
          "return_type": "account",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "account"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "address_line1",
            "address_line2",
            "admin_email",
            "admin_full_name",
            "admin_id",
            "admin_key",
            "admin_name",
            "admin_password",
            "aliases",
            "city",
            "company",
            "contact",
            "contract_number",
            "country",
            "created_at",
            "custom_fields",
            "customer_number",
            "display_name",
            "email",
            "end_market",
            "expiration",
            "expiration_warning_threshold",
            "idle_timeout",
            "limits",
            "mfa_status",
            "notification_emails",
            "parent_account",
            "parent_id",
            "password_policy",
            "password_recovery_expiration",
            "phone_number",
            "policies",
            "postal_code",
            "reason",
            "reference_note",
            "sales_contact",
            "state",
            "status",
            "template_id",
            "tier",
            "updated_at",
            "upgraded_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "account_id": "id"
          },
          "operation_id": "getAccountInfo",
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "An endpoint for retrieving trusted certificates in an array.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The entity ID to fetch after the given one.",
              "example": "01619571f3c00242ac12000600000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "Account ID.",
              "in": "path",
              "name": "account_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "account_id",
              "external_param": false,
              "parameter_fieldname": "account_id",
              "_key": "id"
            },
            {
              "description": "Comma separated additional data to return. Currently supported: total_count",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "The number of results to return (2-1000), default is 50.",
              "example": 50,
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "default": 50,
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "default": "ASC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "account_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "trusted_certificates",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01619571f3c00242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "in": "query",
                    "name": "after",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "A list of entities.",
                    "items": {
                      "description": "This object represents a trusted certificate in responses.",
                      "properties": [
                        {
                          "description": "The ID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "account_id"
                        },
                        {
                          "description": "X509.v3 trusted certificate in PEM format.",
                          "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                          "type": "string",
                          "_key": "certificate"
                        },
                        {
                          "description": "A SHA-256 fingerprint of the certificate.",
                          "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                          "type": "string",
                          "_key": "certificate_fingerprint"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "Human readable description of this certificate.",
                          "example": "Certificate created by me.",
                          "type": "string",
                          "_key": "description"
                        },
                        {
                          "description": "Device execution mode where 1 means a developer certificate.",
                          "example": 1,
                          "format": "int32",
                          "type": "integer",
                          "private_field": true,
                          "readOnly": false,
                          "_override": true,
                          "_key": "device_execution_mode"
                        },
                        {
                          "description": "If true, signature is not required. Default value false.",
                          "example": false,
                          "type": "boolean",
                          "_key": "enrollment_mode"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Entity ID.",
                          "example": "01619571d01d0242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "Issuer of the certificate.",
                          "example": "CN=issuer",
                          "type": "string",
                          "_key": "issuer"
                        },
                        {
                          "description": "Certificate name.",
                          "example": "My certificate",
                          "type": "string",
                          "_key": "name"
                        },
                        {
                          "description": "Entity name: always 'trusted-cert'",
                          "enum": [
                            "trusted-cert"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "The ID of the owner.",
                          "example": "01619571dad80242ac12000600000000",
                          "type": "string",
                          "_key": "owner_id"
                        },
                        {
                          "description": "Service name where the certificate is to be used.",
                          "enum": [
                            "lwm2m",
                            "bootstrap"
                          ],
                          "type": "string",
                          "_key": "service"
                        },
                        {
                          "description": "Status of the certificate.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "Subject of the certificate.",
                          "example": "CN=subject",
                          "type": "string",
                          "_key": "subject"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "This read-only flag indicates whether the certificate is valid or not.",
                          "example": true,
                          "readOnly": true,
                          "type": "boolean",
                          "_key": "valid"
                        },
                        {
                          "description": "Expiration time in UTC formatted as RFC3339.",
                          "example": "2038-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "validity"
                        }
                      ],
                      "required": [
                        "account_id",
                        "certificate",
                        "certificate_fingerprint",
                        "etag",
                        "id",
                        "issuer",
                        "name",
                        "object",
                        "service",
                        "subject",
                        "validity"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Security",
                        "entity": "trusted_certificate"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there is more results.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return (2-1000), default is 50.",
                    "example": 50,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "default": 50,
                    "in": "query",
                    "name": "limit",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Entity name: always 'list'",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "default": "ASC",
                    "in": "query",
                    "name": "order",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "order",
                    "enum_reference": "trusted_certificate_order_enum",
                    "_key": "order"
                  },
                  {
                    "description": "The total number or records, if requested. It might be returned also for small lists.",
                    "example": 20,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "data",
                  "has_more",
                  "limit",
                  "object",
                  "total_count"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Security",
                  "entity": "trusted_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden, only available for admins of commercial accounts.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account with the given ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/trusted-certificates",
          "summary": "Get all trusted certificates.",
          "return_type": "paginated_response(subtenant_trusted_certificate)",
          "return_info": {
            "self": false,
            "custom": false,
            "type": "subtenant_trusted_certificate"
          },
          "x_filter": {
            "device_execution_mode": [
              "eq",
              "neq",
              "eq",
              "neq"
            ],
            "enrollment_mode": [
              "eq",
              "eq"
            ],
            "expire": [
              "eq",
              "eq"
            ],
            "issuer": [
              "like",
              "like"
            ],
            "name": [
              "eq",
              "eq"
            ],
            "owner": [
              "eq",
              "eq"
            ],
            "service": [
              "eq",
              "eq"
            ],
            "status": [
              "eq",
              "eq"
            ],
            "subject": [
              "like",
              "like"
            ],
            "valid": [
              "eq",
              "eq"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "name__eq",
            "service__eq",
            "expire__eq",
            "device_execution_mode__eq",
            "device_execution_mode__neq",
            "owner__eq",
            "enrollment_mode__eq",
            "status__eq",
            "issuer__like",
            "subject__like",
            "valid__eq"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "account_id": "id"
          },
          "operation_id": "getAllAccountCertificates",
          "notes": "This lists the trusted certificates of the subtenant account.",
          "foreign_key": {
            "entity": "subtenant_trusted_certificate"
          },
          "pagination": true,
          "_key": "trusted_certificates"
        },
        {
          "description": "An endpoint for updating an account.\n\n**Example usage:**\n`curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id} -d '{\"phone_number\": \"12345678\"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "Postal address line 1.",
              "example": "110 Fulbourn Rd",
              "type": "string",
              "api_fieldname": "address_line1",
              "entity_fieldname": "address_line1",
              "parameter_fieldname": "address_line1",
              "in": "body",
              "required": false,
              "_key": "address_line1"
            },
            {
              "description": "Postal address line 2.",
              "example": " ",
              "type": "string",
              "api_fieldname": "address_line2",
              "entity_fieldname": "address_line2",
              "parameter_fieldname": "address_line2",
              "in": "body",
              "required": false,
              "_key": "address_line2"
            },
            {
              "description": "An array of aliases.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "api_fieldname": "aliases",
              "entity_fieldname": "aliases",
              "parameter_fieldname": "aliases",
              "in": "body",
              "required": false,
              "_key": "aliases"
            },
            {
              "description": "The city part of the postal address.",
              "example": "Cambridge",
              "type": "string",
              "api_fieldname": "city",
              "entity_fieldname": "city",
              "parameter_fieldname": "city",
              "in": "body",
              "required": false,
              "_key": "city"
            },
            {
              "description": "The name of the company.",
              "example": "ARM Holdings Plc",
              "type": "string",
              "api_fieldname": "company",
              "entity_fieldname": "company",
              "parameter_fieldname": "company",
              "in": "body",
              "required": false,
              "_key": "company"
            },
            {
              "description": "The name of the contact person for this account.",
              "example": "J. Doe",
              "type": "string",
              "api_fieldname": "contact",
              "entity_fieldname": "contact",
              "parameter_fieldname": "contact",
              "in": "body",
              "required": false,
              "_key": "contact"
            },
            {
              "description": "Contract number of the customer.",
              "example": "1NX25_0001",
              "type": "string",
              "api_fieldname": "contract_number",
              "entity_fieldname": "contract_number",
              "parameter_fieldname": "contract_number",
              "in": "body",
              "required": false,
              "_key": "contract_number"
            },
            {
              "description": "The country part of the postal address.",
              "example": "United Kingdom",
              "type": "string",
              "api_fieldname": "country",
              "entity_fieldname": "country",
              "parameter_fieldname": "country",
              "in": "body",
              "required": false,
              "_key": "country"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Account's custom properties as key-value pairs.",
              "type": "object",
              "api_fieldname": "custom_fields",
              "entity_fieldname": "custom_fields",
              "parameter_fieldname": "custom_fields",
              "in": "body",
              "required": false,
              "_key": "custom_fields"
            },
            {
              "description": "Customer number of the customer.",
              "example": "1NC25_0001",
              "type": "string",
              "api_fieldname": "customer_number",
              "entity_fieldname": "customer_number",
              "parameter_fieldname": "customer_number",
              "in": "body",
              "required": false,
              "_key": "customer_number"
            },
            {
              "description": "The display name for the account.",
              "example": "ARM",
              "type": "string",
              "api_fieldname": "display_name",
              "entity_fieldname": "display_name",
              "parameter_fieldname": "display_name",
              "in": "body",
              "required": false,
              "_key": "display_name"
            },
            {
              "description": "The company email address for this account.",
              "example": "info@arm.com",
              "type": "string",
              "api_fieldname": "email",
              "entity_fieldname": "email",
              "parameter_fieldname": "email",
              "in": "body",
              "required": false,
              "_key": "email"
            },
            {
              "description": "Account end market.",
              "example": "IT",
              "type": "string",
              "api_fieldname": "end_market",
              "entity_fieldname": "end_market",
              "parameter_fieldname": "end_market",
              "in": "body",
              "required": false,
              "_key": "end_market"
            },
            {
              "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
              "example": "180",
              "type": "string",
              "api_fieldname": "expiration_warning_threshold",
              "entity_fieldname": "expiration_warning_threshold",
              "parameter_fieldname": "expiration_warning_threshold",
              "in": "body",
              "required": false,
              "_key": "expiration_warning_threshold"
            },
            {
              "description": "Account ID.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "The reference token expiration time in minutes for this account.",
              "example": "30",
              "type": "string",
              "api_fieldname": "idle_timeout",
              "entity_fieldname": "idle_timeout",
              "parameter_fieldname": "idle_timeout",
              "in": "body",
              "required": false,
              "_key": "idle_timeout"
            },
            {
              "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
              "enum": [
                "enforced",
                "optional"
              ],
              "type": "string",
              "api_fieldname": "mfa_status",
              "entity_fieldname": "mfa_status",
              "parameter_fieldname": "mfa_status",
              "in": "body",
              "required": false,
              "enum_reference": "account_mfa_status_enum",
              "_key": "mfa_status"
            },
            {
              "description": "A list of notification email addresses.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "api_fieldname": "notification_emails",
              "entity_fieldname": "notification_emails",
              "parameter_fieldname": "notification_emails",
              "in": "body",
              "required": false,
              "_key": "notification_emails"
            },
            {
              "properties": [
                {
                  "description": "Minimum length for the password. A number between 8 and 512.",
                  "example": "8",
                  "type": "string",
                  "api_fieldname": "minimum_length",
                  "entity_fieldname": "minimum_length",
                  "_key": "minimum_length"
                }
              ],
              "required": false,
              "type": "object",
              "foreign_key": {
                "group": "Accounts",
                "entity": "password_policy"
              },
              "api_fieldname": "password_policy",
              "entity_fieldname": "password_policy",
              "parameter_fieldname": "password_policy",
              "in": "body",
              "_key": "password_policy"
            },
            {
              "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
              "format": "int32",
              "maximum": 45,
              "minimum": 1,
              "type": "integer",
              "api_fieldname": "password_recovery_expiration",
              "entity_fieldname": "password_recovery_expiration",
              "parameter_fieldname": "password_recovery_expiration",
              "in": "body",
              "required": false,
              "_key": "password_recovery_expiration"
            },
            {
              "description": "The phone number of a representative of the company.",
              "example": "+44 (1223) 400 400",
              "type": "string",
              "api_fieldname": "phone_number",
              "entity_fieldname": "phone_number",
              "parameter_fieldname": "phone_number",
              "in": "body",
              "required": false,
              "_key": "phone_number"
            },
            {
              "description": "The postal code part of the postal address.",
              "example": "CB1 9NJ",
              "type": "string",
              "api_fieldname": "postal_code",
              "entity_fieldname": "postal_code",
              "parameter_fieldname": "postal_code",
              "in": "body",
              "required": false,
              "_key": "postal_code"
            },
            {
              "description": "Email address of the sales contact.",
              "example": "sales@arm.com",
              "type": "string",
              "api_fieldname": "sales_contact",
              "entity_fieldname": "sales_contact",
              "parameter_fieldname": "sales_contact",
              "in": "body",
              "required": false,
              "_key": "sales_contact"
            },
            {
              "description": "The state part of the postal address.",
              "example": " ",
              "type": "string",
              "api_fieldname": "state",
              "entity_fieldname": "state",
              "parameter_fieldname": "state",
              "in": "body",
              "required": false,
              "_key": "state"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents an account in requests and responses.",
                "properties": [
                  {
                    "description": "Postal address line 1.",
                    "example": "110 Fulbourn Rd",
                    "type": "string",
                    "api_fieldname": "address_line1",
                    "entity_fieldname": "address_line1",
                    "_key": "address_line1"
                  },
                  {
                    "description": "Postal address line 2.",
                    "example": " ",
                    "type": "string",
                    "api_fieldname": "address_line2",
                    "entity_fieldname": "address_line2",
                    "_key": "address_line2"
                  },
                  {
                    "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "admin@arm.com",
                    "type": "string",
                    "api_fieldname": "admin_email",
                    "entity_fieldname": "admin_email",
                    "_key": "admin_email"
                  },
                  {
                    "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "Admin Doe",
                    "type": "string",
                    "api_fieldname": "admin_full_name",
                    "entity_fieldname": "admin_full_name",
                    "_key": "admin_full_name"
                  },
                  {
                    "description": "The ID of the admin user created for this account.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "admin_id",
                    "entity_fieldname": "admin_id",
                    "_key": "admin_id"
                  },
                  {
                    "description": "The admin API key created for this account. Present only in the response for the account creation.",
                    "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "admin_key",
                    "entity_fieldname": "admin_key",
                    "_key": "admin_key"
                  },
                  {
                    "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "admin_name",
                    "entity_fieldname": "admin_name",
                    "_key": "admin_name"
                  },
                  {
                    "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "admin_password",
                    "entity_fieldname": "admin_password",
                    "_key": "admin_password"
                  },
                  {
                    "description": "An array of aliases.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "aliases",
                    "entity_fieldname": "aliases",
                    "_key": "aliases"
                  },
                  {
                    "description": "The city part of the postal address.",
                    "example": "Cambridge",
                    "type": "string",
                    "api_fieldname": "city",
                    "entity_fieldname": "city",
                    "_key": "city"
                  },
                  {
                    "description": "The name of the company.",
                    "example": "ARM Holdings Plc",
                    "type": "string",
                    "api_fieldname": "company",
                    "entity_fieldname": "company",
                    "_key": "company"
                  },
                  {
                    "description": "The name of the contact person for this account.",
                    "example": "J. Doe",
                    "type": "string",
                    "api_fieldname": "contact",
                    "entity_fieldname": "contact",
                    "_key": "contact"
                  },
                  {
                    "description": "Contract number of the customer.",
                    "example": "1NX25_0001",
                    "type": "string",
                    "api_fieldname": "contract_number",
                    "entity_fieldname": "contract_number",
                    "_key": "contract_number"
                  },
                  {
                    "description": "The country part of the postal address.",
                    "example": "United Kingdom",
                    "type": "string",
                    "api_fieldname": "country",
                    "entity_fieldname": "country",
                    "_key": "country"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Account's custom properties as key-value pairs.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "Customer number of the customer.",
                    "example": "1NC25_0001",
                    "type": "string",
                    "api_fieldname": "customer_number",
                    "entity_fieldname": "customer_number",
                    "_key": "customer_number"
                  },
                  {
                    "description": "The display name for the account.",
                    "example": "ARM",
                    "type": "string",
                    "api_fieldname": "display_name",
                    "entity_fieldname": "display_name",
                    "_key": "display_name"
                  },
                  {
                    "description": "The company email address for this account.",
                    "example": "info@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "Account end market.",
                    "example": "IT",
                    "type": "string",
                    "api_fieldname": "end_market",
                    "entity_fieldname": "end_market",
                    "_key": "end_market"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Expiration time of the account, as UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expiration",
                    "entity_fieldname": "expiration",
                    "_key": "expiration"
                  },
                  {
                    "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                    "example": "180",
                    "type": "string",
                    "api_fieldname": "expiration_warning_threshold",
                    "entity_fieldname": "expiration_warning_threshold",
                    "_key": "expiration_warning_threshold"
                  },
                  {
                    "description": "Account ID.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The reference token expiration time in minutes for this account.",
                    "example": "30",
                    "type": "string",
                    "api_fieldname": "idle_timeout",
                    "entity_fieldname": "idle_timeout",
                    "_key": "idle_timeout"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "List of limits as key-value pairs if requested.",
                    "type": "object",
                    "api_fieldname": "limits",
                    "entity_fieldname": "limits",
                    "_key": "limits"
                  },
                  {
                    "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                    "enum": [
                      "enforced",
                      "optional"
                    ],
                    "type": "string",
                    "api_fieldname": "mfa_status",
                    "entity_fieldname": "mfa_status",
                    "_key": "mfa_status"
                  },
                  {
                    "description": "A list of notification email addresses.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "notification_emails",
                    "entity_fieldname": "notification_emails",
                    "_key": "notification_emails"
                  },
                  {
                    "description": "Entity name: always 'account'",
                    "enum": [
                      "account"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "This object represents parent account contact details in responses.",
                    "properties": [
                      {
                        "description": "The email address of the admin user who is the contact person of the parent account.",
                        "example": "info@arm.com",
                        "type": "string",
                        "api_fieldname": "admin_email",
                        "entity_fieldname": "admin_email",
                        "_key": "admin_email"
                      },
                      {
                        "description": "The name of the admin user who is the contact person of the parent account.",
                        "example": "J. Doe",
                        "type": "string",
                        "api_fieldname": "admin_name",
                        "entity_fieldname": "admin_name",
                        "_key": "admin_name"
                      },
                      {
                        "description": "The ID of the parent account",
                        "example": "01619571dad80242ac12000600000000",
                        "type": "string",
                        "api_fieldname": "id",
                        "entity_fieldname": "id",
                        "_key": "id"
                      }
                    ],
                    "type": "object",
                    "foreign_key": {
                      "group": "Accounts",
                      "entity": "parent_account"
                    },
                    "api_fieldname": "parent_account",
                    "entity_fieldname": "parent_account",
                    "_key": "parent_account"
                  },
                  {
                    "description": "The ID of the parent account, if it has any.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "parent_id",
                    "entity_fieldname": "parent_id",
                    "_key": "parent_id"
                  },
                  {
                    "properties": [
                      {
                        "description": "Minimum length for the password. A number between 8 and 512.",
                        "example": "8",
                        "type": "string",
                        "api_fieldname": "minimum_length",
                        "entity_fieldname": "minimum_length",
                        "_key": "minimum_length"
                      }
                    ],
                    "required": [
                      "minimum_length"
                    ],
                    "type": "object",
                    "foreign_key": {
                      "group": "Accounts",
                      "entity": "password_policy"
                    },
                    "api_fieldname": "password_policy",
                    "entity_fieldname": "password_policy",
                    "_key": "password_policy"
                  },
                  {
                    "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                    "format": "int32",
                    "maximum": 45,
                    "minimum": 1,
                    "type": "integer",
                    "api_fieldname": "password_recovery_expiration",
                    "entity_fieldname": "password_recovery_expiration",
                    "_key": "password_recovery_expiration"
                  },
                  {
                    "description": "The phone number of a representative of the company.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "_key": "phone_number"
                  },
                  {
                    "description": "List of policies if requested.",
                    "items": {
                      "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                      "properties": [
                        {
                          "description": "Comma separated list of actions, empty string represents all actions.",
                          "example": "GET",
                          "type": "string",
                          "api_fieldname": "action",
                          "entity_fieldname": "action",
                          "_key": "action"
                        },
                        {
                          "description": "True or false controlling whether an action is allowed or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "allow",
                          "entity_fieldname": "allow",
                          "_key": "allow"
                        },
                        {
                          "description": "Feature name corresponding to this policy.",
                          "example": "update-campaigns",
                          "type": "string",
                          "api_fieldname": "feature",
                          "entity_fieldname": "feature",
                          "_key": "feature"
                        },
                        {
                          "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                          "example": false,
                          "type": "boolean",
                          "api_fieldname": "inherited",
                          "entity_fieldname": "inherited",
                          "_key": "inherited"
                        },
                        {
                          "description": "Resource that is protected by this policy.",
                          "example": "/v3/update-campaign",
                          "type": "string",
                          "api_fieldname": "resource",
                          "entity_fieldname": "resource",
                          "_key": "resource"
                        }
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "policy"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "policies",
                    "entity_fieldname": "policies",
                    "_key": "policies"
                  },
                  {
                    "description": "The postal code part of the postal address.",
                    "example": "CB1 9NJ",
                    "type": "string",
                    "api_fieldname": "postal_code",
                    "entity_fieldname": "postal_code",
                    "_key": "postal_code"
                  },
                  {
                    "description": "A reason note for updating the status of the account",
                    "example": "Subscription paid.",
                    "type": "string",
                    "api_fieldname": "reason",
                    "entity_fieldname": "reason",
                    "_key": "reason"
                  },
                  {
                    "description": "A reference note for updating the status of the account",
                    "example": "ARM-INT-0001",
                    "type": "string",
                    "api_fieldname": "reference_note",
                    "entity_fieldname": "reference_note",
                    "_key": "reference_note"
                  },
                  {
                    "description": "Email address of the sales contact.",
                    "example": "sales@arm.com",
                    "type": "string",
                    "api_fieldname": "sales_contact",
                    "entity_fieldname": "sales_contact",
                    "_key": "sales_contact"
                  },
                  {
                    "description": "The state part of the postal address.",
                    "example": " ",
                    "type": "string",
                    "api_fieldname": "state",
                    "entity_fieldname": "state",
                    "_key": "state"
                  },
                  {
                    "description": "The status of the account.",
                    "enum": [
                      "ENROLLING",
                      "ACTIVE",
                      "RESTRICTED",
                      "SUSPENDED"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "List of sub accounts. Not available for developer users.",
                    "items": {
                      "description": "This object represents an account in requests and responses.",
                      "properties": [
                        {
                          "description": "Postal address line 1.",
                          "example": "110 Fulbourn Rd",
                          "type": "string",
                          "_key": "address_line1"
                        },
                        {
                          "description": "Postal address line 2.",
                          "example": " ",
                          "type": "string",
                          "_key": "address_line2"
                        },
                        {
                          "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin@arm.com",
                          "type": "string",
                          "_key": "admin_email"
                        },
                        {
                          "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "Admin Doe",
                          "type": "string",
                          "_key": "admin_full_name"
                        },
                        {
                          "description": "The ID of the admin user created for this account.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "admin_id"
                        },
                        {
                          "description": "The admin API key created for this account. Present only in the response for the account creation.",
                          "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
                          "readOnly": true,
                          "type": "string",
                          "_key": "admin_key"
                        },
                        {
                          "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "admin",
                          "type": "string",
                          "_key": "admin_name"
                        },
                        {
                          "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
                          "example": "PZf9eEUH43DAPE9ULINFeuj",
                          "type": "string",
                          "_key": "admin_password"
                        },
                        {
                          "description": "An array of aliases.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "aliases"
                        },
                        {
                          "description": "The city part of the postal address.",
                          "example": "Cambridge",
                          "type": "string",
                          "_key": "city"
                        },
                        {
                          "description": "The name of the company.",
                          "example": "ARM Holdings Plc",
                          "type": "string",
                          "_key": "company"
                        },
                        {
                          "description": "The name of the contact person for this account.",
                          "example": "J. Doe",
                          "type": "string",
                          "_key": "contact"
                        },
                        {
                          "description": "Contract number of the customer.",
                          "example": "1NX25_0001",
                          "type": "string",
                          "_key": "contract_number"
                        },
                        {
                          "description": "The country part of the postal address.",
                          "example": "United Kingdom",
                          "type": "string",
                          "_key": "country"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Account's custom properties as key-value pairs.",
                          "type": "object",
                          "_key": "custom_fields"
                        },
                        {
                          "description": "Customer number of the customer.",
                          "example": "1NC25_0001",
                          "type": "string",
                          "_key": "customer_number"
                        },
                        {
                          "description": "The display name for the account.",
                          "example": "ARM",
                          "type": "string",
                          "_key": "display_name"
                        },
                        {
                          "description": "The company email address for this account.",
                          "example": "info@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "Account end market.",
                          "example": "IT",
                          "type": "string",
                          "_key": "end_market"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Expiration time of the account, as UTC time RFC3339.",
                          "format": "date-time",
                          "type": "string",
                          "_key": "expiration"
                        },
                        {
                          "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
                          "example": "180",
                          "type": "string",
                          "_key": "expiration_warning_threshold"
                        },
                        {
                          "description": "Account ID.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "The reference token expiration time in minutes for this account.",
                          "example": "30",
                          "type": "string",
                          "_key": "idle_timeout"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "List of limits as key-value pairs if requested.",
                          "type": "object",
                          "_key": "limits"
                        },
                        {
                          "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
                          "enum": [
                            "enforced",
                            "optional"
                          ],
                          "type": "string",
                          "_key": "mfa_status"
                        },
                        {
                          "description": "A list of notification email addresses.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "notification_emails"
                        },
                        {
                          "description": "Entity name: always 'account'",
                          "enum": [
                            "account"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "This object represents parent account contact details in responses.",
                          "properties": [
                            {
                              "description": "The email address of the admin user who is the contact person of the parent account.",
                              "example": "info@arm.com",
                              "type": "string",
                              "api_fieldname": "admin_email",
                              "entity_fieldname": "admin_email",
                              "_key": "admin_email"
                            },
                            {
                              "description": "The name of the admin user who is the contact person of the parent account.",
                              "example": "J. Doe",
                              "type": "string",
                              "api_fieldname": "admin_name",
                              "entity_fieldname": "admin_name",
                              "_key": "admin_name"
                            },
                            {
                              "description": "The ID of the parent account",
                              "example": "01619571dad80242ac12000600000000",
                              "type": "string",
                              "api_fieldname": "id",
                              "entity_fieldname": "id",
                              "_key": "id"
                            }
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "parent_account"
                          },
                          "_key": "parent_account"
                        },
                        {
                          "description": "The ID of the parent account, if it has any.",
                          "example": "01619571dad80242ac12000600000000",
                          "type": "string",
                          "_key": "parent_id"
                        },
                        {
                          "properties": [
                            {
                              "description": "Minimum length for the password. A number between 8 and 512.",
                              "example": "8",
                              "type": "string",
                              "api_fieldname": "minimum_length",
                              "entity_fieldname": "minimum_length",
                              "_key": "minimum_length"
                            }
                          ],
                          "required": [
                            "minimum_length"
                          ],
                          "type": "object",
                          "foreign_key": {
                            "group": "Accounts",
                            "entity": "password_policy"
                          },
                          "_key": "password_policy"
                        },
                        {
                          "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
                          "format": "int32",
                          "maximum": 45,
                          "minimum": 1,
                          "type": "integer",
                          "_key": "password_recovery_expiration"
                        },
                        {
                          "description": "The phone number of a representative of the company.",
                          "example": "+44 (1223) 400 400",
                          "type": "string",
                          "_key": "phone_number"
                        },
                        {
                          "description": "List of policies if requested.",
                          "items": {
                            "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
                            "properties": [
                              {
                                "description": "Comma separated list of actions, empty string represents all actions.",
                                "example": "GET",
                                "type": "string",
                                "api_fieldname": "action",
                                "entity_fieldname": "action",
                                "_key": "action"
                              },
                              {
                                "description": "True or false controlling whether an action is allowed or not.",
                                "example": true,
                                "type": "boolean",
                                "api_fieldname": "allow",
                                "entity_fieldname": "allow",
                                "_key": "allow"
                              },
                              {
                                "description": "Feature name corresponding to this policy.",
                                "example": "update-campaigns",
                                "type": "string",
                                "api_fieldname": "feature",
                                "entity_fieldname": "feature",
                                "_key": "feature"
                              },
                              {
                                "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                                "example": false,
                                "type": "boolean",
                                "api_fieldname": "inherited",
                                "entity_fieldname": "inherited",
                                "_key": "inherited"
                              },
                              {
                                "description": "Resource that is protected by this policy.",
                                "example": "/v3/update-campaign",
                                "type": "string",
                                "api_fieldname": "resource",
                                "entity_fieldname": "resource",
                                "_key": "resource"
                              }
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "policy"
                            }
                          },
                          "type": "array",
                          "_key": "policies"
                        },
                        {
                          "description": "The postal code part of the postal address.",
                          "example": "CB1 9NJ",
                          "type": "string",
                          "_key": "postal_code"
                        },
                        {
                          "description": "A reason note for updating the status of the account",
                          "example": "Subscription paid.",
                          "type": "string",
                          "_key": "reason"
                        },
                        {
                          "description": "A reference note for updating the status of the account",
                          "example": "ARM-INT-0001",
                          "type": "string",
                          "_key": "reference_note"
                        },
                        {
                          "description": "Email address of the sales contact.",
                          "example": "sales@arm.com",
                          "type": "string",
                          "_key": "sales_contact"
                        },
                        {
                          "description": "The state part of the postal address.",
                          "example": " ",
                          "type": "string",
                          "_key": "state"
                        },
                        {
                          "description": "The status of the account.",
                          "enum": [
                            "ENROLLING",
                            "ACTIVE",
                            "RESTRICTED",
                            "SUSPENDED"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "List of sub accounts. Not available for developer users.",
                          "items": [],
                          "type": "array",
                          "_key": "sub_accounts"
                        },
                        {
                          "description": "Account template ID.",
                          "example": "01619571e7160242ac12000600000000",
                          "type": "string",
                          "_key": "template_id"
                        },
                        {
                          "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                          "example": "1",
                          "type": "string",
                          "_key": "tier"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "upgraded_at"
                        }
                      ],
                      "required": [
                        "end_market",
                        "etag",
                        "id",
                        "object",
                        "status",
                        "tier"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "api_fieldname": "sub_accounts",
                    "entity_fieldname": "sub_accounts",
                    "_key": "sub_accounts"
                  },
                  {
                    "description": "Account template ID.",
                    "example": "01619571e7160242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "template_id",
                    "entity_fieldname": "template_id",
                    "_key": "template_id"
                  },
                  {
                    "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "tier",
                    "entity_fieldname": "tier",
                    "_key": "tier"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "Time when upgraded to commercial account in UTC format RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "upgraded_at",
                    "entity_fieldname": "upgraded_at",
                    "_key": "upgraded_at"
                  }
                ],
                "required": [
                  "end_market",
                  "etag",
                  "id",
                  "object",
                  "status",
                  "tier"
                ],
                "type": "object"
              },
              "_key": "200"
            },
            {
              "description": "Error in input data format.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Account with the given ID not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}",
          "summary": "Update attributes of an existing account.",
          "return_type": "account",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "account"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "admin_email",
            "admin_full_name",
            "admin_id",
            "admin_key",
            "admin_name",
            "admin_password",
            "created_at",
            "expiration",
            "limits",
            "parent_account",
            "parent_id",
            "policies",
            "reason",
            "reference_note",
            "status",
            "template_id",
            "tier",
            "updated_at",
            "upgraded_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "account_id": "id"
          },
          "operation_id": "updateAccount",
          "additional_operations": [
            {
              "operation_id": "updateMyAccount",
              "notes": "After retrieving the resource using the `me` method, it can modified using using this SDK method."
            }
          ],
          "pagination": false,
          "_key": "update"
        },
        {
          "description": "An endpoint for retrieving the details of all the active user invitations sent for new or existing users to join the account.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/user-invitations -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The entity ID to fetch after the given one.",
              "example": "01619571f3c00242ac12000600000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "Account ID.",
              "in": "path",
              "name": "account_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "account_id",
              "external_param": false,
              "parameter_fieldname": "account_id",
              "_key": "id"
            },
            {
              "description": "The number of results to return (2-1000), default is 50.",
              "example": 50,
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "default": 50,
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "default": "ASC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "account_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "user_invitations",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01619571f3c00242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "in": "query",
                    "name": "after",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "A list of entities.",
                    "items": {
                      "description": "This object represents an user invitation in responses.",
                      "properties": [
                        {
                          "description": "The ID of the account the user is invited to.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "account_id"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "Email address of the invited user.",
                          "example": "friend@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Invitation expiration as UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "expiration"
                        },
                        {
                          "description": "A list of IDs of the groups the user is invited to.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "groups"
                        },
                        {
                          "description": "The ID of the invitation.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                          "items": {
                            "description": "This object represents a user login profile in Device Management.",
                            "properties": [
                              {
                                "description": "ID of the identity provider.",
                                "type": "string",
                                "readOnly": false,
                                "_override": true,
                                "api_fieldname": "id",
                                "entity_fieldname": "id",
                                "_key": "id"
                              },
                              {
                                "description": "Name of the identity provider.",
                                "readOnly": false,
                                "type": "string",
                                "_override": true,
                                "api_fieldname": "name",
                                "entity_fieldname": "name",
                                "_key": "name"
                              },
                              {
                                "description": "Identity provider type.",
                                "enum": [
                                  "NATIVE",
                                  "MBED",
                                  "SAML2",
                                  "OIDC"
                                ],
                                "readOnly": true,
                                "type": "string",
                                "api_fieldname": "type",
                                "entity_fieldname": "type",
                                "_key": "type"
                              }
                            ],
                            "required": [
                              "id"
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "login_profile"
                            }
                          },
                          "type": "array",
                          "_key": "login_profiles"
                        },
                        {
                          "description": "Entity name: always 'user-invitation'",
                          "enum": [
                            "user-invitation"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "The ID of the invited user.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "user_id"
                        }
                      ],
                      "required": [
                        "account_id",
                        "email",
                        "etag",
                        "id",
                        "object",
                        "user_id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "user_invitation"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there is more results.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return (2-1000), default is 50.",
                    "example": 50,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "default": 50,
                    "in": "query",
                    "name": "limit",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Entity name: always 'list'",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "default": "ASC",
                    "in": "query",
                    "name": "order",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "order",
                    "enum_reference": "user_invitation_order_enum",
                    "_key": "order"
                  },
                  {
                    "description": "The total number or records, if requested. It might be returned also for small lists.",
                    "example": 20,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "data",
                  "has_more",
                  "limit",
                  "object",
                  "total_count"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user_invitation"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/user-invitations",
          "summary": "Get the details of all the user invitations.",
          "return_type": "paginated_response(subtenant_user_invitation)",
          "return_info": {
            "self": false,
            "custom": false,
            "type": "subtenant_user_invitation"
          },
          "x_filter": {
            "login_profile": [
              "eq",
              "eq"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "login_profile__eq"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "account_id": "id"
          },
          "operation_id": "getAllAccountInvitations",
          "notes": "This lists the user invitations of the subtenant account.",
          "foreign_key": {
            "entity": "subtenant_user_invitation"
          },
          "pagination": true,
          "_key": "user_invitations"
        },
        {
          "description": "An endpoint for retrieving details of all users.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The entity ID to fetch after the given one.",
              "example": "01619571f3c00242ac12000600000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "Account ID.",
              "in": "path",
              "name": "account_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "account_id",
              "external_param": false,
              "parameter_fieldname": "account_id",
              "_key": "id"
            },
            {
              "description": "Comma separated additional data to return. Currently supported: total_count",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "The number of results to return (2-1000), default is 50.",
              "example": 50,
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "default": 50,
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "default": "ASC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "account_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "users",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01619571f3c00242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "in": "query",
                    "name": "after",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "A list of entities.",
                    "items": {
                      "description": "This object represents a user in Device Management.",
                      "properties": [
                        {
                          "description": "The ID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "account_id"
                        },
                        {
                          "description": "List of active user sessions.",
                          "items": {
                            "description": "This object represents an active user session.",
                            "properties": [
                              {
                                "description": "The UUID of the account.",
                                "example": "01619571e2e90242ac12000600000000",
                                "type": "string",
                                "api_fieldname": "account_id",
                                "entity_fieldname": "account_id",
                                "_key": "account_id"
                              },
                              {
                                "description": "IP address of the client.",
                                "example": "127.0.0.1",
                                "type": "string",
                                "api_fieldname": "ip_address",
                                "entity_fieldname": "ip_address",
                                "_key": "ip_address"
                              },
                              {
                                "description": "The login time of the user.",
                                "example": "2018-02-14T17:52:07Z",
                                "format": "date-time",
                                "type": "string",
                                "api_fieldname": "login_time",
                                "entity_fieldname": "login_time",
                                "_key": "login_time"
                              },
                              {
                                "description": "Entity name: always 'user-session'",
                                "enum": [
                                  "user-session"
                                ],
                                "type": "string",
                                "api_fieldname": "object",
                                "entity_fieldname": "object",
                                "_key": "object"
                              },
                              {
                                "description": "The reference token.",
                                "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                                "type": "string",
                                "api_fieldname": "reference_token",
                                "entity_fieldname": "reference_token",
                                "_key": "reference_token"
                              },
                              {
                                "description": "User Agent header from the login request.",
                                "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                                "type": "string",
                                "api_fieldname": "user_agent",
                                "entity_fieldname": "user_agent",
                                "_key": "user_agent"
                              }
                            ],
                            "required": [
                              "account_id",
                              "ip_address",
                              "login_time",
                              "object",
                              "reference_token",
                              "user_agent"
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "active_session"
                            }
                          },
                          "type": "array",
                          "_key": "active_sessions"
                        },
                        {
                          "description": "Address.",
                          "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
                          "type": "string",
                          "_key": "address"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "A timestamp of the user creation in the storage, in milliseconds.",
                          "example": 1518630727683,
                          "format": "int64",
                          "type": "integer",
                          "_key": "creation_time"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "User's account specific custom properties. The value is a string.",
                          "type": "object",
                          "_key": "custom_fields"
                        },
                        {
                          "description": "The email address.",
                          "example": "user@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "A flag indicating whether the user's email address has been verified or not.",
                          "example": true,
                          "type": "boolean",
                          "_key": "email_verified"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "The full name of the user.",
                          "example": "User Doe",
                          "type": "string",
                          "_key": "full_name"
                        },
                        {
                          "description": "A list of IDs of the groups this user belongs to.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "groups"
                        },
                        {
                          "description": "The ID of the user.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "A flag indicating that the General Terms and Conditions has been accepted.",
                          "example": true,
                          "type": "boolean",
                          "_key": "is_gtc_accepted"
                        },
                        {
                          "description": "A flag indicating that receiving marketing information has been accepted.",
                          "example": true,
                          "type": "boolean",
                          "_key": "is_marketing_accepted"
                        },
                        {
                          "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
                          "example": true,
                          "type": "boolean",
                          "_key": "is_totp_enabled"
                        },
                        {
                          "description": "A timestamp of the latest login of the user, in milliseconds.",
                          "example": 1518630727688,
                          "format": "int64",
                          "type": "integer",
                          "_key": "last_login_time"
                        },
                        {
                          "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
                          "items": {
                            "description": "This object represents an entry in login history.",
                            "properties": [
                              {
                                "description": "UTC time RFC3339 for this login attempt.",
                                "example": "2018-02-14T17:52:07Z",
                                "format": "date-time",
                                "type": "string",
                                "api_fieldname": "date",
                                "entity_fieldname": "date",
                                "_key": "date"
                              },
                              {
                                "description": "IP address of the client.",
                                "example": "127.0.0.1",
                                "type": "string",
                                "api_fieldname": "ip_address",
                                "entity_fieldname": "ip_address",
                                "_key": "ip_address"
                              },
                              {
                                "description": "Flag indicating whether login attempt was successful or not.",
                                "example": true,
                                "type": "boolean",
                                "api_fieldname": "success",
                                "entity_fieldname": "success",
                                "_key": "success"
                              },
                              {
                                "description": "User Agent header from the login request.",
                                "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                                "type": "string",
                                "api_fieldname": "user_agent",
                                "entity_fieldname": "user_agent",
                                "_key": "user_agent"
                              }
                            ],
                            "required": [
                              "date",
                              "ip_address",
                              "success",
                              "user_agent"
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "login_history"
                            }
                          },
                          "type": "array",
                          "_key": "login_history"
                        },
                        {
                          "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                          "items": {
                            "description": "This object represents a user login profile in Device Management.",
                            "properties": [
                              {
                                "description": "ID of the identity provider.",
                                "type": "string",
                                "readOnly": false,
                                "_override": true,
                                "api_fieldname": "id",
                                "entity_fieldname": "id",
                                "_key": "id"
                              },
                              {
                                "description": "Name of the identity provider.",
                                "readOnly": false,
                                "type": "string",
                                "_override": true,
                                "api_fieldname": "name",
                                "entity_fieldname": "name",
                                "_key": "name"
                              },
                              {
                                "description": "Identity provider type.",
                                "enum": [
                                  "NATIVE",
                                  "MBED",
                                  "SAML2",
                                  "OIDC"
                                ],
                                "readOnly": true,
                                "type": "string",
                                "api_fieldname": "type",
                                "entity_fieldname": "type",
                                "_key": "type"
                              }
                            ],
                            "required": [
                              "id"
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "login_profile"
                            }
                          },
                          "type": "array",
                          "_key": "login_profiles"
                        },
                        {
                          "description": "Entity name: always 'user'",
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "The password when creating a new user. It will be generated when not present in the request.",
                          "example": "PZf9eEUH43DAPE9ULINFeuj",
                          "type": "string",
                          "_key": "password"
                        },
                        {
                          "description": "A timestamp of the latest change of the user password, in milliseconds.",
                          "example": 1518630727688,
                          "format": "int64",
                          "type": "integer",
                          "_key": "password_changed_time"
                        },
                        {
                          "description": "Phone number.",
                          "example": "+44 (1223) 400 400",
                          "type": "string",
                          "_key": "phone_number"
                        },
                        {
                          "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
                          "enum": [
                            "ENROLLING",
                            "INVITED",
                            "ACTIVE",
                            "RESET",
                            "INACTIVE"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "totp_scratch_codes"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "A username containing alphanumerical letters and -,._@+= characters.",
                          "example": "admin",
                          "type": "string",
                          "_key": "username"
                        }
                      ],
                      "required": [
                        "account_id",
                        "email",
                        "etag",
                        "id",
                        "object",
                        "status"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "user"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there is more results.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return (2-1000), default is 50.",
                    "example": 50,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "default": 50,
                    "in": "query",
                    "name": "limit",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Entity name: always 'list'",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "default": "ASC",
                    "in": "query",
                    "name": "order",
                    "required": false,
                    "external_param": true,
                    "parameter_fieldname": "order",
                    "enum_reference": "user_order_enum",
                    "_key": "order"
                  },
                  {
                    "description": "The total number or records, if requested. It might be returned also for small lists.",
                    "example": 20,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "data",
                  "has_more",
                  "limit",
                  "object",
                  "total_count"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account with the given ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/users",
          "summary": "Get all user details.",
          "return_type": "paginated_response(subtenant_user)",
          "return_info": {
            "self": false,
            "custom": false,
            "type": "subtenant_user"
          },
          "x_filter": {
            "email": [
              "eq",
              "eq"
            ],
            "login_profile": [
              "eq",
              "eq"
            ],
            "status": [
              "eq",
              "in",
              "nin",
              "eq",
              "in",
              "nin"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "email__eq",
            "status__eq",
            "status__in",
            "status__nin",
            "login_profile__eq"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "account_id": "id"
          },
          "operation_id": "getAllAccountUsers",
          "notes": "This lists the users of the subtenant account.",
          "foreign_key": {
            "entity": "subtenant_user"
          },
          "pagination": true,
          "_key": "users"
        }
      ],
      "fields": [
        {
          "description": "Postal address line 1.",
          "example": "110 Fulbourn Rd",
          "type": "string",
          "api_fieldname": "address_line1",
          "readOnly": false,
          "required": false,
          "_key": "address_line1"
        },
        {
          "description": "Postal address line 2.",
          "example": " ",
          "type": "string",
          "api_fieldname": "address_line2",
          "readOnly": false,
          "required": false,
          "_key": "address_line2"
        },
        {
          "description": "The email address of the admin user created for this account. Present only in the response for the account creation.",
          "example": "admin@arm.com",
          "type": "string",
          "api_fieldname": "admin_email",
          "readOnly": false,
          "required": false,
          "_key": "admin_email"
        },
        {
          "description": "The full name of the admin user created for this account. Present only in the response for the account creation.",
          "example": "Admin Doe",
          "type": "string",
          "api_fieldname": "admin_full_name",
          "readOnly": false,
          "required": false,
          "_key": "admin_full_name"
        },
        {
          "description": "The ID of the admin user created for this account.",
          "example": "01619571e2e89242ac12000600000000",
          "type": "string",
          "api_fieldname": "admin_id",
          "readOnly": true,
          "required": false,
          "_key": "admin_id"
        },
        {
          "description": "The admin API key created for this account. Present only in the response for the account creation.",
          "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000B40IkJADMANmAscAj0Ot0n2yeQnyt9tT",
          "readOnly": true,
          "type": "string",
          "api_fieldname": "admin_key",
          "required": false,
          "_key": "admin_key"
        },
        {
          "description": "The username of the admin user created for this account. Present only in the response for the account creation.",
          "example": "admin",
          "type": "string",
          "api_fieldname": "admin_name",
          "readOnly": false,
          "required": false,
          "_key": "admin_name"
        },
        {
          "description": "The password of the admin user created for this account. Present only in the response for the account creation.",
          "example": "PZf9eEUH43DAPE9ULINFeuj",
          "type": "string",
          "api_fieldname": "admin_password",
          "readOnly": false,
          "required": false,
          "_key": "admin_password"
        },
        {
          "description": "An array of aliases.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "api_fieldname": "aliases",
          "readOnly": false,
          "required": false,
          "_key": "aliases"
        },
        {
          "description": "The city part of the postal address.",
          "example": "Cambridge",
          "type": "string",
          "api_fieldname": "city",
          "readOnly": false,
          "required": false,
          "_key": "city"
        },
        {
          "description": "The name of the company.",
          "example": "ARM Holdings Plc",
          "type": "string",
          "api_fieldname": "company",
          "readOnly": false,
          "required": false,
          "_key": "company"
        },
        {
          "description": "The name of the contact person for this account.",
          "example": "J. Doe",
          "type": "string",
          "api_fieldname": "contact",
          "readOnly": false,
          "required": false,
          "_key": "contact"
        },
        {
          "description": "Contract number of the customer.",
          "example": "1NX25_0001",
          "type": "string",
          "api_fieldname": "contract_number",
          "readOnly": false,
          "required": false,
          "_key": "contract_number"
        },
        {
          "description": "The country part of the postal address.",
          "example": "United Kingdom",
          "type": "string",
          "api_fieldname": "country",
          "readOnly": false,
          "required": false,
          "_key": "country"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2018-02-13T09:35:20Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Account's custom properties as key-value pairs.",
          "type": "object",
          "api_fieldname": "custom_fields",
          "readOnly": false,
          "required": false,
          "_key": "custom_fields"
        },
        {
          "description": "Customer number of the customer.",
          "example": "1NC25_0001",
          "type": "string",
          "api_fieldname": "customer_number",
          "readOnly": false,
          "required": false,
          "_key": "customer_number"
        },
        {
          "description": "The display name for the account.",
          "example": "ARM",
          "type": "string",
          "api_fieldname": "display_name",
          "readOnly": false,
          "required": false,
          "_key": "display_name"
        },
        {
          "description": "The company email address for this account.",
          "example": "info@arm.com",
          "type": "string",
          "api_fieldname": "email",
          "readOnly": false,
          "required": false,
          "_key": "email"
        },
        {
          "description": "Account end market.",
          "example": "IT",
          "type": "string",
          "api_fieldname": "end_market",
          "readOnly": false,
          "required": true,
          "_key": "end_market"
        },
        {
          "description": "Expiration time of the account, as UTC time RFC3339.",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "expiration",
          "readOnly": true,
          "required": false,
          "_key": "expiration"
        },
        {
          "description": "Indicates how many days (1-180) before account expiration a notification email should be sent.",
          "example": "180",
          "type": "string",
          "api_fieldname": "expiration_warning_threshold",
          "readOnly": false,
          "required": false,
          "_key": "expiration_warning_threshold"
        },
        {
          "description": "Account ID.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "description": "The reference token expiration time in minutes for this account.",
          "example": "30",
          "type": "string",
          "api_fieldname": "idle_timeout",
          "readOnly": false,
          "required": false,
          "_key": "idle_timeout"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "description": "List of limits as key-value pairs if requested.",
          "type": "object",
          "api_fieldname": "limits",
          "readOnly": true,
          "required": false,
          "_key": "limits"
        },
        {
          "description": "The enforcement status of the multi-factor authentication, either 'enforced' or 'optional'.",
          "enum": [
            "enforced",
            "optional"
          ],
          "type": "string",
          "api_fieldname": "mfa_status",
          "readOnly": false,
          "required": false,
          "enum_reference": "account_mfa_status_enum",
          "_key": "mfa_status"
        },
        {
          "description": "A list of notification email addresses.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "api_fieldname": "notification_emails",
          "readOnly": false,
          "required": false,
          "_key": "notification_emails"
        },
        {
          "description": "This object represents parent account contact details in responses.",
          "properties": [
            {
              "description": "The email address of the admin user who is the contact person of the parent account.",
              "example": "info@arm.com",
              "type": "string",
              "api_fieldname": "admin_email",
              "entity_fieldname": "admin_email",
              "_key": "admin_email"
            },
            {
              "description": "The name of the admin user who is the contact person of the parent account.",
              "example": "J. Doe",
              "type": "string",
              "api_fieldname": "admin_name",
              "entity_fieldname": "admin_name",
              "_key": "admin_name"
            },
            {
              "description": "The ID of the parent account",
              "example": "01619571dad80242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "_key": "id"
            }
          ],
          "type": "object",
          "foreign_key": {
            "group": "Accounts",
            "entity": "parent_account"
          },
          "api_fieldname": "parent_account",
          "readOnly": true,
          "required": false,
          "_key": "parent_account"
        },
        {
          "description": "The ID of the parent account, if it has any.",
          "example": "01619571dad80242ac12000600000000",
          "type": "string",
          "api_fieldname": "parent_id",
          "readOnly": true,
          "required": false,
          "_key": "parent_id"
        },
        {
          "properties": [
            {
              "description": "Minimum length for the password. A number between 8 and 512.",
              "example": "8",
              "type": "string",
              "api_fieldname": "minimum_length",
              "entity_fieldname": "minimum_length",
              "_key": "minimum_length"
            }
          ],
          "required": false,
          "type": "object",
          "foreign_key": {
            "group": "Accounts",
            "entity": "password_policy"
          },
          "api_fieldname": "password_policy",
          "readOnly": false,
          "_key": "password_policy"
        },
        {
          "description": "Indicates how many minutes a password recovery email for users of this account is valid for. Valid range is: 1-45.",
          "format": "int32",
          "maximum": 45,
          "minimum": 1,
          "type": "integer",
          "api_fieldname": "password_recovery_expiration",
          "readOnly": false,
          "required": false,
          "_key": "password_recovery_expiration"
        },
        {
          "description": "The phone number of a representative of the company.",
          "example": "+44 (1223) 400 400",
          "type": "string",
          "api_fieldname": "phone_number",
          "readOnly": false,
          "required": false,
          "_key": "phone_number"
        },
        {
          "description": "List of policies if requested.",
          "items": {
            "description": "This object represents a feature policy. Either the feature or the resource must be specified.",
            "properties": [
              {
                "description": "Comma separated list of actions, empty string represents all actions.",
                "example": "GET",
                "type": "string",
                "api_fieldname": "action",
                "entity_fieldname": "action",
                "_key": "action"
              },
              {
                "description": "True or false controlling whether an action is allowed or not.",
                "example": true,
                "type": "boolean",
                "api_fieldname": "allow",
                "entity_fieldname": "allow",
                "_key": "allow"
              },
              {
                "description": "Feature name corresponding to this policy.",
                "example": "update-campaigns",
                "type": "string",
                "api_fieldname": "feature",
                "entity_fieldname": "feature",
                "_key": "feature"
              },
              {
                "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
                "example": false,
                "type": "boolean",
                "api_fieldname": "inherited",
                "entity_fieldname": "inherited",
                "_key": "inherited"
              },
              {
                "description": "Resource that is protected by this policy.",
                "example": "/v3/update-campaign",
                "type": "string",
                "api_fieldname": "resource",
                "entity_fieldname": "resource",
                "_key": "resource"
              }
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "policy"
            }
          },
          "type": "array",
          "api_fieldname": "policies",
          "readOnly": true,
          "required": false,
          "_key": "policies"
        },
        {
          "description": "The postal code part of the postal address.",
          "example": "CB1 9NJ",
          "type": "string",
          "api_fieldname": "postal_code",
          "readOnly": false,
          "required": false,
          "_key": "postal_code"
        },
        {
          "description": "A reason note for updating the status of the account",
          "example": "Subscription paid.",
          "type": "string",
          "api_fieldname": "reason",
          "readOnly": true,
          "required": false,
          "_key": "reason"
        },
        {
          "description": "A reference note for updating the status of the account",
          "example": "ARM-INT-0001",
          "type": "string",
          "api_fieldname": "reference_note",
          "readOnly": true,
          "required": false,
          "_key": "reference_note"
        },
        {
          "description": "Email address of the sales contact.",
          "example": "sales@arm.com",
          "type": "string",
          "api_fieldname": "sales_contact",
          "readOnly": false,
          "required": false,
          "_key": "sales_contact"
        },
        {
          "description": "The state part of the postal address.",
          "example": " ",
          "type": "string",
          "api_fieldname": "state",
          "readOnly": false,
          "required": false,
          "_key": "state"
        },
        {
          "description": "The status of the account.",
          "enum": [
            "ENROLLING",
            "ACTIVE",
            "RESTRICTED",
            "SUSPENDED"
          ],
          "example": "ACTIVE",
          "type": "string",
          "api_fieldname": "status",
          "readOnly": true,
          "required": false,
          "enum_reference": "account_status_enum",
          "_key": "status"
        },
        {
          "description": "Account template ID.",
          "example": "01619571e7160242ac12000600000000",
          "type": "string",
          "api_fieldname": "template_id",
          "readOnly": true,
          "required": false,
          "_key": "template_id"
        },
        {
          "description": "The tier level of the account; '0': free tier, '1': commercial account, '2': partner tier. Other values are reserved for the future.",
          "example": "1",
          "type": "string",
          "api_fieldname": "tier",
          "readOnly": true,
          "required": false,
          "_key": "tier"
        },
        {
          "description": "Last update UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        },
        {
          "description": "Time when upgraded to commercial account in UTC format RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "upgraded_at",
          "readOnly": true,
          "required": false,
          "_key": "upgraded_at"
        }
      ],
      "field_renames": [],
      "tags": [
        "Developer",
        "Aggregator Account Admin"
      ],
      "group_id": "Accounts",
      "_key": "account"
    },
    {
      "swagger_models": [
        "ActiveSession"
      ],
      "primary_key_field": null,
      "methods": [],
      "fields": [
        {
          "description": "The UUID of the account.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "IP address of the client.",
          "example": "127.0.0.1",
          "type": "string",
          "api_fieldname": "ip_address",
          "readOnly": true,
          "required": false,
          "_key": "ip_address"
        },
        {
          "description": "The login time of the user.",
          "example": "2018-02-14T17:52:07Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "login_time",
          "readOnly": true,
          "required": false,
          "_key": "login_time"
        },
        {
          "description": "The reference token.",
          "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
          "type": "string",
          "api_fieldname": "reference_token",
          "readOnly": true,
          "required": false,
          "_key": "reference_token"
        },
        {
          "description": "User Agent header from the login request.",
          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
          "type": "string",
          "api_fieldname": "user_agent",
          "readOnly": true,
          "required": false,
          "_key": "user_agent"
        }
      ],
      "field_renames": [],
      "tags": [],
      "group_id": "Accounts",
      "_key": "active_session"
    },
    {
      "swagger_models": [
        "ApiKeyInfoReq",
        "ApiKeyInfoResp",
        "ApiKeyInfoRespList",
        "ApiKeyUpdateReq"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "An endpoint for creating a new API key.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys -d '{\"name\": \"MyKey1\"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The display name for the API key.",
              "example": "API key gorgon",
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": true,
              "_key": "name"
            },
            {
              "description": "The owner of this API key, who is the creator by default.",
              "example": "01619571e2e89242ac12000600000000",
              "type": "string",
              "api_fieldname": "owner",
              "entity_fieldname": "owner",
              "parameter_fieldname": "owner",
              "in": "body",
              "required": false,
              "_key": "owner"
            },
            {
              "description": "The status of the API key.",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE",
              "type": "string",
              "api_fieldname": "status",
              "entity_fieldname": "status",
              "parameter_fieldname": "status",
              "in": "body",
              "required": false,
              "enum_reference": "api_key_status_enum",
              "_key": "status"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "New entity created.",
              "schema": {
                "description": "This object represents an API key in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "pattern": "[a-f0-9]{32}",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The timestamp of the API key creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "A list of group IDs this API key belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the API key.",
                    "example": "01619571f7020242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The API key.",
                    "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "key",
                    "entity_fieldname": "key",
                    "_key": "key"
                  },
                  {
                    "description": "The timestamp of the latest API key usage, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "The display name for the API key.",
                    "example": "API key gorgon",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'api-key'",
                    "enum": [
                      "api-key"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The owner of this API key, who is the creator by default.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner",
                    "entity_fieldname": "owner",
                    "_key": "owner"
                  },
                  {
                    "description": "The status of the API key.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "required": [
                  "etag",
                  "id",
                  "key",
                  "name",
                  "object"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "api_key"
                }
              },
              "_key": "201"
            },
            {
              "description": "Error in input data, for example missing display name.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/api-keys",
          "summary": "Create a new API key.",
          "return_type": "api_key",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "api_key"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "creation_time",
            "id",
            "key",
            "last_login_time",
            "updated_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "apikey_id": "id"
          },
          "operation_id": "createApiKey",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "An endpoint for deleting the API key.\n\n**Example usage:**\n`curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the API key to be deleted.",
              "in": "path",
              "name": "apikey_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "apikey_id",
              "external_param": false,
              "parameter_fieldname": "apikey_id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Deleted successfully.",
              "_key": "204"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "The API key with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/api-keys/{apikey_id}",
          "summary": "Delete API key.",
          "return_type": "api_key",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "api_key"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "apikey_id": "id"
          },
          "operation_id": "deleteApiKey",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "An endpoint for retrieving API keys in an array, optionally filtered by the owner.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/api-keys -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The entity ID to fetch after the given one.",
              "example": "01619571f3c00242ac12000600000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "Comma separated additional data to return. Currently supported: total_count",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "The number of results to return (2-1000), default is 50.",
              "example": 50,
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "default": 50,
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "default": "ASC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "api_key_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01619571f3c00242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "A list of entities.",
                    "items": {
                      "description": "This object represents an API key in Device Management.",
                      "properties": [
                        {
                          "description": "The ID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "pattern": "[a-f0-9]{32}",
                          "type": "string",
                          "_key": "account_id"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "The timestamp of the API key creation in the storage, in milliseconds.",
                          "example": 1518630727683,
                          "format": "int64",
                          "type": "integer",
                          "_key": "creation_time"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "A list of group IDs this API key belongs to.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "groups"
                        },
                        {
                          "description": "The ID of the API key.",
                          "example": "01619571f7020242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "The API key.",
                          "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000",
                          "type": "string",
                          "_key": "key"
                        },
                        {
                          "description": "The timestamp of the latest API key usage, in milliseconds.",
                          "example": 1518630727688,
                          "format": "int64",
                          "type": "integer",
                          "_key": "last_login_time"
                        },
                        {
                          "description": "The display name for the API key.",
                          "example": "API key gorgon",
                          "type": "string",
                          "_key": "name"
                        },
                        {
                          "description": "Entity name: always 'api-key'",
                          "enum": [
                            "api-key"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "The owner of this API key, who is the creator by default.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "owner"
                        },
                        {
                          "description": "The status of the API key.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        }
                      ],
                      "required": [
                        "etag",
                        "id",
                        "key",
                        "name",
                        "object"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "api_key"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there is more results.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return, (range: 2-1000), or equals to `total_count`",
                    "example": 50,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Entity name: always 'list'",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records to return based on creation time. Available values: ASC, DESC; by default ASC.",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "description": "The total number or records, if requested. It might be returned also for small lists.",
                    "example": 20,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "data",
                  "has_more",
                  "limit",
                  "object",
                  "total_count"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "api_key"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/api-keys",
          "summary": "Get all API keys",
          "return_type": "paginated_response(api_key)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "api_key"
          },
          "x_filter": {
            "key": [
              "eq",
              "eq"
            ],
            "owner": [
              "eq",
              "eq"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "key__eq",
            "owner__eq"
          ],
          "foreign_key_priority": "self",
          "group_id": "Accounts",
          "parameter_map": {
            "apikey_id": "id"
          },
          "operation_id": "getAllApiKeys",
          "pagination": true,
          "foreign_key": {
            "group": "Accounts",
            "entity": "api_key"
          },
          "_key": "list"
        },
        {
          "description": "An endpoint for retrieving API key details.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/api-keys/me -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [],
          "method": "get",
          "mode": "me",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents an API key in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "pattern": "[a-f0-9]{32}",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The timestamp of the API key creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "A list of group IDs this API key belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the API key.",
                    "example": "01619571f7020242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The API key.",
                    "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "key",
                    "entity_fieldname": "key",
                    "_key": "key"
                  },
                  {
                    "description": "The timestamp of the latest API key usage, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "The display name for the API key.",
                    "example": "API key gorgon",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'api-key'",
                    "enum": [
                      "api-key"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The owner of this API key, who is the creator by default.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner",
                    "entity_fieldname": "owner",
                    "_key": "owner"
                  },
                  {
                    "description": "The status of the API key.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "required": [
                  "etag",
                  "id",
                  "key",
                  "name",
                  "object"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "api_key"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/api-keys/me",
          "summary": "Get API key details.",
          "return_type": "api_key",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "api_key"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "creation_time",
            "id",
            "key",
            "last_login_time",
            "name",
            "owner",
            "status",
            "updated_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "apikey_id": "id"
          },
          "operation_id": "getMyApiKey",
          "notes": "This is provided by the SDK to avoid listing to retrieve the user's own API Key.",
          "pagination": false,
          "_key": "me"
        },
        {
          "description": "An endpoint for retrieving API key details.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the API key.",
              "example": "01619571f7020242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "apikey_id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "description": "This object represents an API key in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "pattern": "[a-f0-9]{32}",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The timestamp of the API key creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "A list of group IDs this API key belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the API key.",
                    "example": "01619571f7020242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The API key.",
                    "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "key",
                    "entity_fieldname": "key",
                    "_key": "key"
                  },
                  {
                    "description": "The timestamp of the latest API key usage, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "The display name for the API key.",
                    "example": "API key gorgon",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'api-key'",
                    "enum": [
                      "api-key"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The owner of this API key, who is the creator by default.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner",
                    "entity_fieldname": "owner",
                    "_key": "owner"
                  },
                  {
                    "description": "The status of the API key.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "required": [
                  "etag",
                  "id",
                  "key",
                  "name",
                  "object"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "api_key"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "API key with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/api-keys/{apikey_id}",
          "summary": "Get API key details.",
          "return_type": "api_key",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "api_key"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "creation_time",
            "key",
            "last_login_time",
            "name",
            "owner",
            "status",
            "updated_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "apikey_id": "id"
          },
          "operation_id": "getApiKey",
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "An endpoint for updating API key details.\n\n**Example usage:**\n`curl -X PUT https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey_id} -d '{\"name\": \"TestApiKey25\"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the API key.",
              "example": "01619571f7020242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "apikey_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "The display name for the API key.",
              "example": "API key gorgon",
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": true,
              "_key": "name"
            },
            {
              "description": "The owner of this API key, who is the creator by default.",
              "example": "01619571e2e89242ac12000600000000",
              "type": "string",
              "api_fieldname": "owner",
              "entity_fieldname": "owner",
              "parameter_fieldname": "owner",
              "in": "body",
              "required": false,
              "_key": "owner"
            },
            {
              "description": "The status of the API key.",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE",
              "type": "string",
              "api_fieldname": "status",
              "entity_fieldname": "status",
              "parameter_fieldname": "status",
              "in": "body",
              "required": false,
              "enum_reference": "api_key_status_enum",
              "_key": "status"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "description": "This object represents an API key in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "pattern": "[a-f0-9]{32}",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The timestamp of the API key creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "A list of group IDs this API key belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the API key.",
                    "example": "01619571f7020242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The API key.",
                    "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "key",
                    "entity_fieldname": "key",
                    "_key": "key"
                  },
                  {
                    "description": "The timestamp of the latest API key usage, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "The display name for the API key.",
                    "example": "API key gorgon",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'api-key'",
                    "enum": [
                      "api-key"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The owner of this API key, who is the creator by default.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner",
                    "entity_fieldname": "owner",
                    "_key": "owner"
                  },
                  {
                    "description": "The status of the API key.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "required": [
                  "etag",
                  "id",
                  "key",
                  "name",
                  "object"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "api_key"
                }
              },
              "_key": "200"
            },
            {
              "description": "Error in input data, for example missing display name.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "The API key with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/api-keys/{apikey_id}",
          "summary": "Update API key details.",
          "return_type": "api_key",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "api_key"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "creation_time",
            "key",
            "last_login_time",
            "updated_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "apikey_id": "id"
          },
          "operation_id": "updateApiKey",
          "additional_operations": [
            {
              "operation_id": "updateMyApiKey",
              "notes": "After retrieving the resource using the `me` method, it can modified using using this SDK method."
            }
          ],
          "pagination": false,
          "_key": "update"
        }
      ],
      "fields": [
        {
          "description": "The ID of the account.",
          "example": "01619571e2e90242ac12000600000000",
          "pattern": "[a-f0-9]{32}",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2018-02-13T09:35:20Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "The timestamp of the API key creation in the storage, in milliseconds.",
          "example": 1518630727683,
          "format": "int64",
          "type": "integer",
          "api_fieldname": "creation_time",
          "readOnly": true,
          "required": false,
          "_key": "creation_time"
        },
        {
          "description": "The ID of the API key.",
          "example": "01619571f7020242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "description": "The API key.",
          "example": "ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000",
          "type": "string",
          "api_fieldname": "key",
          "readOnly": true,
          "required": false,
          "_key": "key"
        },
        {
          "description": "The timestamp of the latest API key usage, in milliseconds.",
          "example": 1518630727688,
          "format": "int64",
          "type": "integer",
          "api_fieldname": "last_login_time",
          "readOnly": true,
          "required": false,
          "_key": "last_login_time"
        },
        {
          "description": "The display name for the API key.",
          "example": "API key gorgon",
          "type": "string",
          "api_fieldname": "name",
          "readOnly": false,
          "required": true,
          "_key": "name"
        },
        {
          "description": "The owner of this API key, who is the creator by default.",
          "example": "01619571e2e89242ac12000600000000",
          "type": "string",
          "api_fieldname": "owner",
          "readOnly": false,
          "required": false,
          "_key": "owner"
        },
        {
          "description": "The status of the API key.",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "example": "ACTIVE",
          "type": "string",
          "api_fieldname": "status",
          "readOnly": false,
          "required": false,
          "enum_reference": "api_key_status_enum",
          "_key": "status"
        },
        {
          "description": "Last update UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        }
      ],
      "field_renames": [],
      "tags": [
        "Developer"
      ],
      "group_id": "Accounts",
      "_key": "api_key"
    },
    {
      "swagger_models": [
        "CertificateEnrollment",
        "CertificateEnrollmentListResponse"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "\nGet certificate enrollments list, optionally filtered.\n\n**Example usage:**\n\n```\ncurl -H 'authorization: Bearer <valid access token>'\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-enrollments\n```\n```\ncurl -H 'authorization: Bearer <valid access token>'\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-enrollments?device_id__eq=01612df56f3b0a580a010fc700000000\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the item after which to retrieve the next page.\n",
              "example": "01625daa23230a580a0100bd00000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "pattern": "[0-9a-fA-F]{32}",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "a comma-separated list of data fields to return.\n",
              "enum": [
                "total_count"
              ],
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "enum_reference": "certificate_enrollment_include_enum",
              "_key": "include"
            },
            {
              "description": "The number of results to be returned. Between 2 and 1000, inclusive.\n",
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of results.\n",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "certificate_enrollment_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01625daa23230a580a0100bd00000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "List of certificate enrollments.",
                    "items": {
                      "properties": [
                        {
                          "description": "The certificate name.",
                          "example": "customer.dlms",
                          "maxLength": 50,
                          "type": "string",
                          "api_fieldname": "certificate-name",
                          "entity_fieldname": "certificate_name",
                          "in": "path",
                          "name": "certificate-name",
                          "pattern": "[\\w\\-]{1,10}\\.[\\w\\-.]{1,10}",
                          "required": true,
                          "external_param": true,
                          "parameter_fieldname": "certificate-name",
                          "_key": "certificate_name"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2017-01-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "created_at",
                          "entity_fieldname": "created_at",
                          "_key": "created_at"
                        },
                        {
                          "description": "The device ID.",
                          "example": "01625daa23230a580a0100bd00000000",
                          "type": "string",
                          "api_fieldname": "device_id",
                          "entity_fieldname": "device_id",
                          "_key": "device_id"
                        },
                        {
                          "enum": [
                            "success",
                            "not_found",
                            "forbidden",
                            "failure"
                          ],
                          "type": "string",
                          "api_fieldname": "enroll_result",
                          "entity_fieldname": "enroll_result",
                          "_key": "enroll_result"
                        },
                        {
                          "enum": [
                            "new",
                            "completed"
                          ],
                          "type": "string",
                          "api_fieldname": "enroll_status",
                          "entity_fieldname": "enroll_status",
                          "_key": "enroll_status"
                        },
                        {
                          "description": "Entity instance signature.",
                          "example": "1",
                          "type": "string",
                          "api_fieldname": "etag",
                          "entity_fieldname": "etag",
                          "_key": "etag"
                        },
                        {
                          "description": "The ID of the certificate enrollment.",
                          "example": "01612df56f3b0a580a010fc700000000",
                          "type": "string",
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "parameter_fieldname": "device-id",
                          "in": "path",
                          "required": true,
                          "_key": "id"
                        },
                        {
                          "enum": [
                            "certificate-enrollment"
                          ],
                          "type": "string",
                          "api_fieldname": "object",
                          "entity_fieldname": "object",
                          "_key": "object"
                        },
                        {
                          "description": "Update UTC time RFC3339.",
                          "example": "2017-01-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "updated_at",
                          "entity_fieldname": "updated_at",
                          "_key": "updated_at"
                        }
                      ],
                      "required": [
                        "created_at",
                        "etag",
                        "id",
                        "device_id",
                        "certificate_name"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Security",
                        "entity": "certificate_enrollment"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there are more results.",
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return.",
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Describes the type of objects in the list.",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records to return based on creation time. By default ASC.",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "description": "The total number of records.",
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_enrollment"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            }
          ],
          "path": "/v3/certificate-enrollments",
          "summary": "Get certificate enrollments list.",
          "return_type": "paginated_response(certificate_enrollment)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_enrollment"
          },
          "x_filter": {
            "certificate_name": [
              "eq",
              "eq"
            ],
            "created_at": [
              "lte",
              "gte",
              "lte",
              "gte"
            ],
            "device_id": [
              "eq",
              "eq"
            ],
            "enroll_result": [
              "neq",
              "eq",
              "neq",
              "eq"
            ],
            "enroll_status": [
              "neq",
              "eq",
              "neq",
              "eq"
            ],
            "updated_at": [
              "lte",
              "gte",
              "lte",
              "gte"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "device_id__eq",
            "certificate_name__eq",
            "enroll_status__neq",
            "enroll_status__eq",
            "enroll_result__neq",
            "enroll_result__eq",
            "created_at__lte",
            "created_at__gte",
            "updated_at__lte",
            "updated_at__gte"
          ],
          "foreign_key_priority": "self",
          "group_id": "Security",
          "parameter_map": {
            "certificate-enrollment-id": "id"
          },
          "operation_id": "getCertificateEnrollments",
          "pagination": true,
          "foreign_key": {
            "group": "Security",
            "entity": "certificate_enrollment"
          },
          "_key": "list"
        },
        {
          "description": "Get a certificate enrollment by ID.\n\n**Example usage:**\n\n```\ncurl -H 'authorization: Bearer <valid access token>'\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-enrollments/01612df56f3b0a580a010fc700000000\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the certificate enrollment.",
              "example": "01612df56f3b0a580a010fc700000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "certificate-enrollment-id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "The certificate name.",
                    "example": "customer.dlms",
                    "maxLength": 50,
                    "type": "string",
                    "api_fieldname": "certificate_name",
                    "entity_fieldname": "certificate_name",
                    "in": "path",
                    "name": "certificate-name",
                    "pattern": "[\\w\\-]{1,10}\\.[\\w\\-.]{1,10}",
                    "required": true,
                    "external_param": true,
                    "parameter_fieldname": "certificate-name",
                    "_key": "certificate_name"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The device ID.",
                    "example": "01625daa23230a580a0100bd00000000",
                    "type": "string",
                    "api_fieldname": "device_id",
                    "entity_fieldname": "device_id",
                    "_key": "device_id"
                  },
                  {
                    "enum": [
                      "success",
                      "not_found",
                      "forbidden",
                      "failure"
                    ],
                    "type": "string",
                    "api_fieldname": "enroll_result",
                    "entity_fieldname": "enroll_result",
                    "_key": "enroll_result"
                  },
                  {
                    "enum": [
                      "new",
                      "completed"
                    ],
                    "type": "string",
                    "api_fieldname": "enroll_status",
                    "entity_fieldname": "enroll_status",
                    "_key": "enroll_status"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate enrollment.",
                    "example": "01612df56f3b0a580a010fc700000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "device-id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "enum": [
                      "certificate-enrollment"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Update UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "required": [
                  "created_at",
                  "etag",
                  "id",
                  "device_id",
                  "certificate_name"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            }
          ],
          "path": "/v3/certificate-enrollments/{certificate-enrollment-id}",
          "summary": "Get a certificate enrollment by ID.",
          "return_type": "certificate_enrollment",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_enrollment"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "certificate_name",
            "created_at",
            "device_id",
            "enroll_result",
            "enroll_status",
            "updated_at"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-enrollment-id": "id"
          },
          "operation_id": "getCertificateEnrollment",
          "pagination": false,
          "_key": "read"
        }
      ],
      "fields": [
        {
          "description": "The certificate name.",
          "example": "customer.dlms",
          "maxLength": 50,
          "type": "string",
          "api_fieldname": "certificate_name",
          "in": "path",
          "name": "certificate-name",
          "pattern": "[\\w\\-]{1,10}\\.[\\w\\-.]{1,10}",
          "required": false,
          "external_param": true,
          "parameter_fieldname": "certificate-name",
          "readOnly": true,
          "_key": "certificate_name"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2017-01-01T00:00:00Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "The device ID.",
          "example": "01625daa23230a580a0100bd00000000",
          "type": "string",
          "api_fieldname": "device_id",
          "readOnly": true,
          "required": false,
          "_key": "device_id"
        },
        {
          "enum": [
            "success",
            "not_found",
            "forbidden",
            "failure"
          ],
          "type": "string",
          "api_fieldname": "enroll_result",
          "readOnly": true,
          "required": false,
          "enum_reference": "certificate_enrollment_enroll_result_enum",
          "_key": "enroll_result"
        },
        {
          "enum": [
            "new",
            "completed"
          ],
          "type": "string",
          "api_fieldname": "enroll_status",
          "readOnly": true,
          "required": false,
          "enum_reference": "certificate_enrollment_enroll_status_enum",
          "_key": "enroll_status"
        },
        {
          "description": "The ID of the certificate enrollment.",
          "example": "01612df56f3b0a580a010fc700000000",
          "type": "string",
          "api_fieldname": "id",
          "parameter_fieldname": "device-id",
          "in": "path",
          "required": true,
          "readOnly": false,
          "_key": "id"
        },
        {
          "description": "Update UTC time RFC3339.",
          "example": "2017-01-01T00:00:00Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        }
      ],
      "field_renames": [],
      "tags": [
        "Certificate Enrollments"
      ],
      "group_id": "Security",
      "_key": "certificate_enrollment"
    },
    {
      "swagger_models": [
        "CertificateIssuerInfo",
        "CertificateIssuerInfoListResponse",
        "CertificateIssuerRequest",
        "CertificateIssuerUpdateRequest",
        "CertificateIssuerVerifyResponse"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "Create a certificate issuer.\nThe maximum number of issuers is limited to 20 per account.\nMultiple certificate issuers of the same issuer type can be created, provided they have a different name. This allows verification of the certificate issuer configuration before activating it.\n<br>\n**Example usage:**\n\n```\ncurl -X POST \\\n-H 'authorization: Bearer <valid access token>' \\\n-H 'content-type: application/json;charset=UTF-8' \\\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-issuers \\\n-d '{\n  \"issuer_type\": \"GLOBAL_SIGN\",\n  \"name\": \"GS Issuer\",\n  \"description\": \"Sample GlobalSign certificate issuer\",\n  \"issuer_attributes\": null,\n  \"issuer_credentials\": {\n      \"api_key\": \"e510e289e6cd8947\",\n      \"api_secret\": \"a477a8393d17a55ecb2ba6a61f58feb84770b621\",\n      \"client_certificate\": \"-----BEGIN CERTIFICATE-----MIIC7zCCAdegAwIBAgIJANTlU4x5S74VMA0GCSqGSIb3DQEBCwUAMA4xDDAKBgNVBAoMA0FybTAeFw0xODAzMTExMzE5MTFaFw0xOTAzMTExMzE5MTFaMA4xDDAKBgNVBAoMA0FybTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJWLStsVMJULZtxdieK9qocM4ymDXMaAusmd9TZLzBgznKQe/CW2yxyA8C8K5e6MmvMYGeKDd4Lkw/ezOj2OsUj2xzNIltUxpGi/GhsNYiN/khNJa/Y1SllLoihJAPm/xbMywOBRu/dM88PiJsNZccOk0I8DYvvyAs9wCTkbKLnfHygl98DCRqXw7nBCplU6F03qpUd/4BUtMtugyqt7yboGH+4YewnUh4Yh4QNOJIvE93Ob++eKjO3pIOYEhQmUxzOLaLNuWXlv2l1WuN281hUP4XBcV8mCzRQfTBBDYTWt+5BEWoLOUkXjW0Um6EAaN3usph1IKDEH6Ia5VHP4Pj0CAwEAAaNQME4wHQYDVR0OBBYEFLsfYZxFcQTjPJKYMjHI2In316fmMB8GA1UdIwQYMBaAFLsfYZxFcQTjPJKYMjHI2In316fmMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAFl08GFsIkkUs6M7QgCWmsnwP6PtD8V87wM1GAqQQlOOeztaeRR2TEOeYiKRZQugYszJ/FVfVp4ggqzepJMn6UZ42j5nmSJs+6t79i23QAzX1zNQ354lr/t7kt3fMdhuL3AP0oZGzdy+EnXXiWeAD22UwzvVmLt38ypJIl+pmTsx9jJy4PN7yoRgtP9k+50m3X6oDxVruehC/JPSeTvEhqyLW3fLcG6IoJMX3vIwfO9uXbFJumTowQeViNJJ9duWvD2KBXn/muOOBe97TPuvAms1gOtMmmPT9/jpo9b4+NsfFiAN6bMici81aIKZzLC+lLGOUmR2fFJyM5OsVLxKsko=-----END CERTIFICATE-----\",\n        \"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\nProc-Type: 4,ENCRYPTED\\nDEK-Info: DES-EDE3-CBC,CCAC26A4133947CB\\n\\np3KJ4FI3wcz3I0MtiLkrznkjWFvprVmoNywySUGb5IqZViJZqCMEsyU9a9iDsSfP\\nZ07cg9GviV21WYIPSxZOQrpy1g1VWILzFnH+J6z8dSH4mxXh0PwdOzYgAeqkrIVM\\nJ7KRm6t222dZFjjXK3eEcLmBLGo29XwVJxKHx+l4++gU1LZmeHZR5M8fJ4jejUly\\n7sqzPlmRF0N3I4lwKVj+PfQTVz43QoCnpxOjuSEL4liBrc2agY2xH1O0PFyHimz9\\n3XM9HR/iuPHW0N2D+NPjXlWKacerupH9d4i9IYIagzB+HTgej8limdo03GmmxcZ6\\nYNa58n5yQSaqu0TPRU9DsrKeGjadHTlZQGdzfq1SWsROCnHLrXFKE2ozIG3+hxA5\\nujBF/QWpX5+inXUwDJhBxp8isHbPEnBEUUd6ZRzCTjvN0jaUti5B9yFhO2G6mbE8\\nCvhyzQK8oJqsjZXnlcpPf95LP+9XbcCDjLSIaWJstzXO9tPiv6+x1MVWmivtRHcC\\nSTzpx8jAGCiG6ejLqWB87ZXiZm7ujlCBheHSf5RHwNHhUvoP2JEYalDDRxjcDMSx\\n4uV42Np4yJlIQEDlGHcBlXoL7vEukFpuWgkYdpcZy/Ou9qz8mXrpLcu8C8MhLmSC\\nixGoR5iRhV7cxoHLyuCzj87eYEA73Xu238DQorSEEuiVFnLzQ2+PJMs4qoI14q/L\\notlBDz+Ko6DrU/EZROYmiqMkLKXR2sx9zNAJwPYRs6nSH08tZ3dwqzZbgtP3Wazi\\nhLWHt5/En7wQRA5a+/dDEHXSoLvvSQ9jvhclhWf+eCYuq2eH+g54oyJGRSY+8GV7\\nujhLxkzl/3OZdhZPWoz4U13KpbSTcNWu5Y7oGDoabw19UbvqmLf1PJkpDH/tQgzB\\nxYtsLBRUcofpYoeIiIxfAA4do5WilJc8xqrGhkE4WcHfY24HXAiOvsjbxV+BRprX\\n1jtgJpV/9nJESMap+8PxipGUFRGjB83/uwJaa6mLftEKflX8i4MZ+HnqraXERsqA\\nWRUcDHIWmFfpzIB3iNuxawVvPH8NdCSPmQ9qTb8Cozl0AuOK2E9S+ke8oiYQScWR\\nLdu+zhej7GjuQ9R+Ub+wPWqvOA5qLXejqnCexVScDUuN+z9JWM3N2FG1MwxhAzhP\\ndEfoQHoBn6uyOmrVGP6fosV3chqhPoec42KeOAm1xDvx692isaIy1jPgIyPxeqhm\\n2Tw4E+02R7dlP8Ljf7JzfLm4oKpWHWlcHeqg24x6lY/wXU1RBcWaTa0AQUwoGm2m\\nIQCPfIqOEv/QC2HpO7SVCYkl65KwR0oTd1AzYxdxEq3xHQbh69EL0FGZPVxVCPI+\\nhEAyifKy1/tm3l91Rf/kGpHY7nIQKCXH49tmFwix8gke2nZJmRgX7/zAdMOAKeKH\\nAaIl4nQtv14EbaasMgnn9qgaDYnWzaReEob2QlQ/WYlTor61+KFpGtcf9jAkgudT\\n2op+4CF7wT2+aTXdtkVWfmv++iB8GnlqZdxLvyG1cTYjjYHVFbMSWQnxzQqiE2ms\\nQgp+byjWCumpsWTMdTO+d9NkDOo80vDpaRxEgebmhJ0MbX+eFjBgVg==\\n-----END RSA PRIVATE KEY-----\",\n      \"passphrase\": \"helloworld\"\n  }\n}'\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "General description for the certificate issuer.",
              "example": "GlobalSign sample issuer",
              "maxLength": 100,
              "type": "string",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "description": "General attributes for connecting the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, the value shall be empty.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.\n",
              "example": [],
              "type": "object",
              "api_fieldname": "issuer_attributes",
              "entity_fieldname": "issuer_attributes",
              "parameter_fieldname": "issuer_attributes",
              "in": "body",
              "required": false,
              "_key": "issuer_attributes"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The credentials required for connecting to the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, see definition of GlobalSignCredentials.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAuthCredentials.\n",
              "example": [],
              "type": "object",
              "name": "issuer_credentials",
              "in": "body",
              "schema_param": true,
              "entity_fieldname": "issuer_credentials",
              "api_fieldname": "issuer_credentials",
              "external_param": true,
              "parameter_fieldname": "issuer_credentials",
              "required": false,
              "_key": "issuer_credentials"
            },
            {
              "description": "The type of the certificate issuer.\n- GLOBAL_SIGN:\n  Certificates are issued by GlobalSign service. The users must provide their own GlobalSign account credentials.\n- CFSSL_AUTH:\n  Certificates are issued by CFSSL authenticated signing service.\n  The users must provide their own CFSSL host_url and credentials.\n",
              "enum": [
                "GLOBAL_SIGN",
                "CFSSL_AUTH"
              ],
              "example": "GLOBAL_SIGN",
              "type": "string",
              "api_fieldname": "issuer_type",
              "entity_fieldname": "issuer_type",
              "parameter_fieldname": "issuer_type",
              "in": "body",
              "required": true,
              "enum_reference": "certificate_issuer_type_enum",
              "_key": "issuer_type"
            },
            {
              "description": "Certificate issuer name, unique per account.",
              "example": "GS Issuer",
              "maxLength": 50,
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": false,
              "_key": "name"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "Created.",
              "schema": {
                "properties": [
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "General description for the certificate issuer.",
                    "example": "GlobalSign sample issuer",
                    "maxLength": 100,
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate issuer.",
                    "example": "01234567890ABCDEF01234567890ABCDEF",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "General attributes for connecting the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, the value shall be empty.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.\n",
                    "example": [],
                    "type": "object",
                    "api_fieldname": "issuer_attributes",
                    "entity_fieldname": "issuer_attributes",
                    "_key": "issuer_attributes"
                  },
                  {
                    "description": "The type of the certificate issuer.\n- GLOBAL_SIGN:\n  Certificates are issued by GlobalSign service. The users must provide their own GlobalSign account credentials.\n- CFSSL_AUTH:\n  Certificates are issued by CFSSL authenticated signing service.\n  The users must provide their own CFSSL host_url and credentials.\n",
                    "enum": [
                      "GLOBAL_SIGN",
                      "CFSSL_AUTH"
                    ],
                    "example": "GLOBAL_SIGN",
                    "type": "string",
                    "api_fieldname": "issuer_type",
                    "entity_fieldname": "issuer_type",
                    "_key": "issuer_type"
                  },
                  {
                    "description": "Certificate issuer name, unique per account.",
                    "example": "GS Issuer",
                    "maxLength": 50,
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "enum": [
                      "certificate-issuer"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  }
                ],
                "required": [
                  "issuer_type"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer"
                }
              },
              "_key": "201"
            },
            {
              "description": "Validation error: The data used to create the certificate issuer failed validation.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "You are not authorized to view the resource.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Conflict. A certificate issuer with this name already exists.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "409"
            },
            {
              "description": "The request failed due to customer configured external service.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "424"
            }
          ],
          "path": "/v3/certificate-issuers",
          "summary": "Create certificate issuer.",
          "return_type": "certificate_issuer",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "id"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-id": "id"
          },
          "operation_id": "createCertificateIssuer",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "Delete a certificate issuer by ID.\n<br>\n**Example usage:**\n\n```\ncurl -X DELETE \\\n-H 'authorization: <valid access token>' \\\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-issuers/0162155dc77d507b9d48a91b00000000\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "Certificate issuer ID. <br> The ID of the certificate issuer.\nAn active certificate issuer may not be deleted.\n",
              "in": "path",
              "name": "certificate-issuer-id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "certificate-issuer-id",
              "external_param": false,
              "parameter_fieldname": "certificate-issuer-id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Certificate issuer deleted.",
              "_key": "204"
            },
            {
              "description": "Validation error: An active certificate issuer cannot be deleted.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            }
          ],
          "path": "/v3/certificate-issuers/{certificate-issuer-id}",
          "summary": "Delete certificate issuer.",
          "return_type": "certificate_issuer",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-id": "id"
          },
          "operation_id": "deleteCertificateIssuer",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "Note: This endpoint does not implement pagination and therefore, list control parameters such as `limit` or `after` will be ignored by the system.\n",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of The item after which to retrieve the next page.",
              "example": "01631667477600000000000100100374",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "external_param": true,
              "parameter_fieldname": "after",
              "required": false,
              "_key": "after"
            },
            {
              "description": "Comma-separated list of data fields to return. Currently supported: `total_count`",
              "in": "query",
              "name": "include",
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "required": false,
              "_key": "include"
            },
            {
              "description": "How many objects to retrieve in the page. The minimum limit is 2 and the maximum is 1000. Limit values outside of this range are set to the closest limit.",
              "example": 50,
              "maximum": 1000,
              "minimum": 2,
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "in": "query",
              "name": "limit",
              "external_param": true,
              "parameter_fieldname": "limit",
              "required": false,
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, `ASC` or `DESC`; by default `ASC`.",
              "example": "DESC",
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "in": "query",
              "name": "order",
              "external_param": true,
              "parameter_fieldname": "order",
              "required": false,
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "The ID of The item after which to retrieve the next page.",
                    "example": "01631667477600000000000100100374",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "in": "query",
                    "name": "after",
                    "external_param": true,
                    "parameter_fieldname": "after",
                    "required": false,
                    "_key": "after"
                  },
                  {
                    "description": "List of certificate issuers.",
                    "items": {
                      "properties": [
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2017-01-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "General description for the certificate issuer.",
                          "example": "GlobalSign sample issuer",
                          "maxLength": 100,
                          "type": "string",
                          "_key": "description"
                        },
                        {
                          "description": "Entity instance signature.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "The ID of the certificate issuer.",
                          "example": "01234567890ABCDEF01234567890ABCDEF",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "General attributes for connecting the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, the value shall be empty.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.\n",
                          "example": [],
                          "type": "object",
                          "_key": "issuer_attributes"
                        },
                        {
                          "description": "The type of the certificate issuer.\n- GLOBAL_SIGN:\n  Certificates are issued by GlobalSign service. The users must provide their own GlobalSign account credentials.\n- CFSSL_AUTH:\n  Certificates are issued by CFSSL authenticated signing service.\n  The users must provide their own CFSSL host_url and credentials.\n",
                          "enum": [
                            "GLOBAL_SIGN",
                            "CFSSL_AUTH"
                          ],
                          "example": "GLOBAL_SIGN",
                          "type": "string",
                          "_key": "issuer_type"
                        },
                        {
                          "description": "Certificate issuer name, unique per account.",
                          "example": "GS Issuer",
                          "maxLength": 50,
                          "type": "string",
                          "_key": "name"
                        },
                        {
                          "enum": [
                            "certificate-issuer"
                          ],
                          "type": "string",
                          "_key": "object"
                        }
                      ],
                      "required": [
                        "issuer_type"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Security",
                        "entity": "certificate_issuer"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Are there more results available.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "How many objects to retrieve in the page. The minimum limit is 2 and the maximum is 1000. Limit values outside of this range are set to the closest limit.",
                    "example": 50,
                    "maximum": 1000,
                    "minimum": 2,
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "in": "query",
                    "name": "limit",
                    "external_param": true,
                    "parameter_fieldname": "limit",
                    "required": false,
                    "_key": "limit"
                  },
                  {
                    "description": "The type of this API object is a `list`.",
                    "example": "list",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records based on creation time, `ASC` or `DESC`; by default `ASC`.",
                    "example": "DESC",
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "in": "query",
                    "name": "order",
                    "external_param": true,
                    "parameter_fieldname": "order",
                    "required": false,
                    "_key": "order"
                  },
                  {
                    "example": 1,
                    "format": "integer",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer"
                }
              },
              "_key": "200"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            }
          ],
          "path": "/v3/certificate-issuers",
          "summary": "Get certificate issuers list.",
          "return_type": "paginated_response(certificate_issuer)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count"
          ],
          "foreign_key_priority": "self",
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-id": "id"
          },
          "operation_id": "getCertificateIssuers",
          "pagination": true,
          "foreign_key": {
            "group": "Security",
            "entity": "certificate_issuer"
          },
          "_key": "list"
        },
        {
          "description": "(No description provided)",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the certificate issuer.",
              "example": "01234567890ABCDEF01234567890ABCDEF",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "certificate-issuer-id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "General description for the certificate issuer.",
                    "example": "GlobalSign sample issuer",
                    "maxLength": 100,
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate issuer.",
                    "example": "01234567890ABCDEF01234567890ABCDEF",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "General attributes for connecting the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, the value shall be empty.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.\n",
                    "example": [],
                    "type": "object",
                    "api_fieldname": "issuer_attributes",
                    "entity_fieldname": "issuer_attributes",
                    "_key": "issuer_attributes"
                  },
                  {
                    "description": "The type of the certificate issuer.\n- GLOBAL_SIGN:\n  Certificates are issued by GlobalSign service. The users must provide their own GlobalSign account credentials.\n- CFSSL_AUTH:\n  Certificates are issued by CFSSL authenticated signing service.\n  The users must provide their own CFSSL host_url and credentials.\n",
                    "enum": [
                      "GLOBAL_SIGN",
                      "CFSSL_AUTH"
                    ],
                    "example": "GLOBAL_SIGN",
                    "type": "string",
                    "api_fieldname": "issuer_type",
                    "entity_fieldname": "issuer_type",
                    "_key": "issuer_type"
                  },
                  {
                    "description": "Certificate issuer name, unique per account.",
                    "example": "GS Issuer",
                    "maxLength": 50,
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "enum": [
                      "certificate-issuer"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  }
                ],
                "required": [
                  "issuer_type"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error: The data used to get the certificate issuer failed validation.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            }
          ],
          "path": "/v3/certificate-issuers/{certificate-issuer-id}",
          "summary": "Get certificate issuer by ID.",
          "return_type": "certificate_issuer",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "description",
            "issuer_attributes",
            "issuer_type",
            "name"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-id": "id"
          },
          "operation_id": "getCertificateIssuer",
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "Update a certificate issuer.\n<br>\n**Example usage:**\n\n```\ncurl -X PUT \\\n-H 'authorization: <valid access token>' \\\n-H 'content-type: application/json;charset=UTF-8' \\\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-issuers/01621560be51507b9d48a91b00000000 \\\n-d '{\n  \"description\": \"Sample GlobalSign certificate issuer - updated.\",\n  \"name\": \"GlobalSign Issuer\"\n}'\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "General description for the certificate issuer.",
              "example": "GlobalSign sample issuer",
              "maxLength": 100,
              "type": "string",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "description": "The ID of the certificate issuer.",
              "example": "01234567890ABCDEF01234567890ABCDEF",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "certificate-issuer-id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "description": "General attributes for connecting the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, the value shall be empty.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.\n",
              "example": [],
              "type": "object",
              "api_fieldname": "issuer_attributes",
              "entity_fieldname": "issuer_attributes",
              "parameter_fieldname": "issuer_attributes",
              "in": "body",
              "required": false,
              "_key": "issuer_attributes"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The credentials required for connecting to the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, see definition of GlobalSignCredentials.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAuthCredentials.\n",
              "example": [],
              "type": "object",
              "name": "issuer_credentials",
              "in": "body",
              "schema_param": true,
              "entity_fieldname": "issuer_credentials",
              "api_fieldname": "issuer_credentials",
              "external_param": true,
              "parameter_fieldname": "issuer_credentials",
              "required": false,
              "_key": "issuer_credentials"
            },
            {
              "description": "Certificate issuer name, unique per account.",
              "example": "GS Issuer",
              "maxLength": 50,
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": false,
              "_key": "name"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "General description for the certificate issuer.",
                    "example": "GlobalSign sample issuer",
                    "maxLength": 100,
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate issuer.",
                    "example": "01234567890ABCDEF01234567890ABCDEF",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "General attributes for connecting the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, the value shall be empty.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.\n",
                    "example": [],
                    "type": "object",
                    "api_fieldname": "issuer_attributes",
                    "entity_fieldname": "issuer_attributes",
                    "_key": "issuer_attributes"
                  },
                  {
                    "description": "The type of the certificate issuer.\n- GLOBAL_SIGN:\n  Certificates are issued by GlobalSign service. The users must provide their own GlobalSign account credentials.\n- CFSSL_AUTH:\n  Certificates are issued by CFSSL authenticated signing service.\n  The users must provide their own CFSSL host_url and credentials.\n",
                    "enum": [
                      "GLOBAL_SIGN",
                      "CFSSL_AUTH"
                    ],
                    "example": "GLOBAL_SIGN",
                    "type": "string",
                    "api_fieldname": "issuer_type",
                    "entity_fieldname": "issuer_type",
                    "_key": "issuer_type"
                  },
                  {
                    "description": "Certificate issuer name, unique per account.",
                    "example": "GS Issuer",
                    "maxLength": 50,
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "enum": [
                      "certificate-issuer"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  }
                ],
                "required": [
                  "issuer_type"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error: The data used to update the certificate issuer failed validation.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            },
            {
              "description": "Conflict. A certificate issuer with this name already exists.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "409"
            },
            {
              "description": "The request failed due to customer configured external service.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "424"
            }
          ],
          "path": "/v3/certificate-issuers/{certificate-issuer-id}",
          "summary": "Update certificate issuer.",
          "return_type": "certificate_issuer",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "issuer_type"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-id": "id"
          },
          "operation_id": "updateCertificateIssuer",
          "pagination": false,
          "_key": "update"
        },
        {
          "description": "A utility API that can be used to validate the user configuration before activating a certificate issuer.\nVerifies that the certificate issuer is accessible and can be used to generate certificates by Device Management.\n<br>\n**Note:**\nThe API requests the 3rd party CA to sign a test certificate.\nFor some 3rd party CAs, this operation may make use of the account quota.\n<br>\n**Example usage:**\n\n```\ncurl -X POST \\\n-H 'authorization: <valid access token>' \\\n-H 'content-type: application/json;charset=UTF-8' \\\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-issuers/01621a36719d507b9d48a91b00000000/verify\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "Certificate issuer ID. <br> The ID of the certificate issuer.\n",
              "in": "path",
              "name": "certificate-issuer-id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "certificate-issuer-id",
              "external_param": false,
              "parameter_fieldname": "certificate-issuer-id",
              "_key": "id"
            }
          ],
          "method": "post",
          "mode": "verify",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "Provides details in case of failure.\n",
                    "example": "message describing the verification failure",
                    "type": "string",
                    "api_fieldname": "message",
                    "entity_fieldname": "message",
                    "_key": "message"
                  },
                  {
                    "description": "Indicates whether the certificate issuer was verified successfully.\n",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "successful",
                    "entity_fieldname": "successful",
                    "_key": "successful"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "verification_response"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            },
            {
              "description": "The request failed due to customer configured external service.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "424"
            }
          ],
          "path": "/v3/certificate-issuers/{certificate-issuer-id}/verify",
          "summary": "Verify certificate issuer.",
          "return_type": "verification_response",
          "return_info": {
            "self": false,
            "custom": false,
            "type": "verification_response"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "message",
            "successful"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-id": "id"
          },
          "unaggregated": true,
          "operation_id": "verifyCertificateIssuer",
          "foreign_key": {
            "entity": "verification_response",
            "group": "Security"
          },
          "pagination": false,
          "_key": "verify"
        }
      ],
      "fields": [
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2017-01-01T00:00:00Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "General description for the certificate issuer.",
          "example": "GlobalSign sample issuer",
          "maxLength": 100,
          "type": "string",
          "api_fieldname": "description",
          "readOnly": false,
          "required": false,
          "_key": "description"
        },
        {
          "description": "The ID of the certificate issuer.",
          "example": "01234567890ABCDEF01234567890ABCDEF",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "description": "General attributes for connecting the certificate issuer.\nWhen the issuer_type is GLOBAL_SIGN, the value shall be empty.\nWhen the issuer_type is CFSSL_AUTH, see definition of CfsslAttributes.\n",
          "example": [],
          "type": "object",
          "api_fieldname": "issuer_attributes",
          "readOnly": false,
          "required": false,
          "_key": "issuer_attributes"
        },
        {
          "description": "The type of the certificate issuer.\n- GLOBAL_SIGN:\n  Certificates are issued by GlobalSign service. The users must provide their own GlobalSign account credentials.\n- CFSSL_AUTH:\n  Certificates are issued by CFSSL authenticated signing service.\n  The users must provide their own CFSSL host_url and credentials.\n",
          "enum": [
            "GLOBAL_SIGN",
            "CFSSL_AUTH"
          ],
          "example": "GLOBAL_SIGN",
          "type": "string",
          "api_fieldname": "issuer_type",
          "readOnly": false,
          "required": true,
          "enum_reference": "certificate_issuer_type_enum",
          "_key": "issuer_type"
        },
        {
          "description": "Certificate issuer name, unique per account.",
          "example": "GS Issuer",
          "maxLength": 50,
          "type": "string",
          "api_fieldname": "name",
          "readOnly": false,
          "required": true,
          "_key": "name"
        }
      ],
      "field_renames": [],
      "tags": [
        "Certificate Issuers"
      ],
      "group_id": "Security",
      "_key": "certificate_issuer"
    },
    {
      "swagger_models": [
        "CertificateIssuerConfigListResponse",
        "CertificateIssuerConfigRequest",
        "CertificateIssuerConfigResponse",
        "CreateCertificateIssuerConfig"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "Configure the certificate issuer to be used when creating the device custom certificates.\n<br>\n**Example usage:**\n\n```\ncurl -X POST \\\n-H 'authorization: <valid access token>' \\\n-H 'content-type: application/json;charset=UTF-8' \\\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-issuer-configurations \\\n-d '{\n  \"reference\": \"customer.dlms\",\n  \"certificate_issuer_id\": \"01621a36719d507b9d48a91b00000000\"\n}'\n```\n",
          "field_renames": [
            {
              "api_fieldname": "reference",
              "_key": "certificate_reference"
            }
          ],
          "fields": [
            {
              "description": "The ID of the certificate issuer.\nNull if Device Management internal HSM is used.\n",
              "example": "01648415a2a30242ac18000500000000",
              "type": "string",
              "api_fieldname": "certificate_issuer_id",
              "entity_fieldname": "certificate_issuer_id",
              "parameter_fieldname": "certificate_issuer_id",
              "in": "body",
              "required": false,
              "_key": "certificate_issuer_id"
            },
            {
              "description": "The certificate name to which the certificate issuer configuration applies.",
              "example": "customer.dlms",
              "type": "string",
              "api_fieldname": "reference",
              "entity_fieldname": "certificate_reference",
              "parameter_fieldname": "reference",
              "in": "body",
              "required": true,
              "_key": "certificate_reference"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "The ID of the certificate issuer.\nNull if Device Management internal HSM is used.\n",
                    "example": "01648415a2a30242ac18000500000000",
                    "type": "string",
                    "api_fieldname": "certificate_issuer_id",
                    "entity_fieldname": "certificate_issuer_id",
                    "_key": "certificate_issuer_id"
                  },
                  {
                    "description": "Created UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate issuer configuration.\n",
                    "example": "01648415a2a30242ac18000500000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_custom",
                    "entity_fieldname": "is_custom",
                    "_key": "is_custom"
                  },
                  {
                    "enum": [
                      "certificate-issuer-configuration"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The certificate name to which the certificate issuer configuration applies.",
                    "example": "customer.dlms",
                    "type": "string",
                    "api_fieldname": "reference",
                    "entity_fieldname": "certificate_reference",
                    "_key": "reference"
                  },
                  {
                    "description": "Updated UTC time RFC3339.",
                    "example": "2017-02-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer_config"
                }
              },
              "_key": "201"
            },
            {
              "description": "Validation error.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "A certificate issuer configuration with this reference already exists.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "409"
            }
          ],
          "path": "/v3/certificate-issuer-configurations",
          "summary": "Create certificate issuer configuration.",
          "return_type": "certificate_issuer_config",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer_config"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "id",
            "updated_at"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-configuration-id": "id"
          },
          "operation_id": "createCertificateIssuerConfig",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "Delete the configured certificate issuer configuration.\nYou can only delete the configurations of custom certificates.\n",
          "field_renames": [
            {
              "api_fieldname": "reference",
              "_key": "certificate_reference"
            }
          ],
          "fields": [
            {
              "description": "The ID of the certificate issuer configuration.\n",
              "in": "path",
              "name": "certificate-issuer-configuration-id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "certificate-issuer-configuration-id",
              "external_param": false,
              "parameter_fieldname": "certificate-issuer-configuration-id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "No content.",
              "_key": "204"
            },
            {
              "description": "Validation error.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            }
          ],
          "path": "/v3/certificate-issuer-configurations/{certificate-issuer-configuration-id}",
          "summary": "Delete certificate issuer configuration.",
          "return_type": "certificate_issuer_config",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer_config"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-configuration-id": "id"
          },
          "operation_id": "deleteCertificateIssuerConfigByID",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "Provides the configured certificate issuer to be used when creating device\ncertificates for LwM2M communication.<br>\n",
          "field_renames": [
            {
              "api_fieldname": "reference",
              "_key": "certificate_reference"
            }
          ],
          "fields": [],
          "method": "get",
          "mode": "get_default",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "The ID of the certificate issuer.\nNull if Device Management internal HSM is used.\n",
                    "example": "01648415a2a30242ac18000500000000",
                    "type": "string",
                    "api_fieldname": "certificate_issuer_id",
                    "entity_fieldname": "certificate_issuer_id",
                    "_key": "certificate_issuer_id"
                  },
                  {
                    "description": "Created UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate issuer configuration.\n",
                    "example": "01648415a2a30242ac18000500000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_custom",
                    "entity_fieldname": "is_custom",
                    "_key": "is_custom"
                  },
                  {
                    "enum": [
                      "certificate-issuer-configuration"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The certificate name to which the certificate issuer configuration applies.",
                    "example": "customer.dlms",
                    "type": "string",
                    "api_fieldname": "reference",
                    "entity_fieldname": "certificate_reference",
                    "_key": "reference"
                  },
                  {
                    "description": "Updated UTC time RFC3339.",
                    "example": "2017-02-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer_config"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            }
          ],
          "path": "/v3/certificate-issuer-configurations/lwm2m",
          "summary": "Get certificate issuer configuration.",
          "return_type": "certificate_issuer_config",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer_config"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "certificate_issuer_id",
            "created_at",
            "id",
            "updated_at",
            "certificate_reference"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-configuration-id": "id"
          },
          "operation_id": "getCertificateIssuerConfig",
          "pagination": false,
          "_key": "get_default"
        },
        {
          "description": "Get certificate issuer configurations, optionally filtered by reference.\n<br>\n**Example usage:**\n\n```\ncurl \\\n-H 'authorization: <valid access token>' \\\n-H 'content-type: application/json;charset=UTF-8' \\\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-issuer-configurations \\\n```\n```\ncurl \\\n-H 'authorization: <valid access token>' \\\n-H 'content-type: application/json;charset=UTF-8' \\\nhttps://api.us-east-1.mbedcloud.com/v3/certificate-issuer-configurations?reference__eq=dlms \\\n```\nNote: This endpoint does not implement pagination and therefore, list control parameters such as `limit` or `after` will be ignored by the system.\n",
          "field_renames": [
            {
              "api_fieldname": "reference",
              "_key": "certificate_reference"
            }
          ],
          "fields": [
            {
              "description": "The ID of The item after which to retrieve the next page.",
              "example": "01631667477600000000000100100374",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "external_param": true,
              "parameter_fieldname": "after",
              "required": false,
              "_key": "after"
            },
            {
              "description": "Comma-separated list of data fields to return. Currently supported: `total_count`",
              "in": "query",
              "name": "include",
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "required": false,
              "_key": "include"
            },
            {
              "description": "How many objects to retrieve in the page. The minimum limit is 2 and the maximum is 1000. Limit values outside of this range are set to the closest limit.",
              "example": 50,
              "maximum": 1000,
              "minimum": 2,
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "in": "query",
              "name": "limit",
              "external_param": true,
              "parameter_fieldname": "limit",
              "required": false,
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, `ASC` or `DESC`; by default `ASC`.",
              "example": "DESC",
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "in": "query",
              "name": "order",
              "external_param": true,
              "parameter_fieldname": "order",
              "required": false,
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "An offset token for current page.",
                    "example": "01631667477600000000000100100374",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "List of certificate issuers.",
                    "items": {
                      "properties": [
                        {
                          "description": "The ID of the certificate issuer.\nNull if Device Management internal HSM is used.\n",
                          "example": "01648415a2a30242ac18000500000000",
                          "type": "string",
                          "_key": "certificate_issuer_id"
                        },
                        {
                          "description": "Created UTC time RFC3339.",
                          "example": "2017-01-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "Entity instance signature.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "The ID of the certificate issuer configuration.\n",
                          "example": "01648415a2a30242ac18000500000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "example": true,
                          "type": "boolean",
                          "_key": "is_custom"
                        },
                        {
                          "enum": [
                            "certificate-issuer-configuration"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "The certificate name to which the certificate issuer configuration applies.",
                          "example": "customer.dlms",
                          "type": "string",
                          "_key": "reference"
                        },
                        {
                          "description": "Updated UTC time RFC3339.",
                          "example": "2017-02-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        }
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Security",
                        "entity": "certificate_issuer_config"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Are there more results available.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "How many objects to retrieve in the page. The minimum limit is 2 and the maximum is 1000. Limit values outside of this range are set to the closest limit.",
                    "example": 50,
                    "maximum": 1000,
                    "minimum": 2,
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "The type of this API object is a `list`.",
                    "example": "list",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The creation time based order of the entries.",
                    "example": "DESC",
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "example": 1,
                    "format": "integer",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer_config"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            }
          ],
          "path": "/v3/certificate-issuer-configurations",
          "summary": "Get certificate issuer configurations.",
          "return_type": "paginated_response(certificate_issuer_config)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer_config"
          },
          "x_filter": {
            "certificate_reference": [
              "eq",
              "eq"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "reference__eq"
          ],
          "foreign_key_priority": "self",
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-configuration-id": "id"
          },
          "operation_id": "getCertificateIssuerConfigs",
          "pagination": true,
          "foreign_key": {
            "group": "Security",
            "entity": "certificate_issuer_config"
          },
          "_key": "list"
        },
        {
          "description": "Provides the configured certificate issuer.\n",
          "field_renames": [
            {
              "api_fieldname": "reference",
              "_key": "certificate_reference"
            }
          ],
          "fields": [
            {
              "description": "The ID of the certificate issuer configuration.\n",
              "example": "01648415a2a30242ac18000500000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "certificate-issuer-configuration-id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "The ID of the certificate issuer.\nNull if Device Management internal HSM is used.\n",
                    "example": "01648415a2a30242ac18000500000000",
                    "type": "string",
                    "api_fieldname": "certificate_issuer_id",
                    "entity_fieldname": "certificate_issuer_id",
                    "_key": "certificate_issuer_id"
                  },
                  {
                    "description": "Created UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate issuer configuration.\n",
                    "example": "01648415a2a30242ac18000500000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_custom",
                    "entity_fieldname": "is_custom",
                    "_key": "is_custom"
                  },
                  {
                    "enum": [
                      "certificate-issuer-configuration"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The certificate name to which the certificate issuer configuration applies.",
                    "example": "customer.dlms",
                    "type": "string",
                    "api_fieldname": "reference",
                    "entity_fieldname": "certificate_reference",
                    "_key": "reference"
                  },
                  {
                    "description": "Updated UTC time RFC3339.",
                    "example": "2017-02-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer_config"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            }
          ],
          "path": "/v3/certificate-issuer-configurations/{certificate-issuer-configuration-id}",
          "summary": "Get certificate issuer configuration.",
          "return_type": "certificate_issuer_config",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer_config"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "certificate_issuer_id",
            "created_at",
            "updated_at",
            "certificate_reference"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-configuration-id": "id"
          },
          "operation_id": "getCertificateIssuerConfigByID",
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "Update the configured certificate issuer configuration.\n",
          "field_renames": [
            {
              "api_fieldname": "reference",
              "_key": "certificate_reference"
            }
          ],
          "fields": [
            {
              "description": "The ID of the certificate issuer.\nNull if Device Management internal HSM is used.\n",
              "example": "01648415a2a30242ac18000500000000",
              "type": "string",
              "api_fieldname": "certificate_issuer_id",
              "entity_fieldname": "certificate_issuer_id",
              "parameter_fieldname": "certificate_issuer_id",
              "in": "body",
              "required": false,
              "_key": "certificate_issuer_id"
            },
            {
              "description": "The ID of the certificate issuer configuration.\n",
              "example": "01648415a2a30242ac18000500000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "certificate-issuer-configuration-id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "The ID of the certificate issuer.\nNull if Device Management internal HSM is used.\n",
                    "example": "01648415a2a30242ac18000500000000",
                    "type": "string",
                    "api_fieldname": "certificate_issuer_id",
                    "entity_fieldname": "certificate_issuer_id",
                    "_key": "certificate_issuer_id"
                  },
                  {
                    "description": "Created UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate issuer configuration.\n",
                    "example": "01648415a2a30242ac18000500000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_custom",
                    "entity_fieldname": "is_custom",
                    "_key": "is_custom"
                  },
                  {
                    "enum": [
                      "certificate-issuer-configuration"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The certificate name to which the certificate issuer configuration applies.",
                    "example": "customer.dlms",
                    "type": "string",
                    "api_fieldname": "reference",
                    "entity_fieldname": "certificate_reference",
                    "_key": "reference"
                  },
                  {
                    "description": "Updated UTC time RFC3339.",
                    "example": "2017-02-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_issuer_config"
                }
              },
              "_key": "200"
            },
            {
              "description": "Validation error.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "Unauthorized.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "Not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            }
          ],
          "path": "/v3/certificate-issuer-configurations/{certificate-issuer-configuration-id}",
          "summary": "Update certificate issuer configuration.",
          "return_type": "certificate_issuer_config",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "certificate_issuer_config"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "updated_at",
            "certificate_reference"
          ],
          "group_id": "Security",
          "parameter_map": {
            "certificate-issuer-configuration-id": "id"
          },
          "operation_id": "updateCertificateIssuerConfigByID",
          "additional_operations": [
            {
              "operation_id": "updateCertificateIssuerConfig",
              "notes": "After retrieving the resource using the `lwm2m` method, it can modified using using this SDK method."
            }
          ],
          "pagination": false,
          "_key": "update"
        }
      ],
      "fields": [
        {
          "description": "The ID of the certificate issuer.\nNull if Device Management internal HSM is used.\n",
          "example": "01648415a2a30242ac18000500000000",
          "type": "string",
          "api_fieldname": "certificate_issuer_id",
          "readOnly": false,
          "required": true,
          "_key": "certificate_issuer_id"
        },
        {
          "description": "The certificate name to which the certificate issuer configuration applies.",
          "example": "customer.dlms",
          "type": "string",
          "api_fieldname": "reference",
          "readOnly": false,
          "required": true,
          "_key": "certificate_reference"
        },
        {
          "description": "Created UTC time RFC3339.",
          "example": "2017-01-01T00:00:00Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "The ID of the certificate issuer configuration.\n",
          "example": "01648415a2a30242ac18000500000000",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "description": "Updated UTC time RFC3339.",
          "example": "2017-02-01T00:00:00Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        }
      ],
      "field_renames": [
        {
          "api_fieldname": "reference",
          "_key": "certificate_reference"
        }
      ],
      "tags": [
        "Certificate Issuers Activation"
      ],
      "group_id": "Security",
      "_key": "certificate_issuer_config"
    },
    {
      "swagger_models": [
        "DeveloperCertificateRequestData",
        "DeveloperCertificateResponseData",
        "TrustedCertificateResp"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "This REST API is intended to be used by customers to get a developer certificate (a certificate that can be flashed into multiple devices to connect to bootstrap server).\n\n**Note:** The number of developer certificates allowed per account is limited. Please see [Using your own certificate authority](/docs/current/mbed-cloud-deploy/instructions-for-factory-setup-and-device-provision.html#using-your-own-certificate-authority-with-mbed-cloud).\n\n**Example usage:**\ncurl -X POST \"http://api.us-east-1.mbedcloud.com/v3/developer-certificates\" -H \"accept: application/json\" -H \"Authorization: Bearer THE_ACCESS_TOKEN\" -H \"content-type: application/json\" -d \"{ \\\"name\\\": \\\"THE_CERTIFICATE_NAME\\\", \\\"description\\\": \\\"THE_CERTIFICATE_DESCRIPTION\\\"}\"\n",
          "field_renames": [
            {
              "api_fieldname": "developer_certificate",
              "_key": "certificate"
            },
            {
              "api_fieldname": "developer_private_key",
              "_key": "private_key"
            }
          ],
          "fields": [
            {
              "description": "Description for the developer certificate.",
              "type": "string",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "description": "Name of the developer certificate.",
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": true,
              "_key": "name"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "Developer certificate created successfully.",
              "examples": [
                {
                  "account_id": "015fee5d9b3538c98640fbfb00000000",
                  "created_at": "2017-12-11T14:22:20.009Z",
                  "description": "This certificate will be used with multiple developer devices",
                  "developer_certificate": "-----BEGIN CERTIFICATE-----\\nMIICcDCCAhWgAwIBAgIRAPSBbBtLUE/ekQcWE4GzPJEwCgYIKoZIzj0EAwIwgaIx\\nCzAJBgNVBAYTAkdCMRcwFQYDVQQIDA5DYW1icmlkZ2VzaGlyZTESMBAGA1UEBwwJ\\nQ2FtYnJpZGdlMRAwDgYDVQQKDAdBUk0gTHRkMSkwJwYDVQQLDCAwMTU4NDNlMzJl\\nYzkwMjQyMGEwMTVlMDcwMDAwMDAwMDEpMCcGA1UEAwwgMDE2MWRiYmNkZDY2MGE1\\nODBhMDEwYzM0MDNjMDAwMDAwHhcNMTgwMjI4MDkyNzIzWhcNMjgwMjI4MDkyNzIz\\nWjCBojELMAkGA1UEBhMCR0IxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMRIwEAYD\\nVQQHDAlDYW1icmlkZ2UxEDAOBgNVBAoMB0FSTSBMdGQxKTAnBgNVBAsMIDAxNTg0\\nM2UzMmVjOTAyNDIwYTAxNWUwNzAwMDAwMDAwMSkwJwYDVQQDDCAwMTYxZGJiY2Rk\\nNjYwYTU4MGEwMTBjMzQwM2MwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEScLDbOXvOb903AYlI9ow8E4hbLSHJPt5E2BO4Q4bHOpuWH2Oh6P+CDPte9pAv3\\nE6g90Xk/ZcZpQ+xBO6qci/ajKjAoMBIGCSsGAQQBoCCBSQQFAgNAAJEwEgYDVR0T\\nAQH/BAgwBgEB/wIBADAKBggqhkjOPQQDAgNJADBGAiEAsi9zSK8Njl22GoEHrsg8\\nQlwFnrkkP9d6FyLFtmqndt4CIQCmVHwisYNcCkqD2SWctG1xQHo0HZePAQW8PstM\\nzhNupQ==\\n-----END CERTIFICATE-----\\n",
                  "developer_private_key": "-----BEGIN PRIVATE KEY-----\\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgeKc97aC1Z4aniXVG\\njNSvvXw2hl6zwACYIs88OKQx61GgCgYIKoZIzj0DAQehRANCAAREnCw2zl7zm/dN\\nwGJSPaMPBOIWy0hyT7eRNgTuEOGxzqblh9joej/ggz7XvaQL9xOoPdF5P2XGaUPs\\nQTuqnIv2\\n-----END PRIVATE KEY-----\\n",
                  "etag": "1",
                  "id": "015fee4431fd38c98640fbfb00000000",
                  "name": "DeveloperCertificate",
                  "object": "trusted-cert",
                  "security_file_content": "/*\\n * Copyright (c) 2017 ARM Limited. All rights reserved.\\n * SPDX-License-Identifier: Apache-2.0\\n * Licensed under the Apache License, Version 2.0 (the License); you may\\n * not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an AS IS BASIS, WITHOUT\\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n#ifndef __MBED_CLOUD_DEV_CREDENTIALS_H__\\n#define __MBED_CLOUD_DEV_CREDENTIALS_H__\\n\\n#include <inttypes.h>\\n\\nconst char MBED_CLOUD_DEV_BOOTSTRAP_ENDPOINT_NAME[] = \\\"0161dbbcdd660a580a010c3403c00000\\\";\\nconst char MBED_CLOUD_DEV_ACCOUNT_ID[] = \\\"015843e32ec902420a015e0700000000\\\";\\nconst char MBED_CLOUD_DEV_BOOTSTRAP_SERVER_URI[] = \\\"coaps://coap-integration-lab.dev.mbed.com:5684?aid=015843e32ec902420a015e0700000000\\\";\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x70, 0x30, 0x82, 0x02, 0x15,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x11, 0x00,\\n 0xf4, 0x81, 0x6c, 0x1b, 0x4b, 0x50, 0x4f, 0xde,\\n 0x91, 0x07, 0x16, 0x13, 0x81, 0xb3, 0x3c, 0x91,\\n 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x04, 0x03, 0x02, 0x30, 0x81, 0xa2, 0x31,\\n 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,\\n 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30, 0x15,\\n 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0e, 0x43,\\n 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,\\n 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12, 0x30,\\n 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x09,\\n 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67,\\n 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55,\\n 0x04, 0x0a, 0x0c, 0x07, 0x41, 0x52, 0x4d, 0x20,\\n 0x4c, 0x74, 0x64, 0x31, 0x29, 0x30, 0x27, 0x06,\\n 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x20, 0x30, 0x31,\\n 0x35, 0x38, 0x34, 0x33, 0x65, 0x33, 0x32, 0x65,\\n 0x63, 0x39, 0x30, 0x32, 0x34, 0x32, 0x30, 0x61,\\n 0x30, 0x31, 0x35, 0x65, 0x30, 0x37, 0x30, 0x30,\\n 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x29,\\n 0x30, 0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,\\n 0x20, 0x30, 0x31, 0x36, 0x31, 0x64, 0x62, 0x62,\\n 0x63, 0x64, 0x64, 0x36, 0x36, 0x30, 0x61, 0x35,\\n 0x38, 0x30, 0x61, 0x30, 0x31, 0x30, 0x63, 0x33,\\n 0x34, 0x30, 0x33, 0x63, 0x30, 0x30, 0x30, 0x30,\\n 0x30, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x38, 0x30,\\n 0x32, 0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32,\\n 0x33, 0x5a, 0x17, 0x0d, 0x32, 0x38, 0x30, 0x32,\\n 0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32, 0x33,\\n 0x5a, 0x30, 0x81, 0xa2, 0x31, 0x0b, 0x30, 0x09,\\n 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47,\\n 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55,\\n 0x04, 0x08, 0x0c, 0x0e, 0x43, 0x61, 0x6d, 0x62,\\n 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68, 0x69,\\n 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03,\\n 0x55, 0x04, 0x07, 0x0c, 0x09, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31, 0x10,\\n 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c,\\n 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64,\\n 0x31, 0x29, 0x30, 0x27, 0x06, 0x03, 0x55, 0x04,\\n 0x0b, 0x0c, 0x20, 0x30, 0x31, 0x35, 0x38, 0x34,\\n 0x33, 0x65, 0x33, 0x32, 0x65, 0x63, 0x39, 0x30,\\n 0x32, 0x34, 0x32, 0x30, 0x61, 0x30, 0x31, 0x35,\\n 0x65, 0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x30,\\n 0x30, 0x30, 0x30, 0x31, 0x29, 0x30, 0x27, 0x06,\\n 0x03, 0x55, 0x04, 0x03, 0x0c, 0x20, 0x30, 0x31,\\n 0x36, 0x31, 0x64, 0x62, 0x62, 0x63, 0x64, 0x64,\\n 0x36, 0x36, 0x30, 0x61, 0x35, 0x38, 0x30, 0x61,\\n 0x30, 0x31, 0x30, 0x63, 0x33, 0x34, 0x30, 0x33,\\n 0x63, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x59,\\n 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48,\\n 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00,\\n 0x04, 0x44, 0x9c, 0x2c, 0x36, 0xce, 0x5e, 0xf3,\\n 0x9b, 0xf7, 0x4d, 0xc0, 0x62, 0x52, 0x3d, 0xa3,\\n 0x0f, 0x04, 0xe2, 0x16, 0xcb, 0x48, 0x72, 0x4f,\\n 0xb7, 0x91, 0x36, 0x04, 0xee, 0x10, 0xe1, 0xb1,\\n 0xce, 0xa6, 0xe5, 0x87, 0xd8, 0xe8, 0x7a, 0x3f,\\n 0xe0, 0x83, 0x3e, 0xd7, 0xbd, 0xa4, 0x0b, 0xf7,\\n 0x13, 0xa8, 0x3d, 0xd1, 0x79, 0x3f, 0x65, 0xc6,\\n 0x69, 0x43, 0xec, 0x41, 0x3b, 0xaa, 0x9c, 0x8b,\\n 0xf6, 0xa3, 0x2a, 0x30, 0x28, 0x30, 0x12, 0x06,\\n 0x09, 0x2b, 0x06, 0x01, 0x04, 0x01, 0xa0, 0x20,\\n 0x81, 0x49, 0x04, 0x05, 0x02, 0x03, 0x40, 0x00,\\n 0x91, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13,\\n 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01,\\n 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,\\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\\n 0x00, 0xb2, 0x2f, 0x73, 0x48, 0xaf, 0x0d, 0x8e,\\n 0x5d, 0xb6, 0x1a, 0x81, 0x07, 0xae, 0xc8, 0x3c,\\n 0x42, 0x5c, 0x05, 0x9e, 0xb9, 0x24, 0x3f, 0xd7,\\n 0x7a, 0x17, 0x22, 0xc5, 0xb6, 0x6a, 0xa7, 0x76,\\n 0xde, 0x02, 0x21, 0x00, 0xa6, 0x54, 0x7c, 0x22,\\n 0xb1, 0x83, 0x5c, 0x0a, 0x4a, 0x83, 0xd9, 0x25,\\n 0x9c, 0xb4, 0x6d, 0x71, 0x40, 0x7a, 0x34, 0x1d,\\n 0x97, 0x8f, 0x01, 0x05, 0xbc, 0x3e, 0xcb, 0x4c,\\n 0xce, 0x13, 0x6e, 0xa5 };\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x35, 0x30, 0x82, 0x01, 0xdb,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x5c,\\n 0x27, 0xa5, 0x76, 0x7d, 0x58, 0x85, 0x8a, 0x43,\\n 0x91, 0xa0, 0x61, 0xab, 0xcf, 0xa6, 0x59, 0x30,\\n 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x04, 0x03, 0x02, 0x30, 0x72, 0x31, 0x0b, 0x30,\\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\\n 0x55, 0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,\\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\\n 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a,\\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\\n 0x64, 0x31, 0x24, 0x30, 0x22, 0x06, 0x03, 0x55,\\n 0x04, 0x03, 0x13, 0x1b, 0x41, 0x52, 0x4d, 0x20,\\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\\n 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74,\\n 0x73, 0x74, 0x72, 0x61, 0x70, 0x43, 0x41, 0x30,\\n 0x20, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x35, 0x31,\\n 0x35, 0x31, 0x39, 0x34, 0x39, 0x31, 0x31, 0x5a,\\n 0x18, 0x0f, 0x32, 0x30, 0x35, 0x32, 0x30, 0x35,\\n 0x31, 0x35, 0x31, 0x39, 0x35, 0x39, 0x31, 0x30,\\n 0x5a, 0x30, 0x72, 0x31, 0x0b, 0x30, 0x09, 0x06,\\n 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47, 0x42,\\n 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04,\\n 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d, 0x62, 0x72,\\n 0x69, 0x64, 0x67, 0x65, 0x73, 0x68, 0x69, 0x72,\\n 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55,\\n 0x04, 0x07, 0x13, 0x09, 0x43, 0x61, 0x6d, 0x62,\\n 0x72, 0x69, 0x64, 0x67, 0x65, 0x31, 0x10, 0x30,\\n 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x07,\\n 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64, 0x31,\\n 0x24, 0x30, 0x22, 0x06, 0x03, 0x55, 0x04, 0x03,\\n 0x13, 0x1b, 0x41, 0x52, 0x4d, 0x20, 0x49, 0x6e,\\n 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,\\n 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,\\n 0x72, 0x61, 0x70, 0x43, 0x41, 0x30, 0x59, 0x30,\\n 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04,\\n 0x8b, 0x7c, 0x86, 0xc3, 0x88, 0x54, 0xe6, 0x5f,\\n 0xe0, 0x57, 0x4e, 0x1b, 0xac, 0x29, 0x82, 0xea,\\n 0x7d, 0x91, 0x00, 0x63, 0xa7, 0x4a, 0x05, 0xbc,\\n 0x54, 0xc5, 0x71, 0x27, 0x33, 0x19, 0x1b, 0x2e,\\n 0xfa, 0x41, 0xf8, 0x7a, 0x9a, 0x0c, 0x5d, 0xfc,\\n 0xb3, 0x37, 0x01, 0x99, 0xc5, 0xc9, 0xbe, 0x78,\\n 0x5b, 0x1d, 0xec, 0xb0, 0x1a, 0x1d, 0xdc, 0xe4,\\n 0x6f, 0x57, 0x04, 0xf4, 0x3a, 0xca, 0xa8, 0xd2,\\n 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b, 0x06, 0x03,\\n 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03, 0x02, 0x01,\\n 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13,\\n 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01,\\n 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d,\\n 0x0e, 0x04, 0x16, 0x04, 0x14, 0x13, 0xef, 0x69,\\n 0xfa, 0x62, 0x3f, 0x00, 0x86, 0xf4, 0x05, 0xb8,\\n 0xb6, 0xe6, 0xb2, 0xf1, 0xdb, 0x69, 0x10, 0xb4,\\n 0x39, 0x30, 0x10, 0x06, 0x09, 0x2b, 0x06, 0x01,\\n 0x04, 0x01, 0x82, 0x37, 0x15, 0x01, 0x04, 0x03,\\n 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a,\\n 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,\\n 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xa2,\\n 0x50, 0x88, 0x0f, 0x55, 0xe8, 0x26, 0x49, 0xe6,\\n 0xf5, 0x71, 0x86, 0x33, 0x29, 0x05, 0x4c, 0xf9,\\n 0xfd, 0x1f, 0x14, 0x98, 0x92, 0x85, 0xd9, 0x5c,\\n 0x48, 0x02, 0x9e, 0xc2, 0x79, 0xa8, 0x59, 0x02,\\n 0x20, 0x3e, 0xfe, 0x3c, 0xa0, 0xbf, 0xd3, 0x0f,\\n 0x15, 0x83, 0x56, 0xbc, 0xf2, 0xfa, 0x16, 0x26,\\n 0x7a, 0xc1, 0x68, 0xaa, 0xbc, 0x91, 0x3c, 0x69,\\n 0x44, 0x36, 0xf9, 0x74, 0xa1, 0x82, 0x76, 0x7a,\\n 0x6e };\\n\\nconst uint8_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x30, 0x30, 0x82, 0x01, 0xd5,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x26,\\n 0xf9, 0x08, 0xfc, 0xf1, 0xc0, 0x46, 0xa4, 0x4a,\\n 0x4d, 0x2c, 0xf1, 0x94, 0x27, 0xf9, 0x1f, 0x30,\\n 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x04, 0x03, 0x02, 0x30, 0x6f, 0x31, 0x0b, 0x30,\\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\\n 0x55, 0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,\\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\\n 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a,\\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\\n 0x64, 0x31, 0x21, 0x30, 0x1f, 0x06, 0x03, 0x55,\\n 0x04, 0x03, 0x13, 0x18, 0x41, 0x52, 0x4d, 0x20,\\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\\n 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x57, 0x4d, 0x32,\\n 0x4d, 0x20, 0x43, 0x41, 0x30, 0x20, 0x17, 0x0d,\\n 0x31, 0x37, 0x30, 0x32, 0x31, 0x32, 0x31, 0x30,\\n 0x33, 0x37, 0x35, 0x32, 0x5a, 0x18, 0x0f, 0x32,\\n 0x30, 0x35, 0x32, 0x30, 0x32, 0x31, 0x32, 0x31,\\n 0x30, 0x34, 0x37, 0x35, 0x32, 0x5a, 0x30, 0x6f,\\n 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04,\\n 0x06, 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30,\\n 0x15, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x0e,\\n 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67,\\n 0x65, 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12,\\n 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13,\\n 0x09, 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64,\\n 0x67, 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03,\\n 0x55, 0x04, 0x0a, 0x13, 0x07, 0x41, 0x52, 0x4d,\\n 0x20, 0x4c, 0x74, 0x64, 0x31, 0x21, 0x30, 0x1f,\\n 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x18, 0x41,\\n 0x52, 0x4d, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x67,\\n 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c,\\n 0x57, 0x4d, 0x32, 0x4d, 0x20, 0x43, 0x41, 0x30,\\n 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48,\\n 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86,\\n 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,\\n 0x00, 0x04, 0xba, 0xea, 0x80, 0x01, 0x2d, 0xf0,\\n 0xe1, 0xb6, 0xc5, 0x5f, 0xf9, 0x76, 0x84, 0x31,\\n 0xa9, 0x29, 0xa1, 0xc7, 0xa8, 0xfd, 0xa0, 0xad,\\n 0xd9, 0x94, 0xe7, 0xec, 0x5a, 0x33, 0xa1, 0x2c,\\n 0x8e, 0x36, 0x43, 0x9b, 0x18, 0xdf, 0xce, 0x71,\\n 0x14, 0x24, 0xb1, 0xfb, 0x16, 0x34, 0x0e, 0x43,\\n 0xfc, 0x23, 0x77, 0xd4, 0x13, 0xd7, 0x11, 0xaa,\\n 0x39, 0x60, 0xab, 0xa2, 0xdf, 0x24, 0xb3, 0xeb,\\n 0xa0, 0xc5, 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b,\\n 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03,\\n 0x02, 0x01, 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55,\\n 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30,\\n 0x03, 0x01, 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03,\\n 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7b,\\n 0xa1, 0xa5, 0x94, 0xa5, 0xe5, 0x8f, 0x95, 0x5d,\\n 0xd4, 0xce, 0xdc, 0x0f, 0x8a, 0xbe, 0xad, 0x9a,\\n 0x6b, 0x66, 0x3e, 0x30, 0x10, 0x06, 0x09, 0x2b,\\n 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x15, 0x01,\\n 0x04, 0x03, 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,\\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\\n 0x00, 0xd2, 0x06, 0x28, 0xc5, 0x31, 0x3a, 0x11,\\n 0x8d, 0xb6, 0xcb, 0x2b, 0x3f, 0xdd, 0x2a, 0x9a,\\n 0x13, 0x30, 0x52, 0x77, 0xaa, 0xda, 0xda, 0xcb,\\n 0xce, 0xb9, 0x5c, 0xe4, 0x32, 0x1c, 0x02, 0xfa,\\n 0x30, 0x02, 0x21, 0x00, 0xb3, 0x82, 0x24, 0xa2,\\n 0xb1, 0x67, 0x6b, 0x69, 0x07, 0x0e, 0xcd, 0x77,\\n 0x74, 0x99, 0x06, 0x9c, 0x59, 0xb2, 0x00, 0xc0,\\n 0xb3, 0xbb, 0x37, 0x5b, 0xc0, 0x1b, 0xfb, 0xd9,\\n 0x70, 0x98, 0xb9, 0x1e };\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY[] = \\n{ 0x30, 0x81, 0x93, 0x02, 0x01, 0x00, 0x30, 0x13,\\n 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,\\n 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x03, 0x01, 0x07, 0x04, 0x79, 0x30, 0x77, 0x02,\\n 0x01, 0x01, 0x04, 0x20, 0x78, 0xa7, 0x3d, 0xed,\\n 0xa0, 0xb5, 0x67, 0x86, 0xa7, 0x89, 0x75, 0x46,\\n 0x8c, 0xd4, 0xaf, 0xbd, 0x7c, 0x36, 0x86, 0x5e,\\n 0xb3, 0xc0, 0x00, 0x98, 0x22, 0xcf, 0x3c, 0x38,\\n 0xa4, 0x31, 0xeb, 0x51, 0xa0, 0x0a, 0x06, 0x08,\\n 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,\\n 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x44, 0x9c,\\n 0x2c, 0x36, 0xce, 0x5e, 0xf3, 0x9b, 0xf7, 0x4d,\\n 0xc0, 0x62, 0x52, 0x3d, 0xa3, 0x0f, 0x04, 0xe2,\\n 0x16, 0xcb, 0x48, 0x72, 0x4f, 0xb7, 0x91, 0x36,\\n 0x04, 0xee, 0x10, 0xe1, 0xb1, 0xce, 0xa6, 0xe5,\\n 0x87, 0xd8, 0xe8, 0x7a, 0x3f, 0xe0, 0x83, 0x3e,\\n 0xd7, 0xbd, 0xa4, 0x0b, 0xf7, 0x13, 0xa8, 0x3d,\\n 0xd1, 0x79, 0x3f, 0x65, 0xc6, 0x69, 0x43, 0xec,\\n 0x41, 0x3b, 0xaa, 0x9c, 0x8b, 0xf6 };\\n\\nconst char MBED_CLOUD_DEV_MANUFACTURER[] = \\\"dev_manufacturer\\\";\\n\\nconst char MBED_CLOUD_DEV_MODEL_NUMBER[] = \\\"dev_model_num\\\";\\n\\nconst char MBED_CLOUD_DEV_SERIAL_NUMBER[] = \\\"0\\\";\\n\\nconst char MBED_CLOUD_DEV_DEVICE_TYPE[] = \\\"dev_device_type\\\";\\n\\nconst char MBED_CLOUD_DEV_HARDWARE_VERSION[] = \\\"dev_hardware_version\\\";\\n\\nconst uint32_t MBED_CLOUD_DEV_MEMORY_TOTAL_KB = 0;\\n\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY);\\n\\n#endif //__MBED_CLOUD_DEV_CREDENTIALS_H__\\n",
                  "_key": "Success"
                }
              ],
              "schema": {
                "properties": [
                  {
                    "description": "account to which the developer certificate belongs",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Description for the developer certificate.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "PEM format X.509 developer certificate.",
                    "type": "string",
                    "api_fieldname": "developer_certificate",
                    "entity_fieldname": "certificate",
                    "_key": "developer_certificate"
                  },
                  {
                    "description": "PEM format developer private key associated to the certificate.",
                    "type": "string",
                    "api_fieldname": "developer_private_key",
                    "entity_fieldname": "private_key",
                    "_key": "developer_private_key"
                  },
                  {
                    "description": "API resource entity version.",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "mUUID that uniquely identifies the developer certificate.",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "developerCertificateId",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "Name of the developer certificate.",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name, always 'trusted-cert'",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Content of the security.c file that will be flashed into the device to provide the security credentials",
                    "type": "string",
                    "api_fieldname": "security_file_content",
                    "entity_fieldname": "security_file_content",
                    "_key": "security_file_content"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "subtenant_trusted_certificate"
                }
              },
              "_key": "201"
            },
            {
              "description": "Bad request.",
              "examples": [
                {
                  "code": 400,
                  "fields": {
                    "message": "Missing certificate name",
                    "name": "name"
                  },
                  "message": "Bad Request. Missing certificate name",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "validation_error",
                  "_key": "Bad Request Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "examples": [
                {
                  "code": 401,
                  "message": "Provided access token is not valid.",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "invalid_auth",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "The maximum number of developer certificates for the given account has already been reached.",
              "examples": [
                {
                  "code": 403,
                  "fields": {
                    "message": "10",
                    "name": "cert-count"
                  },
                  "message": "Forbidden. Limit for the number of certificates exceeded.",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "account_limit_exceeded",
                  "_key": "Account Limit Exceeded Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Certificate with the given name already exists.",
              "examples": [
                {
                  "code": 409,
                  "fields": {
                    "message": "Certificate already exists",
                    "name": "certificate"
                  },
                  "message": "Conflict. Certificate already exists.",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "duplicate",
                  "_key": "Duplicate Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "409"
            }
          ],
          "path": "/v3/developer-certificates",
          "summary": "Create a new developer certificate to connect to the bootstrap server.",
          "return_type": "developer_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "developer_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "id",
            "security_file_content",
            "certificate"
          ],
          "group_id": "Security",
          "parameter_map": {
            "developerCertificateId": "id"
          },
          "operation_id": "createDeveloperCertificate",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "An endpoint for deleting a trusted certificate.\n\n**Example usage:**\n`curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "developer_certificate",
              "_key": "certificate"
            },
            {
              "api_fieldname": "developer_private_key",
              "_key": "private_key"
            }
          ],
          "fields": [
            {
              "description": "The ID of the trusted certificate to be deleted.",
              "in": "path",
              "name": "cert_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "cert_id",
              "external_param": false,
              "parameter_fieldname": "cert_id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Deleted successfully.",
              "_key": "204"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Certificate not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/trusted-certificates/{cert_id}",
          "summary": "Delete a trusted certificate by ID.",
          "return_type": "developer_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "developer_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Security",
          "parameter_map": {
            "developerCertificateId": "id",
            "cert_id": "id"
          },
          "operation_id": "deleteCertificate",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "An endpoint for retrieving a trusted certificate by ID.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "developer_certificate",
              "_key": "certificate"
            },
            {
              "api_fieldname": "developer_private_key",
              "_key": "private_key"
            }
          ],
          "fields": [
            {
              "description": "Device execution mode where 1 means a developer certificate.",
              "example": 1,
              "format": "int32",
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "Entity ID.",
              "example": "01619571d01d0242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "cert_id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "get_trusted_certificate_info",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents a trusted certificate in responses.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "X509.v3 trusted certificate in PEM format.",
                    "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                    "type": "string",
                    "api_fieldname": "certificate",
                    "entity_fieldname": "certificate",
                    "_key": "certificate"
                  },
                  {
                    "description": "A SHA-256 fingerprint of the certificate.",
                    "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                    "type": "string",
                    "api_fieldname": "certificate_fingerprint",
                    "entity_fieldname": "certificate_fingerprint",
                    "_key": "certificate_fingerprint"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Human readable description of this certificate.",
                    "example": "Certificate created by me.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "Device execution mode where 1 means a developer certificate.",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                    "private_field": true,
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode",
                    "_key": "device_execution_mode"
                  },
                  {
                    "description": "If true, signature is not required. Default value false.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "enrollment_mode",
                    "entity_fieldname": "enrollment_mode",
                    "_key": "enrollment_mode"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Entity ID.",
                    "example": "01619571d01d0242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Issuer of the certificate.",
                    "example": "CN=issuer",
                    "type": "string",
                    "api_fieldname": "issuer",
                    "entity_fieldname": "issuer",
                    "_key": "issuer"
                  },
                  {
                    "description": "Certificate name.",
                    "example": "My certificate",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'trusted-cert'",
                    "enum": [
                      "trusted-cert"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The ID of the owner.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner_id",
                    "entity_fieldname": "owner_id",
                    "_key": "owner_id"
                  },
                  {
                    "description": "Service name where the certificate is to be used.",
                    "enum": [
                      "lwm2m",
                      "bootstrap"
                    ],
                    "type": "string",
                    "api_fieldname": "service",
                    "entity_fieldname": "service",
                    "_key": "service"
                  },
                  {
                    "description": "Status of the certificate.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Subject of the certificate.",
                    "example": "CN=subject",
                    "type": "string",
                    "api_fieldname": "subject",
                    "entity_fieldname": "subject",
                    "_key": "subject"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "This read-only flag indicates whether the certificate is valid or not.",
                    "example": true,
                    "readOnly": true,
                    "type": "boolean",
                    "api_fieldname": "valid",
                    "entity_fieldname": "valid",
                    "_key": "valid"
                  },
                  {
                    "description": "Expiration time in UTC formatted as RFC3339.",
                    "example": "2038-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "validity",
                    "entity_fieldname": "validity",
                    "_key": "validity"
                  }
                ],
                "required": [
                  "account_id",
                  "certificate",
                  "certificate_fingerprint",
                  "etag",
                  "id",
                  "issuer",
                  "name",
                  "object",
                  "service",
                  "subject",
                  "validity"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Certificate not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/trusted-certificates/{cert_id}",
          "summary": "Get trusted certificate by ID.",
          "return_type": "trusted_certificate",
          "return_info": {
            "self": false,
            "custom": false,
            "type": "trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "certificate",
            "certificate_fingerprint",
            "created_at",
            "description",
            "enrollment_mode",
            "issuer",
            "name",
            "owner_id",
            "service",
            "status",
            "subject",
            "updated_at",
            "valid",
            "validity"
          ],
          "group_id": "Security",
          "parameter_map": {
            "developerCertificateId": "id",
            "cert_id": "id"
          },
          "operation_id": "getCertificate",
          "unaggregated": true,
          "foreign_key": {
            "entity": "trusted_certificate",
            "group": "Security"
          },
          "pagination": false,
          "_key": "get_trusted_certificate_info"
        },
        {
          "description": "This REST API is intended to be used by customers to fetch an existing developer certificate (a certificate that can be flashed into multiple devices to connect to bootstrap server).\n\n**Example usage:**\ncurl -X GET \"http://api.us-east-1.mbedcloud.com/v3/developer-certificates/THE_CERTIFICATE_ID\" -H \"accept: application/json\" -H \"Authorization: Bearer THE_ACCESS_TOKEN\"\n",
          "field_renames": [
            {
              "api_fieldname": "developer_certificate",
              "_key": "certificate"
            },
            {
              "api_fieldname": "developer_private_key",
              "_key": "private_key"
            }
          ],
          "fields": [
            {
              "description": "mUUID that uniquely identifies the developer certificate.",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "developerCertificateId",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Developer certificate fetched successfully.",
              "examples": [
                {
                  "account_id": "015fee5d9b3538c98640fbfb00000000",
                  "created_at": "2017-12-11T14:22:20.009Z",
                  "description": "This certificate will be used with multiple developer devices",
                  "developer_certificate": "-----BEGIN CERTIFICATE-----\\nMIICcDCCAhWgAwIBAgIRAPSBbBtLUE/ekQcWE4GzPJEwCgYIKoZIzj0EAwIwgaIx\\nCzAJBgNVBAYTAkdCMRcwFQYDVQQIDA5DYW1icmlkZ2VzaGlyZTESMBAGA1UEBwwJ\\nQ2FtYnJpZGdlMRAwDgYDVQQKDAdBUk0gTHRkMSkwJwYDVQQLDCAwMTU4NDNlMzJl\\nYzkwMjQyMGEwMTVlMDcwMDAwMDAwMDEpMCcGA1UEAwwgMDE2MWRiYmNkZDY2MGE1\\nODBhMDEwYzM0MDNjMDAwMDAwHhcNMTgwMjI4MDkyNzIzWhcNMjgwMjI4MDkyNzIz\\nWjCBojELMAkGA1UEBhMCR0IxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMRIwEAYD\\nVQQHDAlDYW1icmlkZ2UxEDAOBgNVBAoMB0FSTSBMdGQxKTAnBgNVBAsMIDAxNTg0\\nM2UzMmVjOTAyNDIwYTAxNWUwNzAwMDAwMDAwMSkwJwYDVQQDDCAwMTYxZGJiY2Rk\\nNjYwYTU4MGEwMTBjMzQwM2MwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEScLDbOXvOb903AYlI9ow8E4hbLSHJPt5E2BO4Q4bHOpuWH2Oh6P+CDPte9pAv3\\nE6g90Xk/ZcZpQ+xBO6qci/ajKjAoMBIGCSsGAQQBoCCBSQQFAgNAAJEwEgYDVR0T\\nAQH/BAgwBgEB/wIBADAKBggqhkjOPQQDAgNJADBGAiEAsi9zSK8Njl22GoEHrsg8\\nQlwFnrkkP9d6FyLFtmqndt4CIQCmVHwisYNcCkqD2SWctG1xQHo0HZePAQW8PstM\\nzhNupQ==\\n-----END CERTIFICATE-----\\n",
                  "developer_private_key": "-----BEGIN PRIVATE KEY-----\\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgeKc97aC1Z4aniXVG\\njNSvvXw2hl6zwACYIs88OKQx61GgCgYIKoZIzj0DAQehRANCAAREnCw2zl7zm/dN\\nwGJSPaMPBOIWy0hyT7eRNgTuEOGxzqblh9joej/ggz7XvaQL9xOoPdF5P2XGaUPs\\nQTuqnIv2\\n-----END PRIVATE KEY-----\\n",
                  "etag": "1",
                  "id": "015fee4431fd38c98640fbfb00000000",
                  "name": "DeveloperCertificate",
                  "object": "trusted-cert",
                  "security_file_content": "/*\\n * Copyright (c) 2017 ARM Limited. All rights reserved.\\n * SPDX-License-Identifier: Apache-2.0\\n * Licensed under the Apache License, Version 2.0 (the License); you may\\n * not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an AS IS BASIS, WITHOUT\\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n#ifndef __MBED_CLOUD_DEV_CREDENTIALS_H__\\n#define __MBED_CLOUD_DEV_CREDENTIALS_H__\\n\\n#include <inttypes.h>\\n\\nconst char MBED_CLOUD_DEV_BOOTSTRAP_ENDPOINT_NAME[] = \\\"0161dbbcdd660a580a010c3403c00000\\\";\\nconst char MBED_CLOUD_DEV_ACCOUNT_ID[] = \\\"015843e32ec902420a015e0700000000\\\";\\nconst char MBED_CLOUD_DEV_BOOTSTRAP_SERVER_URI[] = \\\"coaps://coap.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000\\\";\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x70, 0x30, 0x82, 0x02, 0x15,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x11, 0x00,\\n 0xf4, 0x81, 0x6c, 0x1b, 0x4b, 0x50, 0x4f, 0xde,\\n 0x91, 0x07, 0x16, 0x13, 0x81, 0xb3, 0x3c, 0x91,\\n 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x04, 0x03, 0x02, 0x30, 0x81, 0xa2, 0x31,\\n 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,\\n 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30, 0x15,\\n 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0e, 0x43,\\n 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,\\n 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12, 0x30,\\n 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x09,\\n 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67,\\n 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55,\\n 0x04, 0x0a, 0x0c, 0x07, 0x41, 0x52, 0x4d, 0x20,\\n 0x4c, 0x74, 0x64, 0x31, 0x29, 0x30, 0x27, 0x06,\\n 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x20, 0x30, 0x31,\\n 0x35, 0x38, 0x34, 0x33, 0x65, 0x33, 0x32, 0x65,\\n 0x63, 0x39, 0x30, 0x32, 0x34, 0x32, 0x30, 0x61,\\n 0x30, 0x31, 0x35, 0x65, 0x30, 0x37, 0x30, 0x30,\\n 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x29,\\n 0x30, 0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,\\n 0x20, 0x30, 0x31, 0x36, 0x31, 0x64, 0x62, 0x62,\\n 0x63, 0x64, 0x64, 0x36, 0x36, 0x30, 0x61, 0x35,\\n 0x38, 0x30, 0x61, 0x30, 0x31, 0x30, 0x63, 0x33,\\n 0x34, 0x30, 0x33, 0x63, 0x30, 0x30, 0x30, 0x30,\\n 0x30, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x38, 0x30,\\n 0x32, 0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32,\\n 0x33, 0x5a, 0x17, 0x0d, 0x32, 0x38, 0x30, 0x32,\\n 0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32, 0x33,\\n 0x5a, 0x30, 0x81, 0xa2, 0x31, 0x0b, 0x30, 0x09,\\n 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47,\\n 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55,\\n 0x04, 0x08, 0x0c, 0x0e, 0x43, 0x61, 0x6d, 0x62,\\n 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68, 0x69,\\n 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03,\\n 0x55, 0x04, 0x07, 0x0c, 0x09, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31, 0x10,\\n 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c,\\n 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64,\\n 0x31, 0x29, 0x30, 0x27, 0x06, 0x03, 0x55, 0x04,\\n 0x0b, 0x0c, 0x20, 0x30, 0x31, 0x35, 0x38, 0x34,\\n 0x33, 0x65, 0x33, 0x32, 0x65, 0x63, 0x39, 0x30,\\n 0x32, 0x34, 0x32, 0x30, 0x61, 0x30, 0x31, 0x35,\\n 0x65, 0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x30,\\n 0x30, 0x30, 0x30, 0x31, 0x29, 0x30, 0x27, 0x06,\\n 0x03, 0x55, 0x04, 0x03, 0x0c, 0x20, 0x30, 0x31,\\n 0x36, 0x31, 0x64, 0x62, 0x62, 0x63, 0x64, 0x64,\\n 0x36, 0x36, 0x30, 0x61, 0x35, 0x38, 0x30, 0x61,\\n 0x30, 0x31, 0x30, 0x63, 0x33, 0x34, 0x30, 0x33,\\n 0x63, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x59,\\n 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48,\\n 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00,\\n 0x04, 0x44, 0x9c, 0x2c, 0x36, 0xce, 0x5e, 0xf3,\\n 0x9b, 0xf7, 0x4d, 0xc0, 0x62, 0x52, 0x3d, 0xa3,\\n 0x0f, 0x04, 0xe2, 0x16, 0xcb, 0x48, 0x72, 0x4f,\\n 0xb7, 0x91, 0x36, 0x04, 0xee, 0x10, 0xe1, 0xb1,\\n 0xce, 0xa6, 0xe5, 0x87, 0xd8, 0xe8, 0x7a, 0x3f,\\n 0xe0, 0x83, 0x3e, 0xd7, 0xbd, 0xa4, 0x0b, 0xf7,\\n 0x13, 0xa8, 0x3d, 0xd1, 0x79, 0x3f, 0x65, 0xc6,\\n 0x69, 0x43, 0xec, 0x41, 0x3b, 0xaa, 0x9c, 0x8b,\\n 0xf6, 0xa3, 0x2a, 0x30, 0x28, 0x30, 0x12, 0x06,\\n 0x09, 0x2b, 0x06, 0x01, 0x04, 0x01, 0xa0, 0x20,\\n 0x81, 0x49, 0x04, 0x05, 0x02, 0x03, 0x40, 0x00,\\n 0x91, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13,\\n 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01,\\n 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,\\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\\n 0x00, 0xb2, 0x2f, 0x73, 0x48, 0xaf, 0x0d, 0x8e,\\n 0x5d, 0xb6, 0x1a, 0x81, 0x07, 0xae, 0xc8, 0x3c,\\n 0x42, 0x5c, 0x05, 0x9e, 0xb9, 0x24, 0x3f, 0xd7,\\n 0x7a, 0x17, 0x22, 0xc5, 0xb6, 0x6a, 0xa7, 0x76,\\n 0xde, 0x02, 0x21, 0x00, 0xa6, 0x54, 0x7c, 0x22,\\n 0xb1, 0x83, 0x5c, 0x0a, 0x4a, 0x83, 0xd9, 0x25,\\n 0x9c, 0xb4, 0x6d, 0x71, 0x40, 0x7a, 0x34, 0x1d,\\n 0x97, 0x8f, 0x01, 0x05, 0xbc, 0x3e, 0xcb, 0x4c,\\n 0xce, 0x13, 0x6e, 0xa5 };\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x35, 0x30, 0x82, 0x01, 0xdb,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x5c,\\n 0x27, 0xa5, 0x76, 0x7d, 0x58, 0x85, 0x8a, 0x43,\\n 0x91, 0xa0, 0x61, 0xab, 0xcf, 0xa6, 0x59, 0x30,\\n 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x04, 0x03, 0x02, 0x30, 0x72, 0x31, 0x0b, 0x30,\\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\\n 0x55, 0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,\\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\\n 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a,\\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\\n 0x64, 0x31, 0x24, 0x30, 0x22, 0x06, 0x03, 0x55,\\n 0x04, 0x03, 0x13, 0x1b, 0x41, 0x52, 0x4d, 0x20,\\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\\n 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74,\\n 0x73, 0x74, 0x72, 0x61, 0x70, 0x43, 0x41, 0x30,\\n 0x20, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x35, 0x31,\\n 0x35, 0x31, 0x39, 0x34, 0x39, 0x31, 0x31, 0x5a,\\n 0x18, 0x0f, 0x32, 0x30, 0x35, 0x32, 0x30, 0x35,\\n 0x31, 0x35, 0x31, 0x39, 0x35, 0x39, 0x31, 0x30,\\n 0x5a, 0x30, 0x72, 0x31, 0x0b, 0x30, 0x09, 0x06,\\n 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47, 0x42,\\n 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04,\\n 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d, 0x62, 0x72,\\n 0x69, 0x64, 0x67, 0x65, 0x73, 0x68, 0x69, 0x72,\\n 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55,\\n 0x04, 0x07, 0x13, 0x09, 0x43, 0x61, 0x6d, 0x62,\\n 0x72, 0x69, 0x64, 0x67, 0x65, 0x31, 0x10, 0x30,\\n 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x07,\\n 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64, 0x31,\\n 0x24, 0x30, 0x22, 0x06, 0x03, 0x55, 0x04, 0x03,\\n 0x13, 0x1b, 0x41, 0x52, 0x4d, 0x20, 0x49, 0x6e,\\n 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,\\n 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,\\n 0x72, 0x61, 0x70, 0x43, 0x41, 0x30, 0x59, 0x30,\\n 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04,\\n 0x8b, 0x7c, 0x86, 0xc3, 0x88, 0x54, 0xe6, 0x5f,\\n 0xe0, 0x57, 0x4e, 0x1b, 0xac, 0x29, 0x82, 0xea,\\n 0x7d, 0x91, 0x00, 0x63, 0xa7, 0x4a, 0x05, 0xbc,\\n 0x54, 0xc5, 0x71, 0x27, 0x33, 0x19, 0x1b, 0x2e,\\n 0xfa, 0x41, 0xf8, 0x7a, 0x9a, 0x0c, 0x5d, 0xfc,\\n 0xb3, 0x37, 0x01, 0x99, 0xc5, 0xc9, 0xbe, 0x78,\\n 0x5b, 0x1d, 0xec, 0xb0, 0x1a, 0x1d, 0xdc, 0xe4,\\n 0x6f, 0x57, 0x04, 0xf4, 0x3a, 0xca, 0xa8, 0xd2,\\n 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b, 0x06, 0x03,\\n 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03, 0x02, 0x01,\\n 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13,\\n 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01,\\n 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d,\\n 0x0e, 0x04, 0x16, 0x04, 0x14, 0x13, 0xef, 0x69,\\n 0xfa, 0x62, 0x3f, 0x00, 0x86, 0xf4, 0x05, 0xb8,\\n 0xb6, 0xe6, 0xb2, 0xf1, 0xdb, 0x69, 0x10, 0xb4,\\n 0x39, 0x30, 0x10, 0x06, 0x09, 0x2b, 0x06, 0x01,\\n 0x04, 0x01, 0x82, 0x37, 0x15, 0x01, 0x04, 0x03,\\n 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a,\\n 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,\\n 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xa2,\\n 0x50, 0x88, 0x0f, 0x55, 0xe8, 0x26, 0x49, 0xe6,\\n 0xf5, 0x71, 0x86, 0x33, 0x29, 0x05, 0x4c, 0xf9,\\n 0xfd, 0x1f, 0x14, 0x98, 0x92, 0x85, 0xd9, 0x5c,\\n 0x48, 0x02, 0x9e, 0xc2, 0x79, 0xa8, 0x59, 0x02,\\n 0x20, 0x3e, 0xfe, 0x3c, 0xa0, 0xbf, 0xd3, 0x0f,\\n 0x15, 0x83, 0x56, 0xbc, 0xf2, 0xfa, 0x16, 0x26,\\n 0x7a, 0xc1, 0x68, 0xaa, 0xbc, 0x91, 0x3c, 0x69,\\n 0x44, 0x36, 0xf9, 0x74, 0xa1, 0x82, 0x76, 0x7a,\\n 0x6e };\\n\\nconst uint8_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x30, 0x30, 0x82, 0x01, 0xd5,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x26,\\n 0xf9, 0x08, 0xfc, 0xf1, 0xc0, 0x46, 0xa4, 0x4a,\\n 0x4d, 0x2c, 0xf1, 0x94, 0x27, 0xf9, 0x1f, 0x30,\\n 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x04, 0x03, 0x02, 0x30, 0x6f, 0x31, 0x0b, 0x30,\\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\\n 0x55, 0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,\\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\\n 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a,\\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\\n 0x64, 0x31, 0x21, 0x30, 0x1f, 0x06, 0x03, 0x55,\\n 0x04, 0x03, 0x13, 0x18, 0x41, 0x52, 0x4d, 0x20,\\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\\n 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x57, 0x4d, 0x32,\\n 0x4d, 0x20, 0x43, 0x41, 0x30, 0x20, 0x17, 0x0d,\\n 0x31, 0x37, 0x30, 0x32, 0x31, 0x32, 0x31, 0x30,\\n 0x33, 0x37, 0x35, 0x32, 0x5a, 0x18, 0x0f, 0x32,\\n 0x30, 0x35, 0x32, 0x30, 0x32, 0x31, 0x32, 0x31,\\n 0x30, 0x34, 0x37, 0x35, 0x32, 0x5a, 0x30, 0x6f,\\n 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04,\\n 0x06, 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30,\\n 0x15, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x0e,\\n 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67,\\n 0x65, 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12,\\n 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13,\\n 0x09, 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64,\\n 0x67, 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03,\\n 0x55, 0x04, 0x0a, 0x13, 0x07, 0x41, 0x52, 0x4d,\\n 0x20, 0x4c, 0x74, 0x64, 0x31, 0x21, 0x30, 0x1f,\\n 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x18, 0x41,\\n 0x52, 0x4d, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x67,\\n 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c,\\n 0x57, 0x4d, 0x32, 0x4d, 0x20, 0x43, 0x41, 0x30,\\n 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48,\\n 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86,\\n 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,\\n 0x00, 0x04, 0xba, 0xea, 0x80, 0x01, 0x2d, 0xf0,\\n 0xe1, 0xb6, 0xc5, 0x5f, 0xf9, 0x76, 0x84, 0x31,\\n 0xa9, 0x29, 0xa1, 0xc7, 0xa8, 0xfd, 0xa0, 0xad,\\n 0xd9, 0x94, 0xe7, 0xec, 0x5a, 0x33, 0xa1, 0x2c,\\n 0x8e, 0x36, 0x43, 0x9b, 0x18, 0xdf, 0xce, 0x71,\\n 0x14, 0x24, 0xb1, 0xfb, 0x16, 0x34, 0x0e, 0x43,\\n 0xfc, 0x23, 0x77, 0xd4, 0x13, 0xd7, 0x11, 0xaa,\\n 0x39, 0x60, 0xab, 0xa2, 0xdf, 0x24, 0xb3, 0xeb,\\n 0xa0, 0xc5, 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b,\\n 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03,\\n 0x02, 0x01, 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55,\\n 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30,\\n 0x03, 0x01, 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03,\\n 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7b,\\n 0xa1, 0xa5, 0x94, 0xa5, 0xe5, 0x8f, 0x95, 0x5d,\\n 0xd4, 0xce, 0xdc, 0x0f, 0x8a, 0xbe, 0xad, 0x9a,\\n 0x6b, 0x66, 0x3e, 0x30, 0x10, 0x06, 0x09, 0x2b,\\n 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x15, 0x01,\\n 0x04, 0x03, 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,\\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\\n 0x00, 0xd2, 0x06, 0x28, 0xc5, 0x31, 0x3a, 0x11,\\n 0x8d, 0xb6, 0xcb, 0x2b, 0x3f, 0xdd, 0x2a, 0x9a,\\n 0x13, 0x30, 0x52, 0x77, 0xaa, 0xda, 0xda, 0xcb,\\n 0xce, 0xb9, 0x5c, 0xe4, 0x32, 0x1c, 0x02, 0xfa,\\n 0x30, 0x02, 0x21, 0x00, 0xb3, 0x82, 0x24, 0xa2,\\n 0xb1, 0x67, 0x6b, 0x69, 0x07, 0x0e, 0xcd, 0x77,\\n 0x74, 0x99, 0x06, 0x9c, 0x59, 0xb2, 0x00, 0xc0,\\n 0xb3, 0xbb, 0x37, 0x5b, 0xc0, 0x1b, 0xfb, 0xd9,\\n 0x70, 0x98, 0xb9, 0x1e };\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY[] = \\n{ 0x30, 0x81, 0x93, 0x02, 0x01, 0x00, 0x30, 0x13,\\n 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,\\n 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x03, 0x01, 0x07, 0x04, 0x79, 0x30, 0x77, 0x02,\\n 0x01, 0x01, 0x04, 0x20, 0x78, 0xa7, 0x3d, 0xed,\\n 0xa0, 0xb5, 0x67, 0x86, 0xa7, 0x89, 0x75, 0x46,\\n 0x8c, 0xd4, 0xaf, 0xbd, 0x7c, 0x36, 0x86, 0x5e,\\n 0xb3, 0xc0, 0x00, 0x98, 0x22, 0xcf, 0x3c, 0x38,\\n 0xa4, 0x31, 0xeb, 0x51, 0xa0, 0x0a, 0x06, 0x08,\\n 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,\\n 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x44, 0x9c,\\n 0x2c, 0x36, 0xce, 0x5e, 0xf3, 0x9b, 0xf7, 0x4d,\\n 0xc0, 0x62, 0x52, 0x3d, 0xa3, 0x0f, 0x04, 0xe2,\\n 0x16, 0xcb, 0x48, 0x72, 0x4f, 0xb7, 0x91, 0x36,\\n 0x04, 0xee, 0x10, 0xe1, 0xb1, 0xce, 0xa6, 0xe5,\\n 0x87, 0xd8, 0xe8, 0x7a, 0x3f, 0xe0, 0x83, 0x3e,\\n 0xd7, 0xbd, 0xa4, 0x0b, 0xf7, 0x13, 0xa8, 0x3d,\\n 0xd1, 0x79, 0x3f, 0x65, 0xc6, 0x69, 0x43, 0xec,\\n 0x41, 0x3b, 0xaa, 0x9c, 0x8b, 0xf6 };\\n\\nconst char MBED_CLOUD_DEV_MANUFACTURER[] = \\\"dev_manufacturer\\\";\\n\\nconst char MBED_CLOUD_DEV_MODEL_NUMBER[] = \\\"dev_model_num\\\";\\n\\nconst char MBED_CLOUD_DEV_SERIAL_NUMBER[] = \\\"0\\\";\\n\\nconst char MBED_CLOUD_DEV_DEVICE_TYPE[] = \\\"dev_device_type\\\";\\n\\nconst char MBED_CLOUD_DEV_HARDWARE_VERSION[] = \\\"dev_hardware_version\\\";\\n\\nconst uint32_t MBED_CLOUD_DEV_MEMORY_TOTAL_KB = 0;\\n\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY);\\n\\n#endif //__MBED_CLOUD_DEV_CREDENTIALS_H__\\n",
                  "_key": "Success"
                }
              ],
              "schema": {
                "properties": [
                  {
                    "description": "account to which the developer certificate belongs",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Description for the developer certificate.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "PEM format X.509 developer certificate.",
                    "type": "string",
                    "api_fieldname": "developer_certificate",
                    "entity_fieldname": "developer_certificate",
                    "_key": "developer_certificate"
                  },
                  {
                    "description": "PEM format developer private key associated to the certificate.",
                    "type": "string",
                    "api_fieldname": "developer_private_key",
                    "entity_fieldname": "developer_private_key",
                    "_key": "developer_private_key"
                  },
                  {
                    "description": "API resource entity version.",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "mUUID that uniquely identifies the developer certificate.",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the developer certificate.",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name, always 'trusted-cert'",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Content of the security.c file that will be flashed into the device to provide the security credentials",
                    "type": "string",
                    "api_fieldname": "security_file_content",
                    "entity_fieldname": "security_file_content",
                    "_key": "security_file_content"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "examples": [
                {
                  "code": 401,
                  "message": "Provided access token is not valid.",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "invalid_auth",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Developer certificate not found with given id.",
              "examples": [
                {
                  "code": 404,
                  "message": "Not Found. Not found: 016006724ff53ade90ed948d03c00001",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "not_found",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/developer-certificates/{developerCertificateId}",
          "summary": "Fetch an existing developer certificate to connect to the bootstrap server.",
          "return_type": "developer_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "developer_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "description",
            "name",
            "security_file_content",
            "certificate"
          ],
          "group_id": "Security",
          "parameter_map": {
            "developerCertificateId": "id"
          },
          "operation_id": "getDeveloperCertificate",
          "pagination": false,
          "_key": "read"
        }
      ],
      "fields": [
        {
          "description": "account to which the developer certificate belongs",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "PEM format X.509 developer certificate.",
          "type": "string",
          "api_fieldname": "developer_certificate",
          "readOnly": true,
          "required": false,
          "_key": "certificate"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "Description for the developer certificate.",
          "type": "string",
          "api_fieldname": "description",
          "readOnly": false,
          "required": false,
          "_key": "description"
        },
        {
          "description": "mUUID that uniquely identifies the developer certificate.",
          "type": "string",
          "api_fieldname": "id",
          "parameter_fieldname": "developerCertificateId",
          "in": "path",
          "required": true,
          "readOnly": false,
          "_key": "id"
        },
        {
          "description": "Name of the developer certificate.",
          "type": "string",
          "api_fieldname": "name",
          "readOnly": false,
          "required": true,
          "_key": "name"
        },
        {
          "description": "Content of the security.c file that will be flashed into the device to provide the security credentials",
          "type": "string",
          "api_fieldname": "security_file_content",
          "readOnly": true,
          "required": false,
          "_key": "security_file_content"
        }
      ],
      "field_renames": [
        {
          "api_fieldname": "developer_certificate",
          "_key": "certificate"
        },
        {
          "api_fieldname": "developer_private_key",
          "_key": "private_key"
        }
      ],
      "tags": [
        "Developer certificate",
        "Developer"
      ],
      "group_id": "Security",
      "_key": "developer_certificate"
    },
    {
      "swagger_models": [
        "CertificateEnrollment",
        "DeviceData",
        "DeviceDataPostRequest",
        "DeviceDataPutRequest",
        "DevicePage"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "Create a new device.",
          "field_renames": [],
          "fields": [
            {
              "type": "boolean",
              "description": "DEPRECATED: Mark this device for automatic firmware update.",
              "api_fieldname": "auto_update",
              "entity_fieldname": "auto_update",
              "parameter_fieldname": "auto_update",
              "in": "body",
              "required": false,
              "_key": "auto_update"
            },
            {
              "format": "date",
              "type": "string",
              "description": "The expiration date of the certificate used to connect to bootstrap server.",
              "api_fieldname": "bootstrap_expiration_date",
              "entity_fieldname": "bootstrap_expiration_date",
              "parameter_fieldname": "bootstrap_expiration_date",
              "in": "body",
              "required": false,
              "_key": "bootstrap_expiration_date"
            },
            {
              "format": "date-time",
              "example": "2017-05-22T12:37:55.576563Z",
              "type": "string",
              "description": "The timestamp of the device's most recent bootstrap process.",
              "api_fieldname": "bootstrapped_timestamp",
              "entity_fieldname": "bootstrapped_timestamp",
              "parameter_fieldname": "bootstrapped_timestamp",
              "in": "body",
              "required": false,
              "_key": "bootstrapped_timestamp"
            },
            {
              "type": "string",
              "maxLength": 500,
              "description": "The certificate issuer's ID.",
              "example": "00000000000000000000000000000000",
              "api_fieldname": "ca_id",
              "entity_fieldname": "ca_id",
              "parameter_fieldname": "ca_id",
              "in": "body",
              "required": false,
              "_key": "ca_id"
            },
            {
              "format": "date",
              "type": "string",
              "description": "The expiration date of the certificate used to connect to LwM2M server.",
              "api_fieldname": "connector_expiration_date",
              "entity_fieldname": "connector_expiration_date",
              "parameter_fieldname": "connector_expiration_date",
              "in": "body",
              "required": false,
              "_key": "connector_expiration_date"
            },
            {
              "type": "object",
              "maxProperties": 5,
              "additionalProperties": {
                "type": "string",
                "maxLength": 128,
                "pattern": "^[A-Za-z].*"
              },
              "description": "Up to five custom key-value attributes. Note that keys cannot begin with a number. Both keys and values are limited to 128 characters. Updating this field replaces existing contents.",
              "example": {
                "key": "value"
              },
              "api_fieldname": "custom_attributes",
              "entity_fieldname": "custom_attributes",
              "parameter_fieldname": "custom_attributes",
              "in": "body",
              "required": false,
              "_key": "custom_attributes"
            },
            {
              "type": "string",
              "description": "DEPRECATED: The last deployment used on the device.",
              "example": "",
              "api_fieldname": "deployment",
              "entity_fieldname": "deployment",
              "parameter_fieldname": "deployment",
              "in": "body",
              "required": false,
              "_key": "deployment"
            },
            {
              "type": "string",
              "maxLength": 2000,
              "description": "The description of the device.",
              "example": "description",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "type": "string",
              "maxLength": 32,
              "description": "An ID representing the model and hardware revision of the device.",
              "example": "",
              "api_fieldname": "device_class",
              "entity_fieldname": "device_class",
              "parameter_fieldname": "device_class",
              "in": "body",
              "required": false,
              "_key": "device_class"
            },
            {
              "enum": [
                0,
                1,
                5
              ],
              "type": "integer",
              "description": "The execution mode from the certificate of the device. Defaults to inheriting from host_gateway device.\nPermitted values:\n  - 0 - unspecified execution mode (default if host_gateway invalid or not set)\n  - 1 - development devices\n  - 5 - production devices",
              "example": 0,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "parameter_fieldname": "device_execution_mode",
              "in": "body",
              "required": false,
              "_key": "device_execution_mode"
            },
            {
              "type": "string",
              "maxLength": 512,
              "description": "The fingerprint of the device certificate.",
              "example": "00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00",
              "api_fieldname": "device_key",
              "entity_fieldname": "device_key",
              "parameter_fieldname": "device_key",
              "in": "body",
              "required": false,
              "_key": "device_key"
            },
            {
              "type": "string",
              "description": "The endpoint name given to the device.",
              "example": "00000000-0000-0000-0000-000000000000",
              "readOnly": true,
              "api_fieldname": "endpoint_name",
              "entity_fieldname": "endpoint_name",
              "parameter_fieldname": "endpoint_name",
              "in": "body",
              "required": false,
              "_key": "endpoint_name"
            },
            {
              "type": "string",
              "description": "The endpoint type of the device. For example, the device is a gateway.",
              "maxLength": 64,
              "example": "",
              "api_fieldname": "endpoint_type",
              "entity_fieldname": "endpoint_type",
              "parameter_fieldname": "endpoint_type",
              "in": "body",
              "required": false,
              "_key": "endpoint_type"
            },
            {
              "type": "string",
              "description": "The SHA256 checksum of the current firmware image.",
              "example": "0000000000000000000000000000000000000000000000000000000000000000",
              "api_fieldname": "firmware_checksum",
              "entity_fieldname": "firmware_checksum",
              "parameter_fieldname": "firmware_checksum",
              "in": "body",
              "required": false,
              "_key": "firmware_checksum"
            },
            {
              "type": "string",
              "description": "The `endpoint_name` of the host gateway, if appropriate.",
              "example": "",
              "api_fieldname": "host_gateway",
              "entity_fieldname": "host_gateway",
              "parameter_fieldname": "host_gateway",
              "in": "body",
              "required": false,
              "_key": "host_gateway"
            },
            {
              "type": "string",
              "pattern": "[A-Fa-f0-9]{64}",
              "description": "SHA256 fingerprint of the certificate used to validate the signature of the device certificate.",
              "example": "C42EDEFC75871E4CE2146FCDA67D03DDA05CC26FDF93B17B55F42C1EADFDC322",
              "api_fieldname": "issuer_fingerprint",
              "entity_fieldname": "issuer_fingerprint",
              "parameter_fieldname": "issuer_fingerprint",
              "in": "body",
              "required": false,
              "_key": "issuer_fingerprint"
            },
            {
              "type": "string",
              "description": "DEPRECATED: The URL for the current device manifest.",
              "example": "",
              "api_fieldname": "manifest",
              "entity_fieldname": "manifest",
              "parameter_fieldname": "manifest",
              "in": "body",
              "required": false,
              "_key": "manifest"
            },
            {
              "enum": [
                "connector",
                "direct"
              ],
              "type": "string",
              "description": "The ID of the channel used to communicate with the device.",
              "api_fieldname": "mechanism",
              "entity_fieldname": "mechanism",
              "parameter_fieldname": "mechanism",
              "in": "body",
              "required": false,
              "enum_reference": "device_mechanism_enum",
              "_key": "mechanism"
            },
            {
              "type": "string",
              "description": "The address of the connector to use.",
              "example": "",
              "api_fieldname": "mechanism_url",
              "entity_fieldname": "mechanism_url",
              "parameter_fieldname": "mechanism_url",
              "in": "body",
              "required": false,
              "_key": "mechanism_url"
            },
            {
              "type": "string",
              "maxLength": 128,
              "description": "The name of the device.",
              "example": "00000000-0000-0000-0000-000000000000",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": false,
              "_key": "name"
            },
            {
              "type": "string",
              "description": "The serial number of the device.",
              "example": "00000000-0000-0000-0000-000000000000",
              "api_fieldname": "serial_number",
              "entity_fieldname": "serial_number",
              "parameter_fieldname": "serial_number",
              "in": "body",
              "required": false,
              "_key": "serial_number"
            },
            {
              "enum": [
                "unenrolled",
                "cloud_enrolling",
                "bootstrapped",
                "registered",
                "deregistered"
              ],
              "type": "string",
              "description": "The current state of the device.",
              "api_fieldname": "state",
              "entity_fieldname": "state",
              "parameter_fieldname": "state",
              "in": "body",
              "required": false,
              "enum_reference": "device_state_enum",
              "_key": "state"
            },
            {
              "type": "string",
              "description": "The device vendor ID.",
              "example": "00000000-0000-0000-0000-000000000000",
              "api_fieldname": "vendor_id",
              "entity_fieldname": "vendor_id",
              "parameter_fieldname": "vendor_id",
              "in": "body",
              "required": false,
              "_key": "vendor_id"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "Device created.",
              "schema": [
                {
                  "group": "Devices",
                  "entity": "device",
                  "_key": "foreign_key"
                },
                {
                  "groups": {
                    "description": "An array containing an ID of each group this device belongs to.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "00000000000000000000000000000000"
                    },
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups"
                  },
                  "issuer_fingerprint": {
                    "type": "string",
                    "pattern": "[A-Fa-f0-9]{64}",
                    "description": "SHA256 fingerprint of the certificate used to validate the signature of the device certificate.",
                    "example": "C42EDEFC75871E4CE2146FCDA67D03DDA05CC26FDF93B17B55F42C1EADFDC322",
                    "api_fieldname": "issuer_fingerprint",
                    "entity_fieldname": "issuer_fingerprint"
                  },
                  "operator_suspended": {
                    "type": "boolean",
                    "description": "Is the device suspended by the operator?",
                    "api_fieldname": "operator_suspended",
                    "entity_fieldname": "operator_suspended"
                  },
                  "last_operator_suspended_category": {
                    "type": "string",
                    "description": "The reference of the block category.",
                    "pattern": "[a-f0-9_]{32}",
                    "example": "maintenance",
                    "api_fieldname": "last_operator_suspended_category",
                    "entity_fieldname": "last_operator_suspended_category"
                  },
                  "last_operator_suspended_description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The most recent description why the device was suspended or returned to service.",
                    "example": "Suspended for maintenance.",
                    "api_fieldname": "last_operator_suspended_description",
                    "entity_fieldname": "last_operator_suspended_description"
                  },
                  "last_operator_suspended_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of the most recent suspension activity.",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "api_fieldname": "last_operator_suspended_updated_at",
                    "entity_fieldname": "last_operator_suspended_updated_at"
                  },
                  "system_suspended": {
                    "type": "boolean",
                    "description": "Is the device suspended by the system?",
                    "api_fieldname": "system_suspended",
                    "entity_fieldname": "system_suspended"
                  },
                  "last_system_suspended_category": {
                    "type": "string",
                    "description": "The reference of the block category.",
                    "pattern": "[a-f0-9_]{32}",
                    "example": "maintenance",
                    "api_fieldname": "last_system_suspended_category",
                    "entity_fieldname": "last_system_suspended_category"
                  },
                  "last_system_suspended_description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The most recent description of why the device was blocked or unblocked by the system.",
                    "example": "A certificate in the device's certificate chain was blacklisted by the system.",
                    "api_fieldname": "last_system_suspended_description",
                    "entity_fieldname": "last_system_suspended_description"
                  },
                  "last_system_suspended_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of the most recent system block activity.",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "api_fieldname": "last_system_suspended_updated_at",
                    "entity_fieldname": "last_system_suspended_updated_at"
                  },
                  "lifecycle_status": {
                    "type": "string",
                    "enum": [
                      "enabled",
                      "blocked"
                    ],
                    "description": "The lifecycle status of the device.",
                    "example": "enabled",
                    "api_fieldname": "lifecycle_status",
                    "entity_fieldname": "lifecycle_status"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "The ID of the associated account.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id"
                  },
                  "device_execution_mode": {
                    "enum": [
                      0,
                      1,
                      5
                    ],
                    "type": "integer",
                    "description": "The execution mode from the certificate of the device. Defaults to inheriting from host_gateway device.\nPermitted values:\n  - 0 - unspecified execution mode (default if host_gateway invalid or not set)\n  - 1 - development devices\n  - 5 - production devices",
                    "example": 0,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode"
                  },
                  "auto_update": {
                    "type": "boolean",
                    "description": "DEPRECATED: Mark this device for automatic firmware update.",
                    "api_fieldname": "auto_update",
                    "entity_fieldname": "auto_update"
                  },
                  "bootstrap_expiration_date": {
                    "format": "date",
                    "type": "string",
                    "description": "The expiration date of the certificate used to connect to bootstrap server.",
                    "api_fieldname": "bootstrap_expiration_date",
                    "entity_fieldname": "bootstrap_expiration_date"
                  },
                  "bootstrapped_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of the device's most recent bootstrap process.",
                    "api_fieldname": "bootstrapped_timestamp",
                    "entity_fieldname": "bootstrapped_timestamp"
                  },
                  "ca_id": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "The certificate issuer's ID.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "ca_id",
                    "entity_fieldname": "ca_id"
                  },
                  "connector_expiration_date": {
                    "format": "date",
                    "type": "string",
                    "description": "The expiration date of the certificate used to connect to LwM2M server.",
                    "api_fieldname": "connector_expiration_date",
                    "entity_fieldname": "connector_expiration_date"
                  },
                  "created_at": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of when the device was created in the device directory.",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at"
                  },
                  "custom_attributes": {
                    "type": "object",
                    "maxProperties": 5,
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 128,
                      "pattern": "^[A-Za-z].*"
                    },
                    "description": "Up to five custom key-value attributes. Note that keys cannot begin with a number. Both keys and values are limited to 128 characters. Updating this field replaces existing contents.",
                    "example": {
                      "key": "value"
                    },
                    "api_fieldname": "custom_attributes",
                    "entity_fieldname": "custom_attributes"
                  },
                  "deployed_state": {
                    "enum": [
                      "development",
                      "production"
                    ],
                    "type": "string",
                    "description": "DEPRECATED: The state of the device's deployment.",
                    "api_fieldname": "deployed_state",
                    "entity_fieldname": "deployed_state"
                  },
                  "deployment": {
                    "type": "string",
                    "description": "DEPRECATED: The last deployment used on the device.",
                    "example": "",
                    "api_fieldname": "deployment",
                    "entity_fieldname": "deployment"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The description of the device.",
                    "example": "description",
                    "api_fieldname": "description",
                    "entity_fieldname": "description"
                  },
                  "device_class": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "An ID representing the model and hardware revision of the device.",
                    "example": "",
                    "api_fieldname": "device_class",
                    "entity_fieldname": "device_class"
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the device. The device ID is used across all Device Management APIs.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "id",
                    "entity_fieldname": "id"
                  },
                  "device_key": {
                    "type": "string",
                    "maxLength": 512,
                    "description": "The fingerprint of the device certificate.",
                    "example": "00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00",
                    "api_fieldname": "device_key",
                    "entity_fieldname": "device_key"
                  },
                  "endpoint_name": {
                    "type": "string",
                    "description": "The endpoint name given to the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "readOnly": true,
                    "api_fieldname": "endpoint_name",
                    "entity_fieldname": "endpoint_name"
                  },
                  "endpoint_type": {
                    "type": "string",
                    "description": "The endpoint type of the device. For example, the device is a gateway.",
                    "maxLength": 64,
                    "example": "",
                    "api_fieldname": "endpoint_type",
                    "entity_fieldname": "endpoint_type"
                  },
                  "etag": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The entity instance signature.",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag"
                  },
                  "firmware_checksum": {
                    "type": "string",
                    "description": "The SHA256 checksum of the current firmware image.",
                    "example": "0000000000000000000000000000000000000000000000000000000000000000",
                    "api_fieldname": "firmware_checksum",
                    "entity_fieldname": "firmware_checksum"
                  },
                  "host_gateway": {
                    "type": "string",
                    "description": "The `endpoint_name` of the host gateway, if appropriate.",
                    "example": "",
                    "api_fieldname": "host_gateway",
                    "entity_fieldname": "host_gateway"
                  },
                  "manifest": {
                    "type": "string",
                    "description": "DEPRECATED: The URL for the current device manifest.",
                    "example": "",
                    "api_fieldname": "manifest",
                    "entity_fieldname": "manifest"
                  },
                  "manifest_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of the current manifest version.",
                    "api_fieldname": "manifest_timestamp",
                    "entity_fieldname": "manifest_timestamp"
                  },
                  "mechanism": {
                    "enum": [
                      "connector",
                      "direct"
                    ],
                    "type": "string",
                    "description": "The ID of the channel used to communicate with the device.",
                    "api_fieldname": "mechanism",
                    "entity_fieldname": "mechanism"
                  },
                  "mechanism_url": {
                    "type": "string",
                    "description": "The address of the connector to use.",
                    "example": "",
                    "api_fieldname": "mechanism_url",
                    "entity_fieldname": "mechanism_url"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "The name of the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "name",
                    "entity_fieldname": "name"
                  },
                  "object": {
                    "type": "string",
                    "description": "The API resource entity.",
                    "example": "device",
                    "api_fieldname": "object",
                    "entity_fieldname": "object"
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "The serial number of the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "serial_number",
                    "entity_fieldname": "serial_number"
                  },
                  "state": {
                    "enum": [
                      "unenrolled",
                      "cloud_enrolling",
                      "bootstrapped",
                      "registered",
                      "deregistered"
                    ],
                    "type": "string",
                    "description": "The current state of the device.",
                    "api_fieldname": "state",
                    "entity_fieldname": "state"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The time the object was updated.",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at"
                  },
                  "vendor_id": {
                    "type": "string",
                    "description": "The device vendor ID.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "vendor_id",
                    "entity_fieldname": "vendor_id"
                  },
                  "enrolment_list_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The claim date/time.",
                    "api_fieldname": "enrolment_list_timestamp",
                    "entity_fieldname": "enrolment_list_timestamp"
                  },
                  "_key": "properties"
                }
              ],
              "_key": "201"
            },
            {
              "description": "Validation error: The data used to create the device did not validate.\n",
              "_key": "400"
            },
            {
              "description": "Not authenticated.",
              "_key": "401"
            },
            {
              "description": "Account limit reached. Could not create device.",
              "_key": "403"
            },
            {
              "description": "Unique-constrained fields are used by other resources.",
              "_key": "409"
            }
          ],
          "path": "/v3/devices/",
          "summary": "Create a device",
          "return_type": "device",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "operator_suspended",
            "last_operator_suspended_category",
            "last_operator_suspended_description",
            "last_operator_suspended_updated_at",
            "system_suspended",
            "last_system_suspended_category",
            "last_system_suspended_description",
            "last_system_suspended_updated_at",
            "lifecycle_status",
            "account_id",
            "created_at",
            "deployed_state",
            "id",
            "manifest_timestamp",
            "updated_at",
            "enrolment_list_timestamp"
          ],
          "group_id": "Devices",
          "operation_id": "Device_create",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "Delete device. Only available for devices with a developer certificate. Attempts to delete a device with a production certicate will return a 400 response.",
          "field_renames": [],
          "fields": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "id",
              "external_param": false,
              "parameter_fieldname": "id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Device deleted.",
              "_key": "204"
            },
            {
              "description": "Bad Request.",
              "_key": "400"
            },
            {
              "description": "Not authenticated.",
              "_key": "401"
            },
            {
              "description": "Unable to delete device because it can't be found.",
              "_key": "404"
            }
          ],
          "path": "/v3/devices/{id}/",
          "summary": "Delete a device.",
          "return_type": "device",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Devices",
          "operation_id": "Device_destroy",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "List all devices.",
          "field_renames": [],
          "fields": [
            {
              "type": "string",
              "description": "The ID of The item after which to retrieve the next page.",
              "example": "01631667477600000000000100100374",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "external_param": true,
              "parameter_fieldname": "after",
              "required": false,
              "_key": "after"
            },
            {
              "description": "Comma-separated list of data fields to return. Currently supported: `total_count`.",
              "in": "query",
              "name": "include",
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "required": false,
              "_key": "include"
            },
            {
              "type": "integer",
              "description": "How many objects to retrieve in the page. The minimum limit is 2 and the maximum is 1000. Limit values outside of this range are set to the closest limit.",
              "example": 50,
              "minimum": 2,
              "maximum": 1000,
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "in": "query",
              "name": "limit",
              "external_param": true,
              "parameter_fieldname": "limit",
              "required": false,
              "_key": "limit"
            },
            {
              "type": "string",
              "description": "The order of the records based on creation time, `ASC` or `DESC`; by default `ASC`.",
              "example": "DESC",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "in": "query",
              "name": "order",
              "external_param": true,
              "parameter_fieldname": "order",
              "required": false,
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "Request successful.",
              "schema": {
                "properties": [
                  {
                    "type": "string",
                    "description": "An offset token for current page.",
                    "example": "01631667477600000000000100100374",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "items": [
                      {
                        "group": "Devices",
                        "entity": "device",
                        "_key": "foreign_key"
                      },
                      {
                        "groups": {
                          "description": "An array containing an ID of each group this device belongs to.",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "00000000000000000000000000000000"
                          }
                        },
                        "issuer_fingerprint": {
                          "type": "string",
                          "pattern": "[A-Fa-f0-9]{64}",
                          "description": "SHA256 fingerprint of the certificate used to validate the signature of the device certificate.",
                          "example": "C42EDEFC75871E4CE2146FCDA67D03DDA05CC26FDF93B17B55F42C1EADFDC322"
                        },
                        "operator_suspended": {
                          "type": "boolean",
                          "description": "Is the device suspended by the operator?"
                        },
                        "last_operator_suspended_category": {
                          "type": "string",
                          "description": "The reference of the block category.",
                          "pattern": "[a-f0-9_]{32}",
                          "example": "maintenance"
                        },
                        "last_operator_suspended_description": {
                          "type": "string",
                          "maxLength": 2000,
                          "description": "The most recent description why the device was suspended or returned to service.",
                          "example": "Suspended for maintenance."
                        },
                        "last_operator_suspended_updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of the most recent suspension activity.",
                          "example": "2017-05-22T12:37:55.576563Z"
                        },
                        "system_suspended": {
                          "type": "boolean",
                          "description": "Is the device suspended by the system?"
                        },
                        "last_system_suspended_category": {
                          "type": "string",
                          "description": "The reference of the block category.",
                          "pattern": "[a-f0-9_]{32}",
                          "example": "maintenance"
                        },
                        "last_system_suspended_description": {
                          "type": "string",
                          "maxLength": 2000,
                          "description": "The most recent description of why the device was blocked or unblocked by the system.",
                          "example": "A certificate in the device's certificate chain was blacklisted by the system."
                        },
                        "last_system_suspended_updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of the most recent system block activity.",
                          "example": "2017-05-22T12:37:55.576563Z"
                        },
                        "lifecycle_status": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "blocked"
                          ],
                          "description": "The lifecycle status of the device.",
                          "example": "enabled"
                        },
                        "account_id": {
                          "type": "string",
                          "description": "The ID of the associated account.",
                          "example": "00000000000000000000000000000000"
                        },
                        "device_execution_mode": {
                          "enum": [
                            0,
                            1,
                            5
                          ],
                          "type": "integer",
                          "description": "The execution mode from the certificate of the device. Defaults to inheriting from host_gateway device.\nPermitted values:\n  - 0 - unspecified execution mode (default if host_gateway invalid or not set)\n  - 1 - development devices\n  - 5 - production devices",
                          "example": 0
                        },
                        "auto_update": {
                          "type": "boolean",
                          "description": "DEPRECATED: Mark this device for automatic firmware update."
                        },
                        "bootstrap_expiration_date": {
                          "format": "date",
                          "type": "string",
                          "description": "The expiration date of the certificate used to connect to bootstrap server."
                        },
                        "bootstrapped_timestamp": {
                          "format": "date-time",
                          "example": "2017-05-22T12:37:55.576563Z",
                          "type": "string",
                          "description": "The timestamp of the device's most recent bootstrap process."
                        },
                        "ca_id": {
                          "type": "string",
                          "maxLength": 500,
                          "description": "The certificate issuer's ID.",
                          "example": "00000000000000000000000000000000"
                        },
                        "connector_expiration_date": {
                          "format": "date",
                          "type": "string",
                          "description": "The expiration date of the certificate used to connect to LwM2M server."
                        },
                        "created_at": {
                          "format": "date-time",
                          "example": "2017-05-22T12:37:55.576563Z",
                          "type": "string",
                          "description": "The timestamp of when the device was created in the device directory."
                        },
                        "custom_attributes": {
                          "type": "object",
                          "maxProperties": 5,
                          "additionalProperties": {
                            "type": "string",
                            "maxLength": 128,
                            "pattern": "^[A-Za-z].*"
                          },
                          "description": "Up to five custom key-value attributes. Note that keys cannot begin with a number. Both keys and values are limited to 128 characters. Updating this field replaces existing contents.",
                          "example": {
                            "key": "value"
                          }
                        },
                        "deployed_state": {
                          "enum": [
                            "development",
                            "production"
                          ],
                          "type": "string",
                          "description": "DEPRECATED: The state of the device's deployment."
                        },
                        "deployment": {
                          "type": "string",
                          "description": "DEPRECATED: The last deployment used on the device.",
                          "example": ""
                        },
                        "description": {
                          "type": "string",
                          "maxLength": 2000,
                          "description": "The description of the device.",
                          "example": "description"
                        },
                        "device_class": {
                          "type": "string",
                          "maxLength": 32,
                          "description": "An ID representing the model and hardware revision of the device.",
                          "example": ""
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the device. The device ID is used across all Device Management APIs.",
                          "example": "00000000000000000000000000000000"
                        },
                        "device_key": {
                          "type": "string",
                          "maxLength": 512,
                          "description": "The fingerprint of the device certificate.",
                          "example": "00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00"
                        },
                        "endpoint_name": {
                          "type": "string",
                          "description": "The endpoint name given to the device.",
                          "example": "00000000-0000-0000-0000-000000000000",
                          "readOnly": true
                        },
                        "endpoint_type": {
                          "type": "string",
                          "description": "The endpoint type of the device. For example, the device is a gateway.",
                          "maxLength": 64,
                          "example": ""
                        },
                        "etag": {
                          "format": "date-time",
                          "example": "2017-05-22T12:37:55.576563Z",
                          "type": "string",
                          "description": "The entity instance signature."
                        },
                        "firmware_checksum": {
                          "type": "string",
                          "description": "The SHA256 checksum of the current firmware image.",
                          "example": "0000000000000000000000000000000000000000000000000000000000000000"
                        },
                        "host_gateway": {
                          "type": "string",
                          "description": "The `endpoint_name` of the host gateway, if appropriate.",
                          "example": ""
                        },
                        "manifest": {
                          "type": "string",
                          "description": "DEPRECATED: The URL for the current device manifest.",
                          "example": ""
                        },
                        "manifest_timestamp": {
                          "format": "date-time",
                          "example": "2017-05-22T12:37:55.576563Z",
                          "type": "string",
                          "description": "The timestamp of the current manifest version."
                        },
                        "mechanism": {
                          "enum": [
                            "connector",
                            "direct"
                          ],
                          "type": "string",
                          "description": "The ID of the channel used to communicate with the device."
                        },
                        "mechanism_url": {
                          "type": "string",
                          "description": "The address of the connector to use.",
                          "example": ""
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 128,
                          "description": "The name of the device.",
                          "example": "00000000-0000-0000-0000-000000000000"
                        },
                        "object": {
                          "type": "string",
                          "description": "The API resource entity.",
                          "example": "device"
                        },
                        "serial_number": {
                          "type": "string",
                          "description": "The serial number of the device.",
                          "example": "00000000-0000-0000-0000-000000000000"
                        },
                        "state": {
                          "enum": [
                            "unenrolled",
                            "cloud_enrolling",
                            "bootstrapped",
                            "registered",
                            "deregistered"
                          ],
                          "type": "string",
                          "description": "The current state of the device."
                        },
                        "updated_at": {
                          "format": "date-time",
                          "example": "2017-05-22T12:37:55.576563Z",
                          "type": "string",
                          "description": "The time the object was updated."
                        },
                        "vendor_id": {
                          "type": "string",
                          "description": "The device vendor ID.",
                          "example": "00000000-0000-0000-0000-000000000000"
                        },
                        "enrolment_list_timestamp": {
                          "format": "date-time",
                          "example": "2017-05-22T12:37:55.576563Z",
                          "type": "string",
                          "description": "The claim date/time."
                        },
                        "_key": "properties"
                      }
                    ],
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "type": "boolean",
                    "description": "Are there more results available.",
                    "example": false,
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "type": "integer",
                    "description": "How many objects to retrieve in the page. The minimum limit is 2 and the maximum is 1000. Limit values outside of this range are set to the closest limit.",
                    "example": 50,
                    "minimum": 2,
                    "maximum": 1000,
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "type": "string",
                    "description": "The type of this API object is a \"list\".",
                    "example": "list",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "The order of the records based on creation time, `ASC` or `DESC`; by default `ASC`.",
                    "example": "DESC",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "format": "integer",
                    "type": "integer",
                    "example": 1,
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "pagination": true,
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad Request.",
              "_key": "400"
            },
            {
              "description": "Not authenticated.",
              "_key": "401"
            },
            {
              "description": "Unable to find page.",
              "_key": "404"
            }
          ],
          "path": "/v3/devices/",
          "summary": "List all devices.",
          "return_type": "paginated_response(device)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count"
          ],
          "foreign_key_priority": "self",
          "group_id": "Devices",
          "operation_id": "Device_list",
          "pagination": true,
          "foreign_key": {
            "group": "Devices",
            "entity": "device",
            "_key": "foreign_key"
          },
          "_key": "list"
        },
        {
          "description": "Retrieve information about a specific device.",
          "field_renames": [],
          "fields": [
            {
              "type": "string",
              "description": "The ID of the device. The device ID is used across all Device Management APIs.",
              "example": "00000000000000000000000000000000",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Retrieved result successfully.",
              "schema": [
                {
                  "group": "Devices",
                  "entity": "device",
                  "_key": "foreign_key"
                },
                {
                  "groups": {
                    "description": "An array containing an ID of each group this device belongs to.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "00000000000000000000000000000000"
                    },
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups"
                  },
                  "issuer_fingerprint": {
                    "type": "string",
                    "pattern": "[A-Fa-f0-9]{64}",
                    "description": "SHA256 fingerprint of the certificate used to validate the signature of the device certificate.",
                    "example": "C42EDEFC75871E4CE2146FCDA67D03DDA05CC26FDF93B17B55F42C1EADFDC322",
                    "api_fieldname": "issuer_fingerprint",
                    "entity_fieldname": "issuer_fingerprint"
                  },
                  "operator_suspended": {
                    "type": "boolean",
                    "description": "Is the device suspended by the operator?",
                    "api_fieldname": "operator_suspended",
                    "entity_fieldname": "operator_suspended"
                  },
                  "last_operator_suspended_category": {
                    "type": "string",
                    "description": "The reference of the block category.",
                    "pattern": "[a-f0-9_]{32}",
                    "example": "maintenance",
                    "api_fieldname": "last_operator_suspended_category",
                    "entity_fieldname": "last_operator_suspended_category"
                  },
                  "last_operator_suspended_description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The most recent description why the device was suspended or returned to service.",
                    "example": "Suspended for maintenance.",
                    "api_fieldname": "last_operator_suspended_description",
                    "entity_fieldname": "last_operator_suspended_description"
                  },
                  "last_operator_suspended_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of the most recent suspension activity.",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "api_fieldname": "last_operator_suspended_updated_at",
                    "entity_fieldname": "last_operator_suspended_updated_at"
                  },
                  "system_suspended": {
                    "type": "boolean",
                    "description": "Is the device suspended by the system?",
                    "api_fieldname": "system_suspended",
                    "entity_fieldname": "system_suspended"
                  },
                  "last_system_suspended_category": {
                    "type": "string",
                    "description": "The reference of the block category.",
                    "pattern": "[a-f0-9_]{32}",
                    "example": "maintenance",
                    "api_fieldname": "last_system_suspended_category",
                    "entity_fieldname": "last_system_suspended_category"
                  },
                  "last_system_suspended_description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The most recent description of why the device was blocked or unblocked by the system.",
                    "example": "A certificate in the device's certificate chain was blacklisted by the system.",
                    "api_fieldname": "last_system_suspended_description",
                    "entity_fieldname": "last_system_suspended_description"
                  },
                  "last_system_suspended_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of the most recent system block activity.",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "api_fieldname": "last_system_suspended_updated_at",
                    "entity_fieldname": "last_system_suspended_updated_at"
                  },
                  "lifecycle_status": {
                    "type": "string",
                    "enum": [
                      "enabled",
                      "blocked"
                    ],
                    "description": "The lifecycle status of the device.",
                    "example": "enabled",
                    "api_fieldname": "lifecycle_status",
                    "entity_fieldname": "lifecycle_status"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "The ID of the associated account.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id"
                  },
                  "device_execution_mode": {
                    "enum": [
                      0,
                      1,
                      5
                    ],
                    "type": "integer",
                    "description": "The execution mode from the certificate of the device. Defaults to inheriting from host_gateway device.\nPermitted values:\n  - 0 - unspecified execution mode (default if host_gateway invalid or not set)\n  - 1 - development devices\n  - 5 - production devices",
                    "example": 0,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode"
                  },
                  "auto_update": {
                    "type": "boolean",
                    "description": "DEPRECATED: Mark this device for automatic firmware update.",
                    "api_fieldname": "auto_update",
                    "entity_fieldname": "auto_update"
                  },
                  "bootstrap_expiration_date": {
                    "format": "date",
                    "type": "string",
                    "description": "The expiration date of the certificate used to connect to bootstrap server.",
                    "api_fieldname": "bootstrap_expiration_date",
                    "entity_fieldname": "bootstrap_expiration_date"
                  },
                  "bootstrapped_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of the device's most recent bootstrap process.",
                    "api_fieldname": "bootstrapped_timestamp",
                    "entity_fieldname": "bootstrapped_timestamp"
                  },
                  "ca_id": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "The certificate issuer's ID.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "ca_id",
                    "entity_fieldname": "ca_id"
                  },
                  "connector_expiration_date": {
                    "format": "date",
                    "type": "string",
                    "description": "The expiration date of the certificate used to connect to LwM2M server.",
                    "api_fieldname": "connector_expiration_date",
                    "entity_fieldname": "connector_expiration_date"
                  },
                  "created_at": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of when the device was created in the device directory.",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at"
                  },
                  "custom_attributes": {
                    "type": "object",
                    "maxProperties": 5,
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 128,
                      "pattern": "^[A-Za-z].*"
                    },
                    "description": "Up to five custom key-value attributes. Note that keys cannot begin with a number. Both keys and values are limited to 128 characters. Updating this field replaces existing contents.",
                    "example": {
                      "key": "value"
                    },
                    "api_fieldname": "custom_attributes",
                    "entity_fieldname": "custom_attributes"
                  },
                  "deployed_state": {
                    "enum": [
                      "development",
                      "production"
                    ],
                    "type": "string",
                    "description": "DEPRECATED: The state of the device's deployment.",
                    "api_fieldname": "deployed_state",
                    "entity_fieldname": "deployed_state"
                  },
                  "deployment": {
                    "type": "string",
                    "description": "DEPRECATED: The last deployment used on the device.",
                    "example": "",
                    "api_fieldname": "deployment",
                    "entity_fieldname": "deployment"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The description of the device.",
                    "example": "description",
                    "api_fieldname": "description",
                    "entity_fieldname": "description"
                  },
                  "device_class": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "An ID representing the model and hardware revision of the device.",
                    "example": "",
                    "api_fieldname": "device_class",
                    "entity_fieldname": "device_class"
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the device. The device ID is used across all Device Management APIs.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "id",
                    "entity_fieldname": "id"
                  },
                  "device_key": {
                    "type": "string",
                    "maxLength": 512,
                    "description": "The fingerprint of the device certificate.",
                    "example": "00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00",
                    "api_fieldname": "device_key",
                    "entity_fieldname": "device_key"
                  },
                  "endpoint_name": {
                    "type": "string",
                    "description": "The endpoint name given to the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "readOnly": true,
                    "api_fieldname": "endpoint_name",
                    "entity_fieldname": "endpoint_name"
                  },
                  "endpoint_type": {
                    "type": "string",
                    "description": "The endpoint type of the device. For example, the device is a gateway.",
                    "maxLength": 64,
                    "example": "",
                    "api_fieldname": "endpoint_type",
                    "entity_fieldname": "endpoint_type"
                  },
                  "etag": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The entity instance signature.",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag"
                  },
                  "firmware_checksum": {
                    "type": "string",
                    "description": "The SHA256 checksum of the current firmware image.",
                    "example": "0000000000000000000000000000000000000000000000000000000000000000",
                    "api_fieldname": "firmware_checksum",
                    "entity_fieldname": "firmware_checksum"
                  },
                  "host_gateway": {
                    "type": "string",
                    "description": "The `endpoint_name` of the host gateway, if appropriate.",
                    "example": "",
                    "api_fieldname": "host_gateway",
                    "entity_fieldname": "host_gateway"
                  },
                  "manifest": {
                    "type": "string",
                    "description": "DEPRECATED: The URL for the current device manifest.",
                    "example": "",
                    "api_fieldname": "manifest",
                    "entity_fieldname": "manifest"
                  },
                  "manifest_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of the current manifest version.",
                    "api_fieldname": "manifest_timestamp",
                    "entity_fieldname": "manifest_timestamp"
                  },
                  "mechanism": {
                    "enum": [
                      "connector",
                      "direct"
                    ],
                    "type": "string",
                    "description": "The ID of the channel used to communicate with the device.",
                    "api_fieldname": "mechanism",
                    "entity_fieldname": "mechanism"
                  },
                  "mechanism_url": {
                    "type": "string",
                    "description": "The address of the connector to use.",
                    "example": "",
                    "api_fieldname": "mechanism_url",
                    "entity_fieldname": "mechanism_url"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "The name of the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "name",
                    "entity_fieldname": "name"
                  },
                  "object": {
                    "type": "string",
                    "description": "The API resource entity.",
                    "example": "device",
                    "api_fieldname": "object",
                    "entity_fieldname": "object"
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "The serial number of the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "serial_number",
                    "entity_fieldname": "serial_number"
                  },
                  "state": {
                    "enum": [
                      "unenrolled",
                      "cloud_enrolling",
                      "bootstrapped",
                      "registered",
                      "deregistered"
                    ],
                    "type": "string",
                    "description": "The current state of the device.",
                    "api_fieldname": "state",
                    "entity_fieldname": "state"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The time the object was updated.",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at"
                  },
                  "vendor_id": {
                    "type": "string",
                    "description": "The device vendor ID.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "vendor_id",
                    "entity_fieldname": "vendor_id"
                  },
                  "enrolment_list_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The claim date/time.",
                    "api_fieldname": "enrolment_list_timestamp",
                    "entity_fieldname": "enrolment_list_timestamp"
                  },
                  "_key": "properties"
                }
              ],
              "_key": "200"
            },
            {
              "description": "Bad Request.",
              "_key": "400"
            },
            {
              "description": "Not authenticated.",
              "_key": "401"
            },
            {
              "description": "Unable to find device.",
              "_key": "404"
            }
          ],
          "path": "/v3/devices/{id}/",
          "summary": "Get a device",
          "return_type": "device",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "issuer_fingerprint",
            "operator_suspended",
            "last_operator_suspended_category",
            "last_operator_suspended_description",
            "last_operator_suspended_updated_at",
            "system_suspended",
            "last_system_suspended_category",
            "last_system_suspended_description",
            "last_system_suspended_updated_at",
            "lifecycle_status",
            "account_id",
            "device_execution_mode",
            "auto_update",
            "bootstrap_expiration_date",
            "bootstrapped_timestamp",
            "ca_id",
            "connector_expiration_date",
            "created_at",
            "custom_attributes",
            "deployed_state",
            "deployment",
            "description",
            "device_class",
            "device_key",
            "endpoint_name",
            "endpoint_type",
            "firmware_checksum",
            "host_gateway",
            "manifest",
            "manifest_timestamp",
            "mechanism",
            "mechanism_url",
            "name",
            "serial_number",
            "state",
            "updated_at",
            "vendor_id",
            "enrolment_list_timestamp"
          ],
          "group_id": "Devices",
          "operation_id": "Device_retrieve",
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "Request a certificate renewal.\n\n**Example usage:**\n\n```\ncurl -X POST\n-H 'authorization: Bearer <valid access token>'\n-H 'content-length: 0'\nhttps://api.us-east-1.mbedcloud.com/v3/devices/01612df56f3b0a580a010fc700000000/certificates/customer.dlms/renew\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "The certificate name.",
              "example": "customer.dlms",
              "maxLength": 50,
              "type": "string",
              "api_fieldname": "certificate-name",
              "entity_fieldname": "certificate_name",
              "in": "path",
              "name": "certificate-name",
              "pattern": "[\\w\\-]{1,10}\\.[\\w\\-.]{1,10}",
              "required": true,
              "external_param": true,
              "parameter_fieldname": "certificate-name",
              "_key": "certificate_name"
            },
            {
              "description": "The ID of the certificate enrollment.",
              "example": "01612df56f3b0a580a010fc700000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "device-id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "post",
          "mode": "renew_certificate",
          "responses": [
            {
              "description": "Created.",
              "schema": {
                "properties": [
                  {
                    "description": "The certificate name.",
                    "example": "customer.dlms",
                    "maxLength": 50,
                    "type": "string",
                    "api_fieldname": "certificate_name",
                    "entity_fieldname": "certificate_name",
                    "_key": "certificate_name"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The device ID.",
                    "example": "01625daa23230a580a0100bd00000000",
                    "type": "string",
                    "api_fieldname": "device_id",
                    "entity_fieldname": "device_id",
                    "_key": "device_id"
                  },
                  {
                    "enum": [
                      "success",
                      "not_found",
                      "forbidden",
                      "failure"
                    ],
                    "type": "string",
                    "api_fieldname": "enroll_result",
                    "entity_fieldname": "enroll_result",
                    "_key": "enroll_result"
                  },
                  {
                    "enum": [
                      "new",
                      "completed"
                    ],
                    "type": "string",
                    "api_fieldname": "enroll_status",
                    "entity_fieldname": "enroll_status",
                    "_key": "enroll_status"
                  },
                  {
                    "description": "Entity instance signature.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The ID of the certificate enrollment.",
                    "example": "01612df56f3b0a580a010fc700000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "enum": [
                      "certificate-enrollment"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Update UTC time RFC3339.",
                    "example": "2017-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  }
                ],
                "required": [
                  "created_at",
                  "etag",
                  "id",
                  "device_id",
                  "certificate_name"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "certificate_enrollment"
                }
              },
              "_key": "201"
            },
            {
              "description": "Validation error: There is no certificate issuer configured for this certificate.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "400"
            },
            {
              "description": "You are not authorized to perform the action.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "403"
            },
            {
              "description": "The device ID or certificate name is not found.",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "404"
            },
            {
              "description": "Conflict. A renewal request for this certificate is in process.\n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "409"
            },
            {
              "description": "Either:\n- Operation not supported for this device\n- The device is not connected \n",
              "schema": {
                "properties": [
                  {
                    "description": "Error code. Correlates with response status code.",
                    "format": "int32",
                    "type": "integer",
                    "_key": "code"
                  },
                  {
                    "description": "A list of request fields that failed the validation.",
                    "items": {
                      "properties": [
                        {
                          "description": "Field name.",
                          "type": "string",
                          "_key": "field"
                        },
                        {
                          "description": "Error message related to the field.",
                          "type": "string",
                          "_key": "message"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "_key": "fields"
                  },
                  {
                    "description": "Error message.",
                    "type": "string",
                    "_key": "message"
                  },
                  {
                    "description": "entity name: 'error'",
                    "type": "string",
                    "_key": "object"
                  },
                  {
                    "description": "Request ID from JWT.",
                    "type": "string",
                    "_key": "request_id"
                  },
                  {
                    "description": "Error type.",
                    "type": "string",
                    "_key": "type"
                  }
                ],
                "required": [
                  "code",
                  "fields",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "type": "object"
              },
              "_key": "423"
            }
          ],
          "path": "/v3/devices/{device-id}/certificates/{certificate-name}/renew",
          "summary": "Request certificate renewal.",
          "return_type": "certificate_enrollment",
          "return_info": {
            "self": false,
            "custom": false,
            "type": "certificate_enrollment"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "device_id",
            "enroll_result",
            "enroll_status",
            "updated_at"
          ],
          "group_id": "Devices",
          "operation_id": "RequestCertificateRenewal",
          "unaggregated": true,
          "parameter_map": {
            "device-id": "id",
            "certificate-name": "certificate_name"
          },
          "foreign_key": {
            "entity": "certificate_enrollment",
            "group": "Security"
          },
          "pagination": false,
          "_key": "renew_certificate"
        },
        {
          "description": "Update a specific device.",
          "field_renames": [],
          "fields": [
            {
              "type": "boolean",
              "description": "DEPRECATED: Mark this device for automatic firmware update.",
              "api_fieldname": "auto_update",
              "entity_fieldname": "auto_update",
              "parameter_fieldname": "auto_update",
              "in": "body",
              "required": false,
              "_key": "auto_update"
            },
            {
              "type": "string",
              "maxLength": 500,
              "description": "The certificate issuer's ID.",
              "example": "00000000000000000000000000000000",
              "api_fieldname": "ca_id",
              "entity_fieldname": "ca_id",
              "parameter_fieldname": "ca_id",
              "in": "body",
              "required": false,
              "_key": "ca_id"
            },
            {
              "type": "object",
              "maxProperties": 5,
              "additionalProperties": {
                "type": "string",
                "maxLength": 128,
                "pattern": "^[A-Za-z].*"
              },
              "description": "Up to five custom key-value attributes. Note that keys cannot begin with a number. Both keys and values are limited to 128 characters. Updating this field replaces existing contents.",
              "example": {
                "key": "value"
              },
              "api_fieldname": "custom_attributes",
              "entity_fieldname": "custom_attributes",
              "parameter_fieldname": "custom_attributes",
              "in": "body",
              "required": false,
              "_key": "custom_attributes"
            },
            {
              "type": "string",
              "maxLength": 2000,
              "description": "The description of the device.",
              "example": "description",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "type": "string",
              "maxLength": 512,
              "description": "The fingerprint of the device certificate.",
              "example": "00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00",
              "api_fieldname": "device_key",
              "entity_fieldname": "device_key",
              "parameter_fieldname": "device_key",
              "in": "body",
              "required": false,
              "_key": "device_key"
            },
            {
              "type": "string",
              "description": "The endpoint name given to the device.",
              "example": "00000000-0000-0000-0000-000000000000",
              "readOnly": true,
              "api_fieldname": "endpoint_name",
              "entity_fieldname": "endpoint_name",
              "parameter_fieldname": "endpoint_name",
              "in": "body",
              "required": false,
              "_key": "endpoint_name"
            },
            {
              "type": "string",
              "description": "The endpoint type of the device. For example, the device is a gateway.",
              "maxLength": 64,
              "example": "",
              "api_fieldname": "endpoint_type",
              "entity_fieldname": "endpoint_type",
              "parameter_fieldname": "endpoint_type",
              "in": "body",
              "required": false,
              "_key": "endpoint_type"
            },
            {
              "type": "string",
              "description": "The `endpoint_name` of the host gateway, if appropriate.",
              "example": "",
              "api_fieldname": "host_gateway",
              "entity_fieldname": "host_gateway",
              "parameter_fieldname": "host_gateway",
              "in": "body",
              "required": false,
              "_key": "host_gateway"
            },
            {
              "type": "string",
              "description": "The ID of the device. The device ID is used across all Device Management APIs.",
              "example": "00000000000000000000000000000000",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "type": "string",
              "maxLength": 128,
              "description": "The name of the device.",
              "example": "00000000-0000-0000-0000-000000000000",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": false,
              "_key": "name"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "Device updated.",
              "schema": [
                {
                  "group": "Devices",
                  "entity": "device",
                  "_key": "foreign_key"
                },
                {
                  "groups": {
                    "description": "An array containing an ID of each group this device belongs to.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "00000000000000000000000000000000"
                    },
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups"
                  },
                  "issuer_fingerprint": {
                    "type": "string",
                    "pattern": "[A-Fa-f0-9]{64}",
                    "description": "SHA256 fingerprint of the certificate used to validate the signature of the device certificate.",
                    "example": "C42EDEFC75871E4CE2146FCDA67D03DDA05CC26FDF93B17B55F42C1EADFDC322",
                    "api_fieldname": "issuer_fingerprint",
                    "entity_fieldname": "issuer_fingerprint"
                  },
                  "operator_suspended": {
                    "type": "boolean",
                    "description": "Is the device suspended by the operator?",
                    "api_fieldname": "operator_suspended",
                    "entity_fieldname": "operator_suspended"
                  },
                  "last_operator_suspended_category": {
                    "type": "string",
                    "description": "The reference of the block category.",
                    "pattern": "[a-f0-9_]{32}",
                    "example": "maintenance",
                    "api_fieldname": "last_operator_suspended_category",
                    "entity_fieldname": "last_operator_suspended_category"
                  },
                  "last_operator_suspended_description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The most recent description why the device was suspended or returned to service.",
                    "example": "Suspended for maintenance.",
                    "api_fieldname": "last_operator_suspended_description",
                    "entity_fieldname": "last_operator_suspended_description"
                  },
                  "last_operator_suspended_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of the most recent suspension activity.",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "api_fieldname": "last_operator_suspended_updated_at",
                    "entity_fieldname": "last_operator_suspended_updated_at"
                  },
                  "system_suspended": {
                    "type": "boolean",
                    "description": "Is the device suspended by the system?",
                    "api_fieldname": "system_suspended",
                    "entity_fieldname": "system_suspended"
                  },
                  "last_system_suspended_category": {
                    "type": "string",
                    "description": "The reference of the block category.",
                    "pattern": "[a-f0-9_]{32}",
                    "example": "maintenance",
                    "api_fieldname": "last_system_suspended_category",
                    "entity_fieldname": "last_system_suspended_category"
                  },
                  "last_system_suspended_description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The most recent description of why the device was blocked or unblocked by the system.",
                    "example": "A certificate in the device's certificate chain was blacklisted by the system.",
                    "api_fieldname": "last_system_suspended_description",
                    "entity_fieldname": "last_system_suspended_description"
                  },
                  "last_system_suspended_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of the most recent system block activity.",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "api_fieldname": "last_system_suspended_updated_at",
                    "entity_fieldname": "last_system_suspended_updated_at"
                  },
                  "lifecycle_status": {
                    "type": "string",
                    "enum": [
                      "enabled",
                      "blocked"
                    ],
                    "description": "The lifecycle status of the device.",
                    "example": "enabled",
                    "api_fieldname": "lifecycle_status",
                    "entity_fieldname": "lifecycle_status"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "The ID of the associated account.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id"
                  },
                  "device_execution_mode": {
                    "enum": [
                      0,
                      1,
                      5
                    ],
                    "type": "integer",
                    "description": "The execution mode from the certificate of the device. Defaults to inheriting from host_gateway device.\nPermitted values:\n  - 0 - unspecified execution mode (default if host_gateway invalid or not set)\n  - 1 - development devices\n  - 5 - production devices",
                    "example": 0,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode"
                  },
                  "auto_update": {
                    "type": "boolean",
                    "description": "DEPRECATED: Mark this device for automatic firmware update.",
                    "api_fieldname": "auto_update",
                    "entity_fieldname": "auto_update"
                  },
                  "bootstrap_expiration_date": {
                    "format": "date",
                    "type": "string",
                    "description": "The expiration date of the certificate used to connect to bootstrap server.",
                    "api_fieldname": "bootstrap_expiration_date",
                    "entity_fieldname": "bootstrap_expiration_date"
                  },
                  "bootstrapped_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of the device's most recent bootstrap process.",
                    "api_fieldname": "bootstrapped_timestamp",
                    "entity_fieldname": "bootstrapped_timestamp"
                  },
                  "ca_id": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "The certificate issuer's ID.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "ca_id",
                    "entity_fieldname": "ca_id"
                  },
                  "connector_expiration_date": {
                    "format": "date",
                    "type": "string",
                    "description": "The expiration date of the certificate used to connect to LwM2M server.",
                    "api_fieldname": "connector_expiration_date",
                    "entity_fieldname": "connector_expiration_date"
                  },
                  "created_at": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of when the device was created in the device directory.",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at"
                  },
                  "custom_attributes": {
                    "type": "object",
                    "maxProperties": 5,
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 128,
                      "pattern": "^[A-Za-z].*"
                    },
                    "description": "Up to five custom key-value attributes. Note that keys cannot begin with a number. Both keys and values are limited to 128 characters. Updating this field replaces existing contents.",
                    "example": {
                      "key": "value"
                    },
                    "api_fieldname": "custom_attributes",
                    "entity_fieldname": "custom_attributes"
                  },
                  "deployed_state": {
                    "enum": [
                      "development",
                      "production"
                    ],
                    "type": "string",
                    "description": "DEPRECATED: The state of the device's deployment.",
                    "api_fieldname": "deployed_state",
                    "entity_fieldname": "deployed_state"
                  },
                  "deployment": {
                    "type": "string",
                    "description": "DEPRECATED: The last deployment used on the device.",
                    "example": "",
                    "api_fieldname": "deployment",
                    "entity_fieldname": "deployment"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 2000,
                    "description": "The description of the device.",
                    "example": "description",
                    "api_fieldname": "description",
                    "entity_fieldname": "description"
                  },
                  "device_class": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "An ID representing the model and hardware revision of the device.",
                    "example": "",
                    "api_fieldname": "device_class",
                    "entity_fieldname": "device_class"
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the device. The device ID is used across all Device Management APIs.",
                    "example": "00000000000000000000000000000000",
                    "api_fieldname": "id",
                    "entity_fieldname": "id"
                  },
                  "device_key": {
                    "type": "string",
                    "maxLength": 512,
                    "description": "The fingerprint of the device certificate.",
                    "example": "00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00",
                    "api_fieldname": "device_key",
                    "entity_fieldname": "device_key"
                  },
                  "endpoint_name": {
                    "type": "string",
                    "description": "The endpoint name given to the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "readOnly": true,
                    "api_fieldname": "endpoint_name",
                    "entity_fieldname": "endpoint_name"
                  },
                  "endpoint_type": {
                    "type": "string",
                    "description": "The endpoint type of the device. For example, the device is a gateway.",
                    "maxLength": 64,
                    "example": "",
                    "api_fieldname": "endpoint_type",
                    "entity_fieldname": "endpoint_type"
                  },
                  "etag": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The entity instance signature.",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag"
                  },
                  "firmware_checksum": {
                    "type": "string",
                    "description": "The SHA256 checksum of the current firmware image.",
                    "example": "0000000000000000000000000000000000000000000000000000000000000000",
                    "api_fieldname": "firmware_checksum",
                    "entity_fieldname": "firmware_checksum"
                  },
                  "host_gateway": {
                    "type": "string",
                    "description": "The `endpoint_name` of the host gateway, if appropriate.",
                    "example": "",
                    "api_fieldname": "host_gateway",
                    "entity_fieldname": "host_gateway"
                  },
                  "manifest": {
                    "type": "string",
                    "description": "DEPRECATED: The URL for the current device manifest.",
                    "example": "",
                    "api_fieldname": "manifest",
                    "entity_fieldname": "manifest"
                  },
                  "manifest_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The timestamp of the current manifest version.",
                    "api_fieldname": "manifest_timestamp",
                    "entity_fieldname": "manifest_timestamp"
                  },
                  "mechanism": {
                    "enum": [
                      "connector",
                      "direct"
                    ],
                    "type": "string",
                    "description": "The ID of the channel used to communicate with the device.",
                    "api_fieldname": "mechanism",
                    "entity_fieldname": "mechanism"
                  },
                  "mechanism_url": {
                    "type": "string",
                    "description": "The address of the connector to use.",
                    "example": "",
                    "api_fieldname": "mechanism_url",
                    "entity_fieldname": "mechanism_url"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "The name of the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "name",
                    "entity_fieldname": "name"
                  },
                  "object": {
                    "type": "string",
                    "description": "The API resource entity.",
                    "example": "device",
                    "api_fieldname": "object",
                    "entity_fieldname": "object"
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "The serial number of the device.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "serial_number",
                    "entity_fieldname": "serial_number"
                  },
                  "state": {
                    "enum": [
                      "unenrolled",
                      "cloud_enrolling",
                      "bootstrapped",
                      "registered",
                      "deregistered"
                    ],
                    "type": "string",
                    "description": "The current state of the device.",
                    "api_fieldname": "state",
                    "entity_fieldname": "state"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The time the object was updated.",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at"
                  },
                  "vendor_id": {
                    "type": "string",
                    "description": "The device vendor ID.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "api_fieldname": "vendor_id",
                    "entity_fieldname": "vendor_id"
                  },
                  "enrolment_list_timestamp": {
                    "format": "date-time",
                    "example": "2017-05-22T12:37:55.576563Z",
                    "type": "string",
                    "description": "The claim date/time.",
                    "api_fieldname": "enrolment_list_timestamp",
                    "entity_fieldname": "enrolment_list_timestamp"
                  },
                  "_key": "properties"
                }
              ],
              "_key": "200"
            },
            {
              "description": "Validation error: The data used to update the device did not validate.\n",
              "_key": "400"
            },
            {
              "description": "Not authenticated.",
              "_key": "401"
            },
            {
              "description": "Unable to update device because it can't be found.",
              "_key": "404"
            }
          ],
          "path": "/v3/devices/{id}/",
          "summary": "Update a device",
          "return_type": "device",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "issuer_fingerprint",
            "operator_suspended",
            "last_operator_suspended_category",
            "last_operator_suspended_description",
            "last_operator_suspended_updated_at",
            "system_suspended",
            "last_system_suspended_category",
            "last_system_suspended_description",
            "last_system_suspended_updated_at",
            "lifecycle_status",
            "account_id",
            "device_execution_mode",
            "bootstrap_expiration_date",
            "bootstrapped_timestamp",
            "connector_expiration_date",
            "created_at",
            "deployed_state",
            "deployment",
            "device_class",
            "firmware_checksum",
            "manifest",
            "manifest_timestamp",
            "mechanism",
            "mechanism_url",
            "serial_number",
            "state",
            "updated_at",
            "vendor_id",
            "enrolment_list_timestamp"
          ],
          "group_id": "Devices",
          "operation_id": "Device_update",
          "pagination": false,
          "_key": "update"
        }
      ],
      "fields": [
        {
          "type": "string",
          "description": "The ID of the associated account.",
          "example": "00000000000000000000000000000000",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "type": "boolean",
          "description": "DEPRECATED: Mark this device for automatic firmware update.",
          "api_fieldname": "auto_update",
          "readOnly": false,
          "required": false,
          "_key": "auto_update"
        },
        {
          "format": "date",
          "type": "string",
          "description": "The expiration date of the certificate used to connect to bootstrap server.",
          "api_fieldname": "bootstrap_expiration_date",
          "readOnly": false,
          "required": false,
          "_key": "bootstrap_expiration_date"
        },
        {
          "format": "date-time",
          "example": "2017-05-22T12:37:55.576563Z",
          "type": "string",
          "description": "The timestamp of the device's most recent bootstrap process.",
          "api_fieldname": "bootstrapped_timestamp",
          "readOnly": false,
          "required": false,
          "_key": "bootstrapped_timestamp"
        },
        {
          "type": "string",
          "maxLength": 500,
          "description": "The certificate issuer's ID.",
          "example": "00000000000000000000000000000000",
          "api_fieldname": "ca_id",
          "readOnly": false,
          "required": false,
          "_key": "ca_id"
        },
        {
          "format": "date",
          "type": "string",
          "description": "The expiration date of the certificate used to connect to LwM2M server.",
          "api_fieldname": "connector_expiration_date",
          "readOnly": false,
          "required": false,
          "_key": "connector_expiration_date"
        },
        {
          "format": "date-time",
          "example": "2017-05-22T12:37:55.576563Z",
          "type": "string",
          "description": "The timestamp of when the device was created in the device directory.",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "type": "object",
          "maxProperties": 5,
          "additionalProperties": {
            "type": "string",
            "maxLength": 128,
            "pattern": "^[A-Za-z].*"
          },
          "description": "Up to five custom key-value attributes. Note that keys cannot begin with a number. Both keys and values are limited to 128 characters. Updating this field replaces existing contents.",
          "example": {
            "key": "value"
          },
          "api_fieldname": "custom_attributes",
          "readOnly": false,
          "required": false,
          "_key": "custom_attributes"
        },
        {
          "enum": [
            "development",
            "production"
          ],
          "type": "string",
          "description": "DEPRECATED: The state of the device's deployment.",
          "api_fieldname": "deployed_state",
          "readOnly": true,
          "required": false,
          "enum_reference": "device_deployed_state_enum",
          "_key": "deployed_state"
        },
        {
          "type": "string",
          "description": "DEPRECATED: The last deployment used on the device.",
          "example": "",
          "api_fieldname": "deployment",
          "readOnly": false,
          "required": false,
          "_key": "deployment"
        },
        {
          "type": "string",
          "maxLength": 2000,
          "description": "The description of the device.",
          "example": "description",
          "api_fieldname": "description",
          "readOnly": false,
          "required": false,
          "_key": "description"
        },
        {
          "type": "string",
          "maxLength": 32,
          "description": "An ID representing the model and hardware revision of the device.",
          "example": "",
          "api_fieldname": "device_class",
          "readOnly": false,
          "required": false,
          "_key": "device_class"
        },
        {
          "enum": [
            0,
            1,
            5
          ],
          "type": "integer",
          "description": "The execution mode from the certificate of the device. Defaults to inheriting from host_gateway device.\nPermitted values:\n  - 0 - unspecified execution mode (default if host_gateway invalid or not set)\n  - 1 - development devices\n  - 5 - production devices",
          "example": 0,
          "api_fieldname": "device_execution_mode",
          "readOnly": false,
          "required": false,
          "_key": "device_execution_mode"
        },
        {
          "type": "string",
          "maxLength": 512,
          "description": "The fingerprint of the device certificate.",
          "example": "00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00",
          "api_fieldname": "device_key",
          "readOnly": false,
          "required": false,
          "_key": "device_key"
        },
        {
          "type": "string",
          "description": "The endpoint name given to the device.",
          "example": "00000000-0000-0000-0000-000000000000",
          "readOnly": true,
          "api_fieldname": "endpoint_name",
          "required": false,
          "_key": "endpoint_name"
        },
        {
          "type": "string",
          "description": "The endpoint type of the device. For example, the device is a gateway.",
          "maxLength": 64,
          "example": "",
          "api_fieldname": "endpoint_type",
          "readOnly": false,
          "required": false,
          "_key": "endpoint_type"
        },
        {
          "format": "date-time",
          "example": "2017-05-22T12:37:55.576563Z",
          "type": "string",
          "description": "The claim date/time.",
          "api_fieldname": "enrolment_list_timestamp",
          "readOnly": true,
          "required": false,
          "_key": "enrolment_list_timestamp"
        },
        {
          "type": "string",
          "description": "The SHA256 checksum of the current firmware image.",
          "example": "0000000000000000000000000000000000000000000000000000000000000000",
          "api_fieldname": "firmware_checksum",
          "readOnly": false,
          "required": false,
          "_key": "firmware_checksum"
        },
        {
          "type": "string",
          "description": "The `endpoint_name` of the host gateway, if appropriate.",
          "example": "",
          "api_fieldname": "host_gateway",
          "readOnly": false,
          "required": false,
          "_key": "host_gateway"
        },
        {
          "type": "string",
          "description": "The ID of the device. The device ID is used across all Device Management APIs.",
          "example": "00000000000000000000000000000000",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "type": "string",
          "pattern": "[A-Fa-f0-9]{64}",
          "description": "SHA256 fingerprint of the certificate used to validate the signature of the device certificate.",
          "example": "C42EDEFC75871E4CE2146FCDA67D03DDA05CC26FDF93B17B55F42C1EADFDC322",
          "api_fieldname": "issuer_fingerprint",
          "readOnly": false,
          "required": false,
          "_key": "issuer_fingerprint"
        },
        {
          "type": "string",
          "description": "The reference of the block category.",
          "pattern": "[a-f0-9_]{32}",
          "example": "maintenance",
          "api_fieldname": "last_operator_suspended_category",
          "readOnly": true,
          "required": false,
          "_key": "last_operator_suspended_category"
        },
        {
          "type": "string",
          "maxLength": 2000,
          "description": "The most recent description why the device was suspended or returned to service.",
          "example": "Suspended for maintenance.",
          "api_fieldname": "last_operator_suspended_description",
          "readOnly": true,
          "required": false,
          "_key": "last_operator_suspended_description"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the most recent suspension activity.",
          "example": "2017-05-22T12:37:55.576563Z",
          "api_fieldname": "last_operator_suspended_updated_at",
          "readOnly": true,
          "required": false,
          "_key": "last_operator_suspended_updated_at"
        },
        {
          "type": "string",
          "description": "The reference of the block category.",
          "pattern": "[a-f0-9_]{32}",
          "example": "maintenance",
          "api_fieldname": "last_system_suspended_category",
          "readOnly": true,
          "required": false,
          "_key": "last_system_suspended_category"
        },
        {
          "type": "string",
          "maxLength": 2000,
          "description": "The most recent description of why the device was blocked or unblocked by the system.",
          "example": "A certificate in the device's certificate chain was blacklisted by the system.",
          "api_fieldname": "last_system_suspended_description",
          "readOnly": true,
          "required": false,
          "_key": "last_system_suspended_description"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the most recent system block activity.",
          "example": "2017-05-22T12:37:55.576563Z",
          "api_fieldname": "last_system_suspended_updated_at",
          "readOnly": true,
          "required": false,
          "_key": "last_system_suspended_updated_at"
        },
        {
          "type": "string",
          "enum": [
            "enabled",
            "blocked"
          ],
          "description": "The lifecycle status of the device.",
          "example": "enabled",
          "api_fieldname": "lifecycle_status",
          "readOnly": true,
          "required": false,
          "enum_reference": "device_lifecycle_status_enum",
          "_key": "lifecycle_status"
        },
        {
          "type": "string",
          "description": "DEPRECATED: The URL for the current device manifest.",
          "example": "",
          "api_fieldname": "manifest",
          "readOnly": false,
          "required": false,
          "_key": "manifest"
        },
        {
          "format": "date-time",
          "example": "2017-05-22T12:37:55.576563Z",
          "type": "string",
          "description": "The timestamp of the current manifest version.",
          "api_fieldname": "manifest_timestamp",
          "readOnly": true,
          "required": false,
          "_key": "manifest_timestamp"
        },
        {
          "enum": [
            "connector",
            "direct"
          ],
          "type": "string",
          "description": "The ID of the channel used to communicate with the device.",
          "api_fieldname": "mechanism",
          "readOnly": false,
          "required": false,
          "enum_reference": "device_mechanism_enum",
          "_key": "mechanism"
        },
        {
          "type": "string",
          "description": "The address of the connector to use.",
          "example": "",
          "api_fieldname": "mechanism_url",
          "readOnly": false,
          "required": false,
          "_key": "mechanism_url"
        },
        {
          "type": "string",
          "maxLength": 128,
          "description": "The name of the device.",
          "example": "00000000-0000-0000-0000-000000000000",
          "api_fieldname": "name",
          "readOnly": false,
          "required": false,
          "_key": "name"
        },
        {
          "type": "boolean",
          "description": "Is the device suspended by the operator?",
          "api_fieldname": "operator_suspended",
          "readOnly": true,
          "required": false,
          "_key": "operator_suspended"
        },
        {
          "type": "string",
          "description": "The serial number of the device.",
          "example": "00000000-0000-0000-0000-000000000000",
          "api_fieldname": "serial_number",
          "readOnly": false,
          "required": false,
          "_key": "serial_number"
        },
        {
          "enum": [
            "unenrolled",
            "cloud_enrolling",
            "bootstrapped",
            "registered",
            "deregistered"
          ],
          "type": "string",
          "description": "The current state of the device.",
          "api_fieldname": "state",
          "readOnly": false,
          "required": false,
          "enum_reference": "device_state_enum",
          "_key": "state"
        },
        {
          "type": "boolean",
          "description": "Is the device suspended by the system?",
          "api_fieldname": "system_suspended",
          "readOnly": true,
          "required": false,
          "_key": "system_suspended"
        },
        {
          "format": "date-time",
          "example": "2017-05-22T12:37:55.576563Z",
          "type": "string",
          "description": "The time the object was updated.",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        },
        {
          "type": "string",
          "description": "The device vendor ID.",
          "example": "00000000-0000-0000-0000-000000000000",
          "api_fieldname": "vendor_id",
          "readOnly": false,
          "required": false,
          "_key": "vendor_id"
        }
      ],
      "field_renames": [],
      "tags": [
        "Certificate Renewal"
      ],
      "group_id": "Devices",
      "_key": "device"
    },
    {
      "swagger_models": [
        "EnrollmentId",
        "EnrollmentIdentities",
        "EnrollmentIdentity"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "When the device connects to the bootstrap server and provides the enrollment ID, it will be assigned to your account.\n<br>\n**Example usage:**\n```\ncurl -X POST \\\n-H 'Authorization: Bearer <valid access token>' \\\n-H 'content-type: application/json' \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments \\\n-d '{\"enrollment_identity\": \"A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5\"}'\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "Enrollment identity.",
              "example": "A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5",
              "pattern": "^A-[A-Za-z0-9:]{95}$",
              "type": "string",
              "api_fieldname": "enrollment_identity",
              "entity_fieldname": "enrollment_identity",
              "parameter_fieldname": "enrollment_identity",
              "in": "body",
              "required": true,
              "_key": "enrollment_identity"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "Created. The enrollment claim has been created and is waiting for the device to connect.",
              "schema": {
                "properties": [
                  {
                    "description": "ID",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "The time of claiming the device to be assigned to the account.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "claimed_at",
                    "entity_fieldname": "claimed_at",
                    "_key": "claimed_at"
                  },
                  {
                    "description": "The time of the enrollment identity creation.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The ID of the device in the Device Directory once it has been registered.",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "enrolled_device_id",
                    "entity_fieldname": "enrolled_device_id",
                    "_key": "enrolled_device_id"
                  },
                  {
                    "description": "Enrollment identity.",
                    "example": "A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5",
                    "pattern": "^A-[A-Za-z0-9:]{95}$",
                    "type": "string",
                    "api_fieldname": "enrollment_identity",
                    "entity_fieldname": "enrollment_identity",
                    "_key": "enrollment_identity"
                  },
                  {
                    "example": "7642xfaxz",
                    "pattern": "[A-Za-z0-9]{1,256}",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The enrollment claim expiration time. If the device does not connect to Device Management before the expiration, the claim is removed without a separate notice",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expires_at",
                    "entity_fieldname": "expires_at",
                    "_key": "expires_at"
                  },
                  {
                    "description": "Enrollment identity.",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "enum": [
                      "enrollment"
                    ],
                    "example": "enrollment",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  }
                ],
                "required": [
                  "object",
                  "id",
                  "etag",
                  "account_id",
                  "created_at",
                  "expires_at",
                  "claimed_at",
                  "enrollment_identity",
                  "enrolled_device_id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_enrollment"
                }
              },
              "_key": "201"
            },
            {
              "description": "Bad request. The enrollment identity is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Conflict. The identity requested to be added already exists either on this or another account.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "409"
            }
          ],
          "path": "/v3/device-enrollments",
          "summary": "Place an enrollment claim for one or several devices.",
          "return_type": "device_enrollment",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_enrollment"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "claimed_at",
            "created_at",
            "enrolled_device_id",
            "expires_at",
            "id"
          ],
          "group_id": "Devices",
          "operation_id": "createDeviceEnrollment",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "To free a device from your account you can delete the enrollment claim. To bypass the device ownership, you need to delete the enrollment and do a factory reset for the device. For more information, see [Transferring the ownership using First-to-Claim](/docs/current/connecting/device-ownership-first-to-claim-by-enrollment-list.html).\n<br>\n**Example usage:**\n```\ncurl -X DELETE \\\n-H 'Authorization: Bearer <valid access token>' \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments/{id}\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "Enrollment identity.",
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "id",
              "external_param": false,
              "parameter_fieldname": "id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "No content. The enrollment claim has been deleted.",
              "_key": "204"
            },
            {
              "description": "Bad request. The enrollment identity is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/device-enrollments/{id}",
          "summary": "Delete an enrollment by ID.",
          "return_type": "device_enrollment",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_enrollment"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Devices",
          "operation_id": "deleteDeviceEnrollment",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "Provides a list of pending and claimed enrollments.\n**Example usage:**\n```\ncurl -X GET \\\n-H 'Authorization: Bearer <valid access token>' \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments\n```\nWith query parameters:\n```\ncurl -X GET \\\n-H 'Authorization: Bearer <valid access token>' \\\n'https://api.us-east-1.mbedcloud.com/v3/device-enrollments?limit=10'\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "Entity ID to fetch after.",
              "example": "00005a4e027f0a580a01081c00000000",
              "pattern": "^[A-Za-z0-9]{32}",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "Comma-separated additional data to return. Currently supported: total_count.",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "Number of results to be returned. Between 2 and 1000, inclusive.",
              "example": 50,
              "maximum": 1000,
              "minimum": 2,
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "example": "ASC",
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "description": "ASC or DESC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "device_enrollment_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "OK.",
              "schema": {
                "properties": [
                  {
                    "description": "ID",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "items": {
                      "properties": [
                        {
                          "description": "ID",
                          "example": "00005a4e027f0a580a01081c00000000",
                          "type": "string",
                          "_key": "account_id"
                        },
                        {
                          "description": "The time of claiming the device to be assigned to the account.",
                          "format": "date-time",
                          "type": "string",
                          "_key": "claimed_at"
                        },
                        {
                          "description": "The time of the enrollment identity creation.",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "The ID of the device in the Device Directory once it has been registered.",
                          "example": "00005a4e027f0a580a01081c00000000",
                          "pattern": "^[A-Za-z0-9]{32}",
                          "type": "string",
                          "_key": "enrolled_device_id"
                        },
                        {
                          "description": "Enrollment identity.",
                          "example": "A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5",
                          "pattern": "^A-[A-Za-z0-9:]{95}$",
                          "type": "string",
                          "_key": "enrollment_identity"
                        },
                        {
                          "example": "7642xfaxz",
                          "pattern": "[A-Za-z0-9]{1,256}",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "The enrollment claim expiration time. If the device does not connect to Device Management before the expiration, the claim is removed without a separate notice",
                          "format": "date-time",
                          "type": "string",
                          "_key": "expires_at"
                        },
                        {
                          "description": "Enrollment identity.",
                          "example": "00005a4e027f0a580a01081c00000000",
                          "pattern": "^[A-Za-z0-9]{32}",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "enum": [
                            "enrollment"
                          ],
                          "example": "enrollment",
                          "type": "string",
                          "_key": "object"
                        }
                      ],
                      "required": [
                        "object",
                        "id",
                        "etag",
                        "account_id",
                        "created_at",
                        "expires_at",
                        "claimed_at",
                        "enrollment_identity",
                        "enrolled_device_id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Devices",
                        "entity": "device_enrollment"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "Range 2-1000, or default.",
                    "example": 50,
                    "maximum": 1000,
                    "minimum": 2,
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "enum": [
                      "list"
                    ],
                    "example": "list",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "default": "ASC",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "example": 100,
                    "format": "int32",
                    "minimum": 1,
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "object",
                  "limit",
                  "after",
                  "order",
                  "has_more",
                  "total_count",
                  "data"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_enrollment"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request. The access token could not be read.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            }
          ],
          "path": "/v3/device-enrollments",
          "summary": "Get enrollment list.",
          "return_type": "paginated_response(device_enrollment)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_enrollment"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count"
          ],
          "foreign_key_priority": "self",
          "group_id": "Devices",
          "operation_id": "getDeviceEnrollments",
          "pagination": true,
          "foreign_key": {
            "group": "Devices",
            "entity": "device_enrollment"
          },
          "_key": "list"
        },
        {
          "description": "To check the enrollment info in detail, for example date of claim and expiration date.\n**Example usage:**\n```\ncurl -X GET \\\n-H 'Authorization: Bearer <valid access token>' \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments/{id}\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "Enrollment identity.",
              "example": "00005a4e027f0a580a01081c00000000",
              "pattern": "^[A-Za-z0-9]{32}",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "OK. Pending enrollment data.",
              "schema": {
                "properties": [
                  {
                    "description": "ID",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "The time of claiming the device to be assigned to the account.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "claimed_at",
                    "entity_fieldname": "claimed_at",
                    "_key": "claimed_at"
                  },
                  {
                    "description": "The time of the enrollment identity creation.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The ID of the device in the Device Directory once it has been registered.",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "enrolled_device_id",
                    "entity_fieldname": "enrolled_device_id",
                    "_key": "enrolled_device_id"
                  },
                  {
                    "description": "Enrollment identity.",
                    "example": "A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5",
                    "pattern": "^A-[A-Za-z0-9:]{95}$",
                    "type": "string",
                    "api_fieldname": "enrollment_identity",
                    "entity_fieldname": "enrollment_identity",
                    "_key": "enrollment_identity"
                  },
                  {
                    "example": "7642xfaxz",
                    "pattern": "[A-Za-z0-9]{1,256}",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The enrollment claim expiration time. If the device does not connect to Device Management before the expiration, the claim is removed without a separate notice",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expires_at",
                    "entity_fieldname": "expires_at",
                    "_key": "expires_at"
                  },
                  {
                    "description": "Enrollment identity.",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "enum": [
                      "enrollment"
                    ],
                    "example": "enrollment",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  }
                ],
                "required": [
                  "object",
                  "id",
                  "etag",
                  "account_id",
                  "created_at",
                  "expires_at",
                  "claimed_at",
                  "enrollment_identity",
                  "enrolled_device_id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_enrollment"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request. The enrollment identity is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/device-enrollments/{id}",
          "summary": "Get details of an enrollment by ID.",
          "return_type": "device_enrollment",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_enrollment"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "claimed_at",
            "created_at",
            "enrolled_device_id",
            "enrollment_identity",
            "expires_at"
          ],
          "group_id": "Devices",
          "operation_id": "getDeviceEnrollment",
          "pagination": false,
          "_key": "read"
        }
      ],
      "fields": [
        {
          "description": "ID",
          "example": "00005a4e027f0a580a01081c00000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "The time of claiming the device to be assigned to the account.",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "claimed_at",
          "readOnly": true,
          "required": false,
          "_key": "claimed_at"
        },
        {
          "description": "The time of the enrollment identity creation.",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "The ID of the device in the Device Directory once it has been registered.",
          "example": "00005a4e027f0a580a01081c00000000",
          "pattern": "^[A-Za-z0-9]{32}",
          "type": "string",
          "api_fieldname": "enrolled_device_id",
          "readOnly": true,
          "required": false,
          "_key": "enrolled_device_id"
        },
        {
          "description": "Enrollment identity.",
          "example": "A-35:e7:72:8a:07:50:3b:3d:75:96:57:52:72:41:0d:78:cc:c6:e5:53:48:c6:65:58:5b:fa:af:4d:2d:73:95:c5",
          "pattern": "^A-[A-Za-z0-9:]{95}$",
          "type": "string",
          "api_fieldname": "enrollment_identity",
          "readOnly": false,
          "required": true,
          "_key": "enrollment_identity"
        },
        {
          "description": "The enrollment claim expiration time. If the device does not connect to Device Management before the expiration, the claim is removed without a separate notice",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "expires_at",
          "readOnly": true,
          "required": false,
          "_key": "expires_at"
        },
        {
          "description": "Enrollment identity.",
          "example": "00005a4e027f0a580a01081c00000000",
          "pattern": "^[A-Za-z0-9]{32}",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        }
      ],
      "field_renames": [],
      "tags": [
        "Public API"
      ],
      "group_id": "Devices",
      "_key": "device_enrollment"
    },
    {
      "swagger_models": [
        "BulkResponse"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "With bulk upload, you can upload a `CSV` file containing a number of enrollment IDs.\n\n**Example usage:**\n```\ncurl -X POST \\\n-H 'Authorization: Bearer <valid access token>' \\\n-F 'enrollment_identities=@/path/to/enrollments/enrollments.csv' \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads\n\n```\n**The validation rules for an CSV file.**\n1. The first line in the uploaded CSV file is assumed to be the header and is ignored.\n1. Each line can contain comma-separated values, where the first value is always assumed to be the Enrollment ID. Everything after the first comma is ignored.\n1. Valid enrollments begin with A followed by a - and 95 characters in the format as below.\n1. Up to one enrollment ID is expected per line. Empty lines are ignored.\n1. Trailing comma at the end of the line is optional.\n1. Lines are terminated with either a line feed \\n, a carriage return \\r, or both together \\r\\n.\n1. Leading and trailing whitespace characters (Unicode U+0000 - U+0020) are removed from the identity before validation.\n1. Empty identities are ignored.\n1. Valid enrollment identities may be enclosed within quotes. Whitespace inside quotes is not trimmed and will fail validation. Empty quotes are also considered to be an invalid enrollment identity.\n1. UTF-8 encoding is expected.\n\n\n**A valid enrollment file:**\n```\n\"Examples of valid identites, notes\"\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\",\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12\"\nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12\nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:24:44:71:22:15:43:23:12, This text is ignored,\n A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:60:25:48:44:71:22:15:43:23:12       , Whitespace is trimmed before validation\n  \"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:60:25:48:44:71:22:15:43:23:12\"       , Whitespace around quotes is also trimmed\n\n```\n\n**A file containing invalid identities:**\n```\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\", First line is ignored\nA_4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12, Invalid version identifier\nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12, Too short identity\n\"\", Empty quotes are an invalid identity\n\" A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12 \", Whitespace inside quotes is not trimmed causing an error\n\n```\n\n**An empty file:**\n```\n\"Examples of blank lines that are ignored\"\n\n,,\n, This is also considered to a blank line\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "The `CSV` file containing the enrollment IDs. The maximum file size is 10MB.",
              "in": "stream",
              "name": "enrollment_identities",
              "required": true,
              "type": "file",
              "entity_fieldname": "enrollment_identities",
              "api_fieldname": "enrollment_identities",
              "external_param": true,
              "parameter_fieldname": "enrollment_identities",
              "_key": "enrollment_identities"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "Bulk upload data has been received and asynchronous processing has been started.",
              "schema": {
                "properties": [
                  {
                    "description": "ID",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "The time of completing the bulk creation task.\nNull when creating bulk upload or delete.\n",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "completed_at",
                    "entity_fieldname": "completed_at",
                    "_key": "completed_at"
                  },
                  {
                    "description": "The time of receiving the bulk creation task.\n",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The number of enrollment identities with failed processing.\n",
                    "example": 0,
                    "type": "integer",
                    "api_fieldname": "errors_count",
                    "entity_fieldname": "errors_count",
                    "_key": "errors_count"
                  },
                  {
                    "description": "Link to error report file.\nNull when creating bulk upload or delete.\n",
                    "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/errors_report.csv",
                    "type": "string",
                    "api_fieldname": "errors_report_file",
                    "entity_fieldname": "errors_report_file",
                    "_key": "errors_report_file"
                  },
                  {
                    "description": "etag",
                    "example": "1",
                    "pattern": "[A-Za-z0-9]{0,256}",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Link to full report file.\nNull when creating bulk upload or delete.\n",
                    "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/full_report.csv",
                    "type": "string",
                    "api_fieldname": "full_report_file",
                    "entity_fieldname": "full_report_file",
                    "_key": "full_report_file"
                  },
                  {
                    "description": "Bulk ID",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "enum": [
                      "enrollment-identity-bulk-uploads"
                    ],
                    "example": "enrollment-identity-bulk-uploads",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The number of enrollment identities processed until now.\n",
                    "example": 0,
                    "type": "integer",
                    "api_fieldname": "processed_count",
                    "entity_fieldname": "processed_count",
                    "_key": "processed_count"
                  },
                  {
                    "default": "new",
                    "description": "The state of the process is 'new' at the time of creation. If the creation is still in progress, the state is shown as 'processing'. When the request has been fully processed, the state changes to 'completed'.\n",
                    "enum": [
                      "new",
                      "processing",
                      "completed"
                    ],
                    "example": "new",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Total number of enrollment identities found in the input CSV.\n",
                    "example": 10,
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "object",
                  "id",
                  "etag",
                  "created_at",
                  "account_id",
                  "status",
                  "total_count",
                  "processed_count",
                  "errors_count",
                  "completet_at",
                  "full_report_file",
                  "errors_report_file"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_enrollment_bulk_delete"
                }
              },
              "_key": "201"
            },
            {
              "description": "Bad request.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            }
          ],
          "path": "/v3/device-enrollments-bulk-uploads",
          "summary": "Bulk upload",
          "return_type": "device_enrollment_bulk_create",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_enrollment_bulk_create"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "completed_at",
            "created_at",
            "errors_count",
            "errors_report_file",
            "full_report_file",
            "id",
            "processed_count",
            "status",
            "total_count"
          ],
          "group_id": "Devices",
          "operation_id": "createBulkDeviceEnrollment",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "This method will download the CSV file containing detailed information on status of the bulk enrollment.",
          "field_renames": [],
          "fields": [],
          "method": null,
          "mode": "download_errors_report_file",
          "responses": [],
          "path": null,
          "summary": "Download the error report file for the created the bulk enrollment.",
          "return_type": "file",
          "return_info": {
            "self": false,
            "custom": true,
            "type": "file"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Devices",
          "custom_method": "download_errors_report_file",
          "spec": {
            "summary": "Download the error report file for the created the bulk enrollment.",
            "description": "This method will download the CSV file containing detailed information on status of the bulk enrollment.",
            "return_type": "file"
          },
          "_key": "download_errors_report_file"
        },
        {
          "description": "This method will download the CSV file containing detailed information on status of the bulk enrollment.",
          "field_renames": [],
          "fields": [],
          "method": null,
          "mode": "download_full_report_file",
          "responses": [],
          "path": null,
          "summary": "Download the full report file for the created of the bulk enrollment.",
          "return_type": "file",
          "return_info": {
            "self": false,
            "custom": true,
            "type": "file"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Devices",
          "custom_method": "download_full_report_file",
          "spec": {
            "summary": "Download the full report file for the created of the bulk enrollment.",
            "description": "This method will download the CSV file containing detailed information on status of the bulk enrollment.",
            "return_type": "file"
          },
          "_key": "download_full_report_file"
        },
        {
          "description": "Provides information on bulk upload for the given ID. For example, the bulk status and the number of processed enrollment identities. Also links to the bulk upload reports are provided.\n**Report file format:**\nThe report files have a header line and the value are separated by commas. The lines are delimited by a line break (CRLF). The report file is compliant with IETF Informal CSV common format [RFC 4180](https://tools.ietf.org/html/rfc4180).\nAn example of a full report file:\n```\n\"entity__id\",\"entity__created_at\",\"error__code\",\"error__type\",\"error__message\",\"error__fields\"\n\"A-F9:AA:AA:AA:DE:31:C7:30:72:55:27:AE:8B:E1:1C:6F:42:7D:06:CF:FB:18:6F:59:48:29:B3:98:4B:76:8F:9E\",\"2018-09-07T12:10:58.428Z\",\"\",\"\",\"\",\"\"\n\"A-FF:AA:AA:AA:3B:43:EB:D7:C7:30:03:5F:C8:D0:15:91:70:C2:5D:4F:EB:24:E9:3A:BB:D8:3C:FE:20:EA:B1:72\",\"2018-09-07T12:10:58.428Z\",\"\",\"\",\"\",\"\"\n```\nAn example of an error report file:\n```\n\"entity__id\",\"error__code\",\"error__type\",\"error__message\",\"error__fields\"\n\"A-F9:AA:AA:AA:DE:31:C7:30:72:55:27:AE:8B:E1:1C:6F:42:7D:06:CF:FB:18:6F:59:48:29:B3:98:4B:76:8F:9E\",\"409\",\"duplicate\",\"Enrollment identity is already claimed in the mbed Cloud.\",\"\"\n\"A-FF:AA:AA:AA:3B:43:EB:D7:C7:30:03:5F:C8:D0:15:91:70:C2:5D:4F:EB:24:E9:3A:BB:D8:3C:FE:20:EA:B1:72\",\"409\",\"duplicate\",\"Enrollment identity is already claimed in the mbed Cloud.\",\"\"\n```\n**Example usage:**\n```\ncurl -X GET \\\n-H 'Authorization: Bearer <valid access token>' \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/{id}\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "Bulk ID",
              "pattern": "^[A-Za-z0-9]{32}",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Bulk upload entity found",
              "schema": {
                "properties": [
                  {
                    "description": "ID",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "The time of completing the bulk creation task.\nNull when creating bulk upload or delete.\n",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "completed_at",
                    "entity_fieldname": "completed_at",
                    "_key": "completed_at"
                  },
                  {
                    "description": "The time of receiving the bulk creation task.\n",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The number of enrollment identities with failed processing.\n",
                    "example": 0,
                    "type": "integer",
                    "api_fieldname": "errors_count",
                    "entity_fieldname": "errors_count",
                    "_key": "errors_count"
                  },
                  {
                    "description": "Link to error report file.\nNull when creating bulk upload or delete.\n",
                    "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/errors_report.csv",
                    "type": "string",
                    "api_fieldname": "errors_report_file",
                    "entity_fieldname": "errors_report_file",
                    "_key": "errors_report_file"
                  },
                  {
                    "description": "etag",
                    "example": "1",
                    "pattern": "[A-Za-z0-9]{0,256}",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Link to full report file.\nNull when creating bulk upload or delete.\n",
                    "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/full_report.csv",
                    "type": "string",
                    "api_fieldname": "full_report_file",
                    "entity_fieldname": "full_report_file",
                    "_key": "full_report_file"
                  },
                  {
                    "description": "Bulk ID",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "enum": [
                      "enrollment-identity-bulk-uploads"
                    ],
                    "example": "enrollment-identity-bulk-uploads",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The number of enrollment identities processed until now.\n",
                    "example": 0,
                    "type": "integer",
                    "api_fieldname": "processed_count",
                    "entity_fieldname": "processed_count",
                    "_key": "processed_count"
                  },
                  {
                    "default": "new",
                    "description": "The state of the process is 'new' at the time of creation. If the creation is still in progress, the state is shown as 'processing'. When the request has been fully processed, the state changes to 'completed'.\n",
                    "enum": [
                      "new",
                      "processing",
                      "completed"
                    ],
                    "example": "new",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Total number of enrollment identities found in the input CSV.\n",
                    "example": 10,
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "object",
                  "id",
                  "etag",
                  "created_at",
                  "account_id",
                  "status",
                  "total_count",
                  "processed_count",
                  "errors_count",
                  "completet_at",
                  "full_report_file",
                  "errors_report_file"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_enrollment_bulk_delete"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request. The bulk identity is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/device-enrollments-bulk-uploads/{id}",
          "summary": "Get bulk upload entity",
          "return_type": "device_enrollment_bulk_create",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_enrollment_bulk_create"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "completed_at",
            "created_at",
            "errors_count",
            "errors_report_file",
            "full_report_file",
            "processed_count",
            "status",
            "total_count"
          ],
          "group_id": "Devices",
          "operation_id": "getBulkDeviceEnrollment",
          "pagination": false,
          "_key": "read"
        }
      ],
      "fields": [
        {
          "description": "ID",
          "example": "00005a4e027f0a580a01081c00000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "The time of completing the bulk creation task.\nNull when creating bulk upload or delete.\n",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "completed_at",
          "readOnly": true,
          "required": false,
          "_key": "completed_at"
        },
        {
          "description": "The time of receiving the bulk creation task.\n",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "The number of enrollment identities with failed processing.\n",
          "example": 0,
          "type": "integer",
          "api_fieldname": "errors_count",
          "readOnly": true,
          "required": false,
          "_key": "errors_count"
        },
        {
          "description": "Link to error report file.\nNull when creating bulk upload or delete.\n",
          "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/errors_report.csv",
          "type": "string",
          "api_fieldname": "errors_report_file",
          "readOnly": true,
          "required": false,
          "_key": "errors_report_file"
        },
        {
          "description": "Link to full report file.\nNull when creating bulk upload or delete.\n",
          "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/full_report.csv",
          "type": "string",
          "api_fieldname": "full_report_file",
          "readOnly": true,
          "required": false,
          "_key": "full_report_file"
        },
        {
          "description": "Bulk ID",
          "pattern": "^[A-Za-z0-9]{32}",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "description": "The number of enrollment identities processed until now.\n",
          "example": 0,
          "type": "integer",
          "api_fieldname": "processed_count",
          "readOnly": true,
          "required": false,
          "_key": "processed_count"
        },
        {
          "default": "new",
          "description": "The state of the process is 'new' at the time of creation. If the creation is still in progress, the state is shown as 'processing'. When the request has been fully processed, the state changes to 'completed'.\n",
          "enum": [
            "new",
            "processing",
            "completed"
          ],
          "example": "new",
          "type": "string",
          "api_fieldname": "status",
          "readOnly": true,
          "required": false,
          "enum_reference": "device_enrollment_bulk_create_status_enum",
          "_key": "status"
        },
        {
          "description": "Total number of enrollment identities found in the input CSV.\n",
          "example": 10,
          "type": "integer",
          "api_fieldname": "total_count",
          "readOnly": true,
          "required": false,
          "_key": "total_count"
        }
      ],
      "field_renames": [],
      "tags": [
        "Public API"
      ],
      "group_id": "Devices",
      "_key": "device_enrollment_bulk_create"
    },
    {
      "swagger_models": [
        "BulkResponse"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "With bulk delete, you can upload a `CSV` file containing a number of enrollment IDs to be deleted.\n\n**Example usage:**\n```\ncurl -X POST \\\n-H 'Authorization: Bearer <valid access token>' \\\n-F 'enrollment_identities=@/path/to/enrollments/enrollments.csv' \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-deletes\n\n```\n**The validation rules for an CSV file.**\n1. The first line in the uploaded CSV file is assumed to be the header and is ignored.\n1. Each line can contain comma-separated values, where the first value is always assumed to be the Enrollment ID. Everything after the first comma is ignored.\n1. Valid enrollments begin with A followed by a - and 95 characters in the format as below.\n1. Up to one enrollment ID is expected per line. Empty lines are ignored.\n1. Trailing comma at the end of the line is optional.\n1. Lines are terminated with either a line feed \\n, a carriage return \\r, or both together \\r\\n.\n1. Leading and trailing whitespace characters (Unicode U+0000 - U+0020) are removed from the identity before validation.\n1. Empty identities are ignored.\n1. Valid enrollment identities may be enclosed within quotes. Whitespace inside quotes is not trimmed and will fail validation. Empty quotes are also considered to be an invalid enrollment identity.\n1. UTF-8 encoding is expected.\n\n\n**A valid enrollment file:**\n```\n\"Examples of valid identites, notes\"\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\",\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12\"\nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12\nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:24:44:71:22:15:43:23:12, This text is ignored,\n A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:60:25:48:44:71:22:15:43:23:12       , Whitespace is trimmed before validation\n  \"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:60:25:48:44:71:22:15:43:23:12\"       , Whitespace around quotes is also trimmed\n\n```\n\n**A file containing invalid identities:**\n```\n\"A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12\", First line is ignored\nA_4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12, Invalid version identifier\nA-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:25:48:44:71:22:15:43:23:12, Too short identity\n\"\", Empty quotes are an invalid identity\n\" A-4E:63:2D:AE:14:BC:D1:09:77:21:95:44:ED:34:06:57:1E:03:B1:EF:0E:F2:59:44:71:93:23:22:15:43:23:12 \", Whitespace inside quotes is not trimmed causing an error\n\n```\n\n**An empty file:**\n```\n\"Examples of blank lines that are ignored\"\n\n,,\n, This is also considered to a blank line\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "The `CSV` file containing the enrollment IDs. The maximum file size is 10MB.",
              "in": "stream",
              "name": "enrollment_identities",
              "required": true,
              "type": "file",
              "entity_fieldname": "enrollment_identities",
              "api_fieldname": "enrollment_identities",
              "external_param": true,
              "parameter_fieldname": "enrollment_identities",
              "_key": "enrollment_identities"
            }
          ],
          "method": "post",
          "mode": "delete",
          "responses": [
            {
              "description": "Bulk delete data has been received and asynchronous processing has been started.",
              "schema": {
                "properties": [
                  {
                    "description": "ID",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "The time of completing the bulk creation task.\nNull when creating bulk upload or delete.\n",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "completed_at",
                    "entity_fieldname": "completed_at",
                    "_key": "completed_at"
                  },
                  {
                    "description": "The time of receiving the bulk creation task.\n",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The number of enrollment identities with failed processing.\n",
                    "example": 0,
                    "type": "integer",
                    "api_fieldname": "errors_count",
                    "entity_fieldname": "errors_count",
                    "_key": "errors_count"
                  },
                  {
                    "description": "Link to error report file.\nNull when creating bulk upload or delete.\n",
                    "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/errors_report.csv",
                    "type": "string",
                    "api_fieldname": "errors_report_file",
                    "entity_fieldname": "errors_report_file",
                    "_key": "errors_report_file"
                  },
                  {
                    "description": "etag",
                    "example": "1",
                    "pattern": "[A-Za-z0-9]{0,256}",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Link to full report file.\nNull when creating bulk upload or delete.\n",
                    "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/full_report.csv",
                    "type": "string",
                    "api_fieldname": "full_report_file",
                    "entity_fieldname": "full_report_file",
                    "_key": "full_report_file"
                  },
                  {
                    "description": "Bulk ID",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "enum": [
                      "enrollment-identity-bulk-uploads"
                    ],
                    "example": "enrollment-identity-bulk-uploads",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The number of enrollment identities processed until now.\n",
                    "example": 0,
                    "type": "integer",
                    "api_fieldname": "processed_count",
                    "entity_fieldname": "processed_count",
                    "_key": "processed_count"
                  },
                  {
                    "default": "new",
                    "description": "The state of the process is 'new' at the time of creation. If the creation is still in progress, the state is shown as 'processing'. When the request has been fully processed, the state changes to 'completed'.\n",
                    "enum": [
                      "new",
                      "processing",
                      "completed"
                    ],
                    "example": "new",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Total number of enrollment identities found in the input CSV.\n",
                    "example": 10,
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "object",
                  "id",
                  "etag",
                  "created_at",
                  "account_id",
                  "status",
                  "total_count",
                  "processed_count",
                  "errors_count",
                  "completet_at",
                  "full_report_file",
                  "errors_report_file"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_enrollment_bulk_create"
                }
              },
              "_key": "201"
            },
            {
              "description": "Bad request.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            }
          ],
          "path": "/v3/device-enrollments-bulk-deletes",
          "summary": "Bulk delete",
          "return_type": "device_enrollment_bulk_delete",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_enrollment_bulk_delete"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "completed_at",
            "created_at",
            "errors_count",
            "errors_report_file",
            "full_report_file",
            "id",
            "processed_count",
            "status",
            "total_count"
          ],
          "group_id": "Devices",
          "operation_id": "deleteBulkDeviceEnrollment",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "This method will download the CSV file containing detailed information on status of the bulk enrollment.",
          "field_renames": [],
          "fields": [],
          "method": null,
          "mode": "download_errors_report_file",
          "responses": [],
          "path": null,
          "summary": "Download the error report file for the bulk enrollment deletion.",
          "return_type": "file",
          "return_info": {
            "self": false,
            "custom": true,
            "type": "file"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Devices",
          "custom_method": "download_errors_report_file",
          "spec": {
            "summary": "Download the error report file for the bulk enrollment deletion.",
            "description": "This method will download the CSV file containing detailed information on status of the bulk enrollment.",
            "return_type": "file"
          },
          "_key": "download_errors_report_file"
        },
        {
          "description": "This method will download the CSV file containing detailed information on status of the bulk enrollment.",
          "field_renames": [],
          "fields": [],
          "method": null,
          "mode": "download_full_report_file",
          "responses": [],
          "path": null,
          "summary": "Download the full report file for the bulk enrollment deletion.",
          "return_type": "file",
          "return_info": {
            "self": false,
            "custom": true,
            "type": "file"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Devices",
          "custom_method": "download_full_report_file",
          "spec": {
            "summary": "Download the full report file for the bulk enrollment deletion.",
            "description": "This method will download the CSV file containing detailed information on status of the bulk enrollment.",
            "return_type": "file"
          },
          "_key": "download_full_report_file"
        },
        {
          "description": "Provides information on bulk delete for the given ID. For example, the bulk status and the number of processed enrollment identities. Also links to the bulk delete reports are provided.\n**Report file format:**\nThe report files have a header line and the value are separated by commas. The lines are delimited by a line break (CRLF). The report file is compliant with IETF Informal CSV common format [RFC 4180](https://tools.ietf.org/html/rfc4180).\nAn example of a full report file:\n```\n\"entity__id\",\"entity__deleted_at\",\"error__code\",\"error__type\",\"error__message\",\"error__fields\"\n\"A-F9:AA:AA:AA:DE:31:C7:30:72:55:27:AE:8B:E1:1C:6F:42:7D:06:CF:FB:18:6F:59:48:29:B3:98:4B:76:8F:9E\",\"2018-09-07T12:10:58.428Z\",\"\",\"\",\"\",\"\"\n\"A-FF:AA:AA:AA:3B:43:EB:D7:C7:30:03:5F:C8:D0:15:91:70:C2:5D:4F:EB:24:E9:3A:BB:D8:3C:FE:20:EA:B1:72\",\"2018-09-07T12:10:58.428Z\",\"\",\"\",\"\",\"\"\n```\nAn example of an error report file:\n```\n\"entity__id\",\"error__code\",\"error__type\",\"error__message\",\"error__fields\"\n\"A-F9:AA:AA:AA:DE:31:C7:30:72:55:27:AE:8B:E1:1C:6F:42:7D:06:CF:FB:18:6F:59:48:29:B3:98:4B:76:8F:9E\",\"409\",\"duplicate\",\"Enrollment identity is already claimed in the mbed Cloud.\",\"\"\n\"A-FF:AA:AA:AA:3B:43:EB:D7:C7:30:03:5F:C8:D0:15:91:70:C2:5D:4F:EB:24:E9:3A:BB:D8:3C:FE:20:EA:B1:72\",\"409\",\"duplicate\",\"Enrollment identity is already claimed in the mbed Cloud.\",\"\"\n```\n**Example usage:**\n```\ncurl -X GET \\\n-H 'Authorization: Bearer <valid access token>' \\\nhttps://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-deletes/{id}\n```\n",
          "field_renames": [],
          "fields": [
            {
              "description": "Bulk ID",
              "pattern": "^[A-Za-z0-9]{32}",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Bulk delete entity found",
              "schema": {
                "properties": [
                  {
                    "description": "ID",
                    "example": "00005a4e027f0a580a01081c00000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "The time of completing the bulk creation task.\nNull when creating bulk upload or delete.\n",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "completed_at",
                    "entity_fieldname": "completed_at",
                    "_key": "completed_at"
                  },
                  {
                    "description": "The time of receiving the bulk creation task.\n",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "The number of enrollment identities with failed processing.\n",
                    "example": 0,
                    "type": "integer",
                    "api_fieldname": "errors_count",
                    "entity_fieldname": "errors_count",
                    "_key": "errors_count"
                  },
                  {
                    "description": "Link to error report file.\nNull when creating bulk upload or delete.\n",
                    "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/errors_report.csv",
                    "type": "string",
                    "api_fieldname": "errors_report_file",
                    "entity_fieldname": "errors_report_file",
                    "_key": "errors_report_file"
                  },
                  {
                    "description": "etag",
                    "example": "1",
                    "pattern": "[A-Za-z0-9]{0,256}",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Link to full report file.\nNull when creating bulk upload or delete.\n",
                    "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/full_report.csv",
                    "type": "string",
                    "api_fieldname": "full_report_file",
                    "entity_fieldname": "full_report_file",
                    "_key": "full_report_file"
                  },
                  {
                    "description": "Bulk ID",
                    "pattern": "^[A-Za-z0-9]{32}",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "enum": [
                      "enrollment-identity-bulk-uploads"
                    ],
                    "example": "enrollment-identity-bulk-uploads",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The number of enrollment identities processed until now.\n",
                    "example": 0,
                    "type": "integer",
                    "api_fieldname": "processed_count",
                    "entity_fieldname": "processed_count",
                    "_key": "processed_count"
                  },
                  {
                    "default": "new",
                    "description": "The state of the process is 'new' at the time of creation. If the creation is still in progress, the state is shown as 'processing'. When the request has been fully processed, the state changes to 'completed'.\n",
                    "enum": [
                      "new",
                      "processing",
                      "completed"
                    ],
                    "example": "new",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Total number of enrollment identities found in the input CSV.\n",
                    "example": 10,
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "object",
                  "id",
                  "etag",
                  "created_at",
                  "account_id",
                  "status",
                  "total_count",
                  "processed_count",
                  "errors_count",
                  "completet_at",
                  "full_report_file",
                  "errors_report_file"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_enrollment_bulk_create"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request. The bulk identity is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/device-enrollments-bulk-deletes/{id}",
          "summary": "Get bulk delete entity",
          "return_type": "device_enrollment_bulk_delete",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_enrollment_bulk_delete"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "completed_at",
            "created_at",
            "errors_count",
            "errors_report_file",
            "full_report_file",
            "processed_count",
            "status",
            "total_count"
          ],
          "group_id": "Devices",
          "operation_id": "getBulkDeviceEnrollmentDelete",
          "pagination": false,
          "_key": "read"
        }
      ],
      "fields": [
        {
          "description": "ID",
          "example": "00005a4e027f0a580a01081c00000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "The time of completing the bulk creation task.\nNull when creating bulk upload or delete.\n",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "completed_at",
          "readOnly": true,
          "required": false,
          "_key": "completed_at"
        },
        {
          "description": "The time of receiving the bulk creation task.\n",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "The number of enrollment identities with failed processing.\n",
          "example": 0,
          "type": "integer",
          "api_fieldname": "errors_count",
          "readOnly": true,
          "required": false,
          "_key": "errors_count"
        },
        {
          "description": "Link to error report file.\nNull when creating bulk upload or delete.\n",
          "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/errors_report.csv",
          "type": "string",
          "api_fieldname": "errors_report_file",
          "readOnly": true,
          "required": false,
          "_key": "errors_report_file"
        },
        {
          "description": "Link to full report file.\nNull when creating bulk upload or delete.\n",
          "example": "https://api.us-east-1.mbedcloud.com/v3/device-enrollments-bulk-uploads/2d238a89038b4ddb84699dd36a901063/full_report.csv",
          "type": "string",
          "api_fieldname": "full_report_file",
          "readOnly": true,
          "required": false,
          "_key": "full_report_file"
        },
        {
          "description": "Bulk ID",
          "pattern": "^[A-Za-z0-9]{32}",
          "type": "string",
          "api_fieldname": "id",
          "parameter_fieldname": "id",
          "in": "path",
          "required": true,
          "readOnly": false,
          "_key": "id"
        },
        {
          "description": "The number of enrollment identities processed until now.\n",
          "example": 0,
          "type": "integer",
          "api_fieldname": "processed_count",
          "readOnly": true,
          "required": false,
          "_key": "processed_count"
        },
        {
          "default": "new",
          "description": "The state of the process is 'new' at the time of creation. If the creation is still in progress, the state is shown as 'processing'. When the request has been fully processed, the state changes to 'completed'.\n",
          "enum": [
            "new",
            "processing",
            "completed"
          ],
          "example": "new",
          "type": "string",
          "api_fieldname": "status",
          "readOnly": true,
          "required": false,
          "enum_reference": "device_enrollment_bulk_delete_status_enum",
          "_key": "status"
        },
        {
          "description": "Total number of enrollment identities found in the input CSV.\n",
          "example": 10,
          "type": "integer",
          "api_fieldname": "total_count",
          "readOnly": true,
          "required": false,
          "_key": "total_count"
        }
      ],
      "field_renames": [],
      "tags": [
        "Public API"
      ],
      "group_id": "Devices",
      "_key": "device_enrollment_bulk_delete"
    },
    {
      "swagger_models": [
        "DeviceEventData",
        "DeviceEventPage"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "List all device events for an account.",
          "field_renames": [],
          "fields": [
            {
              "example": null,
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "description": "The ID of The item after which to retrieve the next page.",
              "in": "query",
              "name": "after",
              "external_param": true,
              "parameter_fieldname": "after",
              "required": false,
              "_key": "after"
            },
            {
              "description": "Comma-separated list of data fields to return. Currently supported: `total_count`",
              "in": "query",
              "name": "include",
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "required": false,
              "_key": "include"
            },
            {
              "example": 1000,
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "description": "How many objects to retrieve in the page. The minimum limit is 2 and the maximum is 1000. Limit values outside of this range are set to the closest limit.",
              "in": "query",
              "maximum": 1000,
              "minimum": 2,
              "name": "limit",
              "external_param": true,
              "parameter_fieldname": "limit",
              "required": false,
              "_key": "limit"
            },
            {
              "example": "DESC",
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "description": "The order of the records based on creation time, `ASC` or `DESC`; by default `ASC`.",
              "in": "query",
              "name": "order",
              "external_param": true,
              "parameter_fieldname": "order",
              "required": false,
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "Request successful.",
              "schema": {
                "properties": [
                  {
                    "example": null,
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "example": "[]",
                    "items": {
                      "properties": [
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "example": [],
                          "type": "object",
                          "_key": "changes"
                        },
                        {
                          "example": "2017-05-22T12:37:55.576563Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Additional data relevant to the event.",
                          "example": {
                            "campaign_id": "00000000000000000000000000000000"
                          },
                          "type": "object",
                          "_key": "data"
                        },
                        {
                          "example": "2017-05-22T12:37:55.576563Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "date_time"
                        },
                        {
                          "example": "Device record created",
                          "type": "string",
                          "_key": "description"
                        },
                        {
                          "example": "00000000000000000000000000000000",
                          "type": "string",
                          "_key": "device_id"
                        },
                        {
                          "example": "2017-05-22T12:37:55.576563Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Event code",
                          "example": "UPD2_100",
                          "maxLength": 100,
                          "type": "string",
                          "_key": "event_type"
                        },
                        {
                          "description": "Category code which groups the event type by a summary category.",
                          "example": "FAIL_MANIFEST_REJECTED",
                          "type": "string",
                          "_key": "event_type_category"
                        },
                        {
                          "description": "Generic description of the event",
                          "example": "FAIL",
                          "type": "string",
                          "_key": "event_type_description"
                        },
                        {
                          "example": "00000000000000000000000000000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "The API resource entity.",
                          "example": "device-event",
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "type": "boolean",
                          "_key": "state_change"
                        }
                      ],
                      "required": [
                        "date_time",
                        "id"
                      ],
                      "foreign_key": {
                        "group": "Devices",
                        "entity": "device_events"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "example": 1000,
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "example": "list",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "example": "DESC",
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "example": 1,
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "pagination": true,
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_events"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad Request.",
              "_key": "400"
            },
            {
              "description": "Not authenticated.",
              "_key": "401"
            },
            {
              "description": "Unable to find page.",
              "_key": "404"
            }
          ],
          "path": "/v3/device-events/",
          "summary": "List all device events.",
          "return_type": "paginated_response(device_events)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_events"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count"
          ],
          "foreign_key_priority": "self",
          "group_id": "Devices",
          "operation_id": "Device_Event_list",
          "pagination": true,
          "foreign_key": {
            "group": "Devices",
            "entity": "device_events"
          },
          "_key": "list"
        },
        {
          "description": "Retrieve a specific device event.",
          "field_renames": [],
          "fields": [
            {
              "example": "00000000000000000000000000000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "device_event_id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Retrieved result successfully.",
              "schema": {
                "properties": [
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "example": [],
                    "type": "object",
                    "api_fieldname": "changes",
                    "entity_fieldname": "changes",
                    "_key": "changes"
                  },
                  {
                    "example": "2017-05-22T12:37:55.576563Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Additional data relevant to the event.",
                    "example": {
                      "campaign_id": "00000000000000000000000000000000"
                    },
                    "type": "object",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "example": "2017-05-22T12:37:55.576563Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "date_time",
                    "entity_fieldname": "date_time",
                    "_key": "date_time"
                  },
                  {
                    "example": "Device record created",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "example": "00000000000000000000000000000000",
                    "type": "string",
                    "api_fieldname": "device_id",
                    "entity_fieldname": "device_id",
                    "_key": "device_id"
                  },
                  {
                    "example": "2017-05-22T12:37:55.576563Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Event code",
                    "example": "UPD2_100",
                    "maxLength": 100,
                    "type": "string",
                    "api_fieldname": "event_type",
                    "entity_fieldname": "event_type",
                    "_key": "event_type"
                  },
                  {
                    "description": "Category code which groups the event type by a summary category.",
                    "example": "FAIL_MANIFEST_REJECTED",
                    "type": "string",
                    "api_fieldname": "event_type_category",
                    "entity_fieldname": "event_type_category",
                    "_key": "event_type_category"
                  },
                  {
                    "description": "Generic description of the event",
                    "example": "FAIL",
                    "type": "string",
                    "api_fieldname": "event_type_description",
                    "entity_fieldname": "event_type_description",
                    "_key": "event_type_description"
                  },
                  {
                    "example": "00000000000000000000000000000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "The API resource entity.",
                    "example": "device-event",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "type": "boolean",
                    "api_fieldname": "state_change",
                    "entity_fieldname": "state_change",
                    "_key": "state_change"
                  }
                ],
                "required": [
                  "date_time",
                  "id"
                ],
                "foreign_key": {
                  "group": "Devices",
                  "entity": "device_events"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad Request.",
              "_key": "400"
            },
            {
              "description": "Not authenticated.",
              "_key": "401"
            },
            {
              "description": "Unable to find device.",
              "_key": "404"
            }
          ],
          "path": "/v3/device-events/{device_event_id}/",
          "summary": "Retrieve a device event.",
          "return_type": "device_events",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "device_events"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "changes",
            "created_at",
            "data",
            "date_time",
            "description",
            "device_id",
            "event_type",
            "event_type_category",
            "event_type_description",
            "state_change"
          ],
          "group_id": "Devices",
          "operation_id": "Device_Event_retrieve",
          "parameter_map": {
            "device_event_id": "id"
          },
          "pagination": false,
          "_key": "read"
        }
      ],
      "fields": [
        {
          "additionalProperties": {
            "type": "string"
          },
          "example": [],
          "type": "object",
          "api_fieldname": "changes",
          "readOnly": true,
          "required": false,
          "_key": "changes"
        },
        {
          "example": "2017-05-22T12:37:55.576563Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional data relevant to the event.",
          "example": {
            "campaign_id": "00000000000000000000000000000000"
          },
          "type": "object",
          "api_fieldname": "data",
          "readOnly": true,
          "required": false,
          "_key": "data"
        },
        {
          "example": "2017-05-22T12:37:55.576563Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "date_time",
          "readOnly": true,
          "required": false,
          "_key": "date_time"
        },
        {
          "example": "Device record created",
          "type": "string",
          "api_fieldname": "description",
          "readOnly": true,
          "required": false,
          "_key": "description"
        },
        {
          "example": "00000000000000000000000000000000",
          "type": "string",
          "api_fieldname": "device_id",
          "readOnly": true,
          "required": false,
          "_key": "device_id"
        },
        {
          "description": "Event code",
          "example": "UPD2_100",
          "maxLength": 100,
          "type": "string",
          "api_fieldname": "event_type",
          "readOnly": true,
          "required": false,
          "_key": "event_type"
        },
        {
          "description": "Category code which groups the event type by a summary category.",
          "example": "FAIL_MANIFEST_REJECTED",
          "type": "string",
          "api_fieldname": "event_type_category",
          "readOnly": true,
          "required": false,
          "_key": "event_type_category"
        },
        {
          "description": "Generic description of the event",
          "example": "FAIL",
          "type": "string",
          "api_fieldname": "event_type_description",
          "readOnly": true,
          "required": false,
          "_key": "event_type_description"
        },
        {
          "example": "00000000000000000000000000000000",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "type": "boolean",
          "api_fieldname": "state_change",
          "readOnly": true,
          "required": false,
          "_key": "state_change"
        }
      ],
      "field_renames": [],
      "tags": [],
      "group_id": "Devices",
      "_key": "device_events"
    },
    {
      "swagger_models": [
        "LoginHistory"
      ],
      "primary_key_field": null,
      "methods": [],
      "fields": [
        {
          "description": "UTC time RFC3339 for this login attempt.",
          "example": "2018-02-14T17:52:07Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "date",
          "readOnly": true,
          "required": false,
          "_key": "date"
        },
        {
          "description": "IP address of the client.",
          "example": "127.0.0.1",
          "type": "string",
          "api_fieldname": "ip_address",
          "readOnly": true,
          "required": false,
          "_key": "ip_address"
        },
        {
          "description": "Flag indicating whether login attempt was successful or not.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "success",
          "readOnly": true,
          "required": false,
          "_key": "success"
        },
        {
          "description": "User Agent header from the login request.",
          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
          "type": "string",
          "api_fieldname": "user_agent",
          "readOnly": true,
          "required": false,
          "_key": "user_agent"
        }
      ],
      "field_renames": [],
      "tags": [],
      "group_id": "Accounts",
      "_key": "login_history"
    },
    {
      "swagger_models": [
        "LoginProfile"
      ],
      "primary_key_field": "id",
      "methods": [],
      "fields": [
        {
          "description": "ID of the identity provider.",
          "type": "string",
          "readOnly": false,
          "_override": true,
          "api_fieldname": "id",
          "required": false,
          "_key": "id"
        },
        {
          "description": "Name of the identity provider.",
          "readOnly": false,
          "type": "string",
          "_override": true,
          "api_fieldname": "name",
          "required": false,
          "_key": "name"
        }
      ],
      "field_renames": [],
      "tags": [],
      "group_id": "Accounts",
      "_key": "login_profile"
    },
    {
      "swagger_models": [
        "ParentAccountInfo"
      ],
      "primary_key_field": "id",
      "methods": [],
      "fields": [
        {
          "description": "The email address of the admin user who is the contact person of the parent account.",
          "example": "info@arm.com",
          "type": "string",
          "api_fieldname": "admin_email",
          "readOnly": true,
          "required": false,
          "_key": "admin_email"
        },
        {
          "description": "The name of the admin user who is the contact person of the parent account.",
          "example": "J. Doe",
          "type": "string",
          "api_fieldname": "admin_name",
          "readOnly": true,
          "required": false,
          "_key": "admin_name"
        },
        {
          "description": "The ID of the parent account",
          "example": "01619571dad80242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": true,
          "required": false,
          "_key": "id"
        }
      ],
      "field_renames": [],
      "tags": [],
      "group_id": "Accounts",
      "_key": "parent_account"
    },
    {
      "swagger_models": [
        "PasswordPolicy"
      ],
      "primary_key_field": null,
      "methods": [],
      "fields": [
        {
          "description": "Minimum length for the password. A number between 8 and 512.",
          "example": "8",
          "type": "string",
          "api_fieldname": "minimum_length",
          "readOnly": true,
          "required": false,
          "_key": "minimum_length"
        }
      ],
      "field_renames": [],
      "tags": [],
      "group_id": "Accounts",
      "_key": "password_policy"
    },
    {
      "swagger_models": [
        "FeaturePolicy"
      ],
      "primary_key_field": null,
      "methods": [],
      "fields": [
        {
          "description": "Comma separated list of actions, empty string represents all actions.",
          "example": "GET",
          "type": "string",
          "api_fieldname": "action",
          "readOnly": true,
          "required": false,
          "_key": "action"
        },
        {
          "description": "True or false controlling whether an action is allowed or not.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "allow",
          "readOnly": true,
          "required": false,
          "_key": "allow"
        },
        {
          "description": "Feature name corresponding to this policy.",
          "example": "update-campaigns",
          "type": "string",
          "api_fieldname": "feature",
          "readOnly": true,
          "required": false,
          "_key": "feature"
        },
        {
          "description": "Flag indicating whether this feature is inherited or overwritten specifically.",
          "example": false,
          "type": "boolean",
          "api_fieldname": "inherited",
          "readOnly": true,
          "required": false,
          "_key": "inherited"
        },
        {
          "description": "Resource that is protected by this policy.",
          "example": "/v3/update-campaign",
          "type": "string",
          "api_fieldname": "resource",
          "readOnly": true,
          "required": false,
          "_key": "resource"
        }
      ],
      "field_renames": [],
      "tags": [],
      "group_id": "Accounts",
      "_key": "policy"
    },
    {
      "swagger_models": [
        "ServerCredentialsResponseData"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "This REST API is intended to be used by customers to fetch bootstrap server credentials that they will need to use with their clients to connect to bootstrap server.\n\n**Example usage:**\ncurl -X GET \"http://api.us-east-1.mbedcloud.com/v3/server-credentials/bootstrap\" -H \"accept: application/json\" -H \"Authorization: Bearer THE_ACCESS_TOKEN\"\n",
          "field_renames": [],
          "fields": [],
          "method": "get",
          "mode": "get_bootstrap",
          "responses": [
            {
              "description": "Bootstrap server credentials fetched successfully.",
              "examples": [
                {
                  "created_at": "2017-12-11T14:22:20.009Z",
                  "etag": "1",
                  "id": "015fee4431fd38c98640fbfb00000000",
                  "object": "server-credentials",
                  "server_certificate": "-----BEGIN CERTIFICATE-----\\nMIICNTCCAdugAwIBAgIQXCeldn1YhYpDkaBhq8+mWTAKBggqhkjOPQQDAjByMQsw\\nCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNVBAcTCUNh\\nbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIEludGVncmF0\\naW9uIEJvb3RzdHJhcENBMCAXDTE3MDUxNTE5NDkxMVoYDzIwNTIwNTE1MTk1OTEw\\nWjByMQswCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNV\\nBAcTCUNhbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIElu\\ndGVncmF0aW9uIEJvb3RzdHJhcENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE\\ni3yGw4hU5l/gV04brCmC6n2RAGOnSgW8VMVxJzMZGy76Qfh6mgxd/LM3AZnFyb54\\nWx3ssBod3ORvVwT0Osqo0qNRME8wCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMB\\nAf8wHQYDVR0OBBYEFBPvafpiPwCG9AW4tuay8dtpELQ5MBAGCSsGAQQBgjcVAQQD\\nAgEAMAoGCCqGSM49BAMCA0gAMEUCIQCiUIgPVegmSeb1cYYzKQVM+f0fFJiShdlc\\nSAKewnmoWQIgPv48oL/TDxWDVrzy+hYmesFoqryRPGlENvl0oYJ2em4=\\n-----END CERTIFICATE-----",
                  "server_uri": "coaps://coap.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000",
                  "_key": "Success"
                }
              ],
              "schema": {
                "properties": [
                  {
                    "description": "Creation UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "API resource entity version.",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "mUUID that uniquely identifies the entity.",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Entity name, always 'server-credentials'",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "PEM format X.509 server certificate that will be used to validate the server certificate that will be received during the TLS/DTLS handshake.",
                    "type": "string",
                    "api_fieldname": "server_certificate",
                    "entity_fieldname": "server_certificate",
                    "_key": "server_certificate"
                  },
                  {
                    "description": "Server URI to which the client needs to connect to.",
                    "type": "string",
                    "api_fieldname": "server_uri",
                    "entity_fieldname": "server_uri",
                    "_key": "server_uri"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "server_credentials"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "examples": [
                {
                  "code": 401,
                  "message": "Provided access token is not valid.",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "invalid_auth",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            }
          ],
          "path": "/v3/server-credentials/bootstrap",
          "summary": "Fetch bootstrap server credentials.",
          "return_type": "server_credentials",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "server_credentials"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "id",
            "server_certificate",
            "server_uri"
          ],
          "group_id": "Security",
          "operation_id": "getBootstrapServerCredentials",
          "additional_operations": [
            {
              "operation_id": "getAllServerCredentials",
              "notes": "The information returned by this endpoint can be obtained by calling `get_bootstrap`."
            }
          ],
          "pagination": false,
          "_key": "get_bootstrap"
        },
        {
          "description": "This REST API is intended to be used by customers to fetch LwM2M server credentials that they will need to use with their clients to connect to LwM2M server.\n\n**Example usage:**\ncurl -X GET \"http://api.us-east-1.mbedcloud.com/v3/server-credentials/lwm2m\" -H \"accept: application/json\" -H \"Authorization: Bearer THE_ACCESS_TOKEN\"\n",
          "field_renames": [],
          "fields": [],
          "method": "get",
          "mode": "get_lwm2m",
          "responses": [
            {
              "description": "LwM2M server credentials fetched successfully.",
              "examples": [
                {
                  "created_at": "2017-12-11T14:22:20.009Z",
                  "etag": "1",
                  "id": "015fee4431fd38c98640fbfb00000000",
                  "object": "server-credentials",
                  "server_certificate": "-----BEGIN CERTIFICATE-----\\nMIICNTCCAdugAwIBAgIQXCeldn1YhYpDkaBhq8+mWTAKBggqhkjOPQQDAjByMQsw\\nCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNVBAcTCUNh\\nbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIEludGVncmF0\\naW9uIEJvb3RzdHJhcENBMCAXDTE3MDUxNTE5NDkxMVoYDzIwNTIwNTE1MTk1OTEw\\nWjByMQswCQYDVQQGEwJHQjEXMBUGA1UECBMOQ2FtYnJpZGdlc2hpcmUxEjAQBgNV\\nBAcTCUNhbWJyaWRnZTEQMA4GA1UEChMHQVJNIEx0ZDEkMCIGA1UEAxMbQVJNIElu\\ndGVncmF0aW9uIEJvb3RzdHJhcENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE\\ni3yGw4hU5l/gV04brCmC6n2RAGOnSgW8VMVxJzMZGy76Qfh6mgxd/LM3AZnFyb54\\nWx3ssBod3ORvVwT0Osqo0qNRME8wCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMB\\nAf8wHQYDVR0OBBYEFBPvafpiPwCG9AW4tuay8dtpELQ5MBAGCSsGAQQBgjcVAQQD\\nAgEAMAoGCCqGSM49BAMCA0gAMEUCIQCiUIgPVegmSeb1cYYzKQVM+f0fFJiShdlc\\nSAKewnmoWQIgPv48oL/TDxWDVrzy+hYmesFoqryRPGlENvl0oYJ2em4=\\n-----END CERTIFICATE-----",
                  "server_uri": "coaps://mds.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000",
                  "_key": "Success"
                }
              ],
              "schema": {
                "properties": [
                  {
                    "description": "Creation UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "API resource entity version.",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "mUUID that uniquely identifies the entity.",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Entity name, always 'server-credentials'",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "PEM format X.509 server certificate that will be used to validate the server certificate that will be received during the TLS/DTLS handshake.",
                    "type": "string",
                    "api_fieldname": "server_certificate",
                    "entity_fieldname": "server_certificate",
                    "_key": "server_certificate"
                  },
                  {
                    "description": "Server URI to which the client needs to connect to.",
                    "type": "string",
                    "api_fieldname": "server_uri",
                    "entity_fieldname": "server_uri",
                    "_key": "server_uri"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "server_credentials"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "examples": [
                {
                  "code": 401,
                  "message": "Provided access token is not valid.",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "invalid_auth",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            }
          ],
          "path": "/v3/server-credentials/lwm2m",
          "summary": "Fetch LwM2M server credentials.",
          "return_type": "server_credentials",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "server_credentials"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "id",
            "server_certificate",
            "server_uri"
          ],
          "group_id": "Security",
          "operation_id": "getL2M2MServerCredentials",
          "additional_operations": [
            {
              "operation_id": "getAllServerCredentials",
              "notes": "The information returned by this endpoint can be obtained by calling `get_lwm2m`."
            }
          ],
          "pagination": false,
          "_key": "get_lwm2m"
        }
      ],
      "fields": [
        {
          "description": "Creation UTC time RFC3339.",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "mUUID that uniquely identifies the entity.",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": true,
          "required": false,
          "_key": "id"
        },
        {
          "description": "PEM format X.509 server certificate that will be used to validate the server certificate that will be received during the TLS/DTLS handshake.",
          "type": "string",
          "api_fieldname": "server_certificate",
          "readOnly": true,
          "required": false,
          "_key": "server_certificate"
        },
        {
          "description": "Server URI to which the client needs to connect to.",
          "type": "string",
          "api_fieldname": "server_uri",
          "readOnly": true,
          "required": false,
          "_key": "server_uri"
        }
      ],
      "field_renames": [],
      "tags": [
        "Server credentials"
      ],
      "group_id": "Security",
      "_key": "server_credentials"
    },
    {
      "swagger_models": [
        "DeveloperCertificateResponseData",
        "TrustedCertificateReq",
        "TrustedCertificateResp",
        "TrustedCertificateUpdateReq"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "An endpoint for uploading new trusted certificates.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates -d {\"name\": \"myCert1\", \"description\": \"very important cert\", \"certificate\": \"certificate_data\", \"service\": \"lwm2m\"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the account.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "account_id",
              "entity_fieldname": "account_id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "account_id"
            },
            {
              "description": "X509.v3 trusted certificate in PEM format.",
              "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
              "type": "string",
              "api_fieldname": "certificate",
              "entity_fieldname": "certificate",
              "parameter_fieldname": "certificate",
              "in": "body",
              "required": false,
              "_key": "certificate"
            },
            {
              "description": "Human readable description of this certificate.",
              "example": "Certificate created by me.",
              "type": "string",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "description": "Device execution mode where 1 means a developer certificate.",
              "example": 1,
              "format": "int32",
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "If true, signature is not required. Default value false.",
              "example": false,
              "type": "boolean",
              "api_fieldname": "enrollment_mode",
              "entity_fieldname": "enrollment_mode",
              "parameter_fieldname": "enrollment_mode",
              "in": "body",
              "required": false,
              "_key": "enrollment_mode"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            },
            {
              "description": "Certificate name.",
              "example": "My certificate",
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": false,
              "_key": "name"
            },
            {
              "description": "Service name where the certificate is to be used.",
              "enum": [
                "lwm2m",
                "bootstrap"
              ],
              "type": "string",
              "api_fieldname": "service",
              "entity_fieldname": "service",
              "parameter_fieldname": "service",
              "in": "body",
              "required": false,
              "enum_reference": "subtenant_trusted_certificate_service_enum",
              "_key": "service"
            },
            {
              "description": "Status of the certificate.",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE",
              "type": "string",
              "api_fieldname": "status",
              "entity_fieldname": "status",
              "parameter_fieldname": "status",
              "in": "body",
              "required": false,
              "enum_reference": "subtenant_trusted_certificate_status_enum",
              "_key": "status"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "New entity created.",
              "schema": {
                "description": "This object represents a trusted certificate in responses.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "X509.v3 trusted certificate in PEM format.",
                    "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                    "type": "string",
                    "api_fieldname": "certificate",
                    "entity_fieldname": "certificate",
                    "parameter_fieldname": "certificate",
                    "in": "body",
                    "required": false,
                    "_key": "certificate"
                  },
                  {
                    "description": "A SHA-256 fingerprint of the certificate.",
                    "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                    "type": "string",
                    "api_fieldname": "certificate_fingerprint",
                    "entity_fieldname": "certificate_fingerprint",
                    "_key": "certificate_fingerprint"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Human readable description of this certificate.",
                    "example": "Certificate created by me.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "parameter_fieldname": "description",
                    "in": "body",
                    "required": false,
                    "_key": "description"
                  },
                  {
                    "description": "Device execution mode where 1 means a developer certificate.",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                    "private_field": true,
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode",
                    "_key": "device_execution_mode"
                  },
                  {
                    "description": "If true, signature is not required. Default value false.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "enrollment_mode",
                    "entity_fieldname": "enrollment_mode",
                    "parameter_fieldname": "enrollment_mode",
                    "in": "body",
                    "required": false,
                    "_key": "enrollment_mode"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Entity ID.",
                    "example": "01619571d01d0242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "cert_id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "Issuer of the certificate.",
                    "example": "CN=issuer",
                    "type": "string",
                    "api_fieldname": "issuer",
                    "entity_fieldname": "issuer",
                    "_key": "issuer"
                  },
                  {
                    "description": "Certificate name.",
                    "example": "My certificate",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "parameter_fieldname": "name",
                    "in": "body",
                    "required": false,
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'trusted-cert'",
                    "enum": [
                      "trusted-cert"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The ID of the owner.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner_id",
                    "entity_fieldname": "owner_id",
                    "_key": "owner_id"
                  },
                  {
                    "description": "Service name where the certificate is to be used.",
                    "enum": [
                      "lwm2m",
                      "bootstrap"
                    ],
                    "type": "string",
                    "api_fieldname": "service",
                    "entity_fieldname": "service",
                    "parameter_fieldname": "service",
                    "in": "body",
                    "required": false,
                    "enum_reference": "trusted_certificate_service_enum",
                    "_key": "service"
                  },
                  {
                    "description": "Status of the certificate.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "parameter_fieldname": "status",
                    "in": "body",
                    "required": false,
                    "enum_reference": "trusted_certificate_status_enum",
                    "_key": "status"
                  },
                  {
                    "description": "Subject of the certificate.",
                    "example": "CN=subject",
                    "type": "string",
                    "api_fieldname": "subject",
                    "entity_fieldname": "subject",
                    "_key": "subject"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "This read-only flag indicates whether the certificate is valid or not.",
                    "example": true,
                    "readOnly": true,
                    "type": "boolean",
                    "api_fieldname": "valid",
                    "entity_fieldname": "valid",
                    "_key": "valid"
                  },
                  {
                    "description": "Expiration time in UTC formatted as RFC3339.",
                    "example": "2038-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "validity",
                    "entity_fieldname": "validity",
                    "_key": "validity"
                  }
                ],
                "required": [
                  "account_id",
                  "certificate",
                  "certificate_fingerprint",
                  "etag",
                  "id",
                  "issuer",
                  "name",
                  "object",
                  "service",
                  "subject",
                  "validity"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "201"
            },
            {
              "description": "Invalid certificate data, certificate validation failed, certificate already expired or certificate uses unsupported, weak cipher.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden, only available for admins of commercial accounts.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account with the given ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/trusted-certificates",
          "summary": "Upload new trusted certificate.",
          "return_type": "subtenant_trusted_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "signature",
            "certificate_fingerprint",
            "created_at",
            "id",
            "issuer",
            "owner_id",
            "subject",
            "updated_at",
            "valid",
            "validity"
          ],
          "group_id": "Security",
          "operation_id": "addAccountCertificate",
          "notes": "Signature is not used by the SDK as it is a deprecated field.",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "An endpoint for deleting the trusted certificate.\n\n**Example usage:**\n`curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates/{cert_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "Account ID.",
              "in": "path",
              "name": "account_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "account_id",
              "api_fieldname": "account_id",
              "external_param": false,
              "parameter_fieldname": "account_id",
              "_key": "account_id"
            },
            {
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "The ID of the trusted certificate to be deleted.",
              "in": "path",
              "name": "cert_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "cert_id",
              "external_param": false,
              "parameter_fieldname": "cert_id",
              "_key": "id"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Deleted successfully.",
              "_key": "204"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden, only available for admins of commercial accounts.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Account or certificate with the given ID not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/trusted-certificates/{cert_id}",
          "summary": "Delete trusted certificate by ID.",
          "return_type": "subtenant_trusted_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Security",
          "operation_id": "deleteAccountCertificate",
          "parameter_map": {
            "cert_id": "id"
          },
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "This REST API is intended to be used by customers to fetch an existing developer certificate (a certificate that can be flashed into multiple devices to connect to bootstrap server).\n\n**Example usage:**\ncurl -X GET \"http://api.us-east-1.mbedcloud.com/v3/developer-certificates/THE_CERTIFICATE_ID\" -H \"accept: application/json\" -H \"Authorization: Bearer THE_ACCESS_TOKEN\"\n",
          "field_renames": [],
          "fields": [
            {
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "mUUID that uniquely identifies the developer certificate.",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "developerCertificateId",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            }
          ],
          "method": "get",
          "mode": "get_developer_certificate_info",
          "responses": [
            {
              "description": "Developer certificate fetched successfully.",
              "examples": [
                {
                  "account_id": "015fee5d9b3538c98640fbfb00000000",
                  "created_at": "2017-12-11T14:22:20.009Z",
                  "description": "This certificate will be used with multiple developer devices",
                  "developer_certificate": "-----BEGIN CERTIFICATE-----\\nMIICcDCCAhWgAwIBAgIRAPSBbBtLUE/ekQcWE4GzPJEwCgYIKoZIzj0EAwIwgaIx\\nCzAJBgNVBAYTAkdCMRcwFQYDVQQIDA5DYW1icmlkZ2VzaGlyZTESMBAGA1UEBwwJ\\nQ2FtYnJpZGdlMRAwDgYDVQQKDAdBUk0gTHRkMSkwJwYDVQQLDCAwMTU4NDNlMzJl\\nYzkwMjQyMGEwMTVlMDcwMDAwMDAwMDEpMCcGA1UEAwwgMDE2MWRiYmNkZDY2MGE1\\nODBhMDEwYzM0MDNjMDAwMDAwHhcNMTgwMjI4MDkyNzIzWhcNMjgwMjI4MDkyNzIz\\nWjCBojELMAkGA1UEBhMCR0IxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMRIwEAYD\\nVQQHDAlDYW1icmlkZ2UxEDAOBgNVBAoMB0FSTSBMdGQxKTAnBgNVBAsMIDAxNTg0\\nM2UzMmVjOTAyNDIwYTAxNWUwNzAwMDAwMDAwMSkwJwYDVQQDDCAwMTYxZGJiY2Rk\\nNjYwYTU4MGEwMTBjMzQwM2MwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEScLDbOXvOb903AYlI9ow8E4hbLSHJPt5E2BO4Q4bHOpuWH2Oh6P+CDPte9pAv3\\nE6g90Xk/ZcZpQ+xBO6qci/ajKjAoMBIGCSsGAQQBoCCBSQQFAgNAAJEwEgYDVR0T\\nAQH/BAgwBgEB/wIBADAKBggqhkjOPQQDAgNJADBGAiEAsi9zSK8Njl22GoEHrsg8\\nQlwFnrkkP9d6FyLFtmqndt4CIQCmVHwisYNcCkqD2SWctG1xQHo0HZePAQW8PstM\\nzhNupQ==\\n-----END CERTIFICATE-----\\n",
                  "developer_private_key": "-----BEGIN PRIVATE KEY-----\\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgeKc97aC1Z4aniXVG\\njNSvvXw2hl6zwACYIs88OKQx61GgCgYIKoZIzj0DAQehRANCAAREnCw2zl7zm/dN\\nwGJSPaMPBOIWy0hyT7eRNgTuEOGxzqblh9joej/ggz7XvaQL9xOoPdF5P2XGaUPs\\nQTuqnIv2\\n-----END PRIVATE KEY-----\\n",
                  "etag": "1",
                  "id": "015fee4431fd38c98640fbfb00000000",
                  "name": "DeveloperCertificate",
                  "object": "trusted-cert",
                  "security_file_content": "/*\\n * Copyright (c) 2017 ARM Limited. All rights reserved.\\n * SPDX-License-Identifier: Apache-2.0\\n * Licensed under the Apache License, Version 2.0 (the License); you may\\n * not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an AS IS BASIS, WITHOUT\\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n#ifndef __MBED_CLOUD_DEV_CREDENTIALS_H__\\n#define __MBED_CLOUD_DEV_CREDENTIALS_H__\\n\\n#include <inttypes.h>\\n\\nconst char MBED_CLOUD_DEV_BOOTSTRAP_ENDPOINT_NAME[] = \\\"0161dbbcdd660a580a010c3403c00000\\\";\\nconst char MBED_CLOUD_DEV_ACCOUNT_ID[] = \\\"015843e32ec902420a015e0700000000\\\";\\nconst char MBED_CLOUD_DEV_BOOTSTRAP_SERVER_URI[] = \\\"coaps://coap.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000\\\";\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x70, 0x30, 0x82, 0x02, 0x15,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x11, 0x00,\\n 0xf4, 0x81, 0x6c, 0x1b, 0x4b, 0x50, 0x4f, 0xde,\\n 0x91, 0x07, 0x16, 0x13, 0x81, 0xb3, 0x3c, 0x91,\\n 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x04, 0x03, 0x02, 0x30, 0x81, 0xa2, 0x31,\\n 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,\\n 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30, 0x15,\\n 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0e, 0x43,\\n 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,\\n 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12, 0x30,\\n 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x09,\\n 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67,\\n 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55,\\n 0x04, 0x0a, 0x0c, 0x07, 0x41, 0x52, 0x4d, 0x20,\\n 0x4c, 0x74, 0x64, 0x31, 0x29, 0x30, 0x27, 0x06,\\n 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x20, 0x30, 0x31,\\n 0x35, 0x38, 0x34, 0x33, 0x65, 0x33, 0x32, 0x65,\\n 0x63, 0x39, 0x30, 0x32, 0x34, 0x32, 0x30, 0x61,\\n 0x30, 0x31, 0x35, 0x65, 0x30, 0x37, 0x30, 0x30,\\n 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x29,\\n 0x30, 0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,\\n 0x20, 0x30, 0x31, 0x36, 0x31, 0x64, 0x62, 0x62,\\n 0x63, 0x64, 0x64, 0x36, 0x36, 0x30, 0x61, 0x35,\\n 0x38, 0x30, 0x61, 0x30, 0x31, 0x30, 0x63, 0x33,\\n 0x34, 0x30, 0x33, 0x63, 0x30, 0x30, 0x30, 0x30,\\n 0x30, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x38, 0x30,\\n 0x32, 0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32,\\n 0x33, 0x5a, 0x17, 0x0d, 0x32, 0x38, 0x30, 0x32,\\n 0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32, 0x33,\\n 0x5a, 0x30, 0x81, 0xa2, 0x31, 0x0b, 0x30, 0x09,\\n 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47,\\n 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55,\\n 0x04, 0x08, 0x0c, 0x0e, 0x43, 0x61, 0x6d, 0x62,\\n 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68, 0x69,\\n 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03,\\n 0x55, 0x04, 0x07, 0x0c, 0x09, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31, 0x10,\\n 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c,\\n 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64,\\n 0x31, 0x29, 0x30, 0x27, 0x06, 0x03, 0x55, 0x04,\\n 0x0b, 0x0c, 0x20, 0x30, 0x31, 0x35, 0x38, 0x34,\\n 0x33, 0x65, 0x33, 0x32, 0x65, 0x63, 0x39, 0x30,\\n 0x32, 0x34, 0x32, 0x30, 0x61, 0x30, 0x31, 0x35,\\n 0x65, 0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x30,\\n 0x30, 0x30, 0x30, 0x31, 0x29, 0x30, 0x27, 0x06,\\n 0x03, 0x55, 0x04, 0x03, 0x0c, 0x20, 0x30, 0x31,\\n 0x36, 0x31, 0x64, 0x62, 0x62, 0x63, 0x64, 0x64,\\n 0x36, 0x36, 0x30, 0x61, 0x35, 0x38, 0x30, 0x61,\\n 0x30, 0x31, 0x30, 0x63, 0x33, 0x34, 0x30, 0x33,\\n 0x63, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x59,\\n 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48,\\n 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00,\\n 0x04, 0x44, 0x9c, 0x2c, 0x36, 0xce, 0x5e, 0xf3,\\n 0x9b, 0xf7, 0x4d, 0xc0, 0x62, 0x52, 0x3d, 0xa3,\\n 0x0f, 0x04, 0xe2, 0x16, 0xcb, 0x48, 0x72, 0x4f,\\n 0xb7, 0x91, 0x36, 0x04, 0xee, 0x10, 0xe1, 0xb1,\\n 0xce, 0xa6, 0xe5, 0x87, 0xd8, 0xe8, 0x7a, 0x3f,\\n 0xe0, 0x83, 0x3e, 0xd7, 0xbd, 0xa4, 0x0b, 0xf7,\\n 0x13, 0xa8, 0x3d, 0xd1, 0x79, 0x3f, 0x65, 0xc6,\\n 0x69, 0x43, 0xec, 0x41, 0x3b, 0xaa, 0x9c, 0x8b,\\n 0xf6, 0xa3, 0x2a, 0x30, 0x28, 0x30, 0x12, 0x06,\\n 0x09, 0x2b, 0x06, 0x01, 0x04, 0x01, 0xa0, 0x20,\\n 0x81, 0x49, 0x04, 0x05, 0x02, 0x03, 0x40, 0x00,\\n 0x91, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13,\\n 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01,\\n 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,\\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\\n 0x00, 0xb2, 0x2f, 0x73, 0x48, 0xaf, 0x0d, 0x8e,\\n 0x5d, 0xb6, 0x1a, 0x81, 0x07, 0xae, 0xc8, 0x3c,\\n 0x42, 0x5c, 0x05, 0x9e, 0xb9, 0x24, 0x3f, 0xd7,\\n 0x7a, 0x17, 0x22, 0xc5, 0xb6, 0x6a, 0xa7, 0x76,\\n 0xde, 0x02, 0x21, 0x00, 0xa6, 0x54, 0x7c, 0x22,\\n 0xb1, 0x83, 0x5c, 0x0a, 0x4a, 0x83, 0xd9, 0x25,\\n 0x9c, 0xb4, 0x6d, 0x71, 0x40, 0x7a, 0x34, 0x1d,\\n 0x97, 0x8f, 0x01, 0x05, 0xbc, 0x3e, 0xcb, 0x4c,\\n 0xce, 0x13, 0x6e, 0xa5 };\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x35, 0x30, 0x82, 0x01, 0xdb,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x5c,\\n 0x27, 0xa5, 0x76, 0x7d, 0x58, 0x85, 0x8a, 0x43,\\n 0x91, 0xa0, 0x61, 0xab, 0xcf, 0xa6, 0x59, 0x30,\\n 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x04, 0x03, 0x02, 0x30, 0x72, 0x31, 0x0b, 0x30,\\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\\n 0x55, 0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,\\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\\n 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a,\\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\\n 0x64, 0x31, 0x24, 0x30, 0x22, 0x06, 0x03, 0x55,\\n 0x04, 0x03, 0x13, 0x1b, 0x41, 0x52, 0x4d, 0x20,\\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\\n 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74,\\n 0x73, 0x74, 0x72, 0x61, 0x70, 0x43, 0x41, 0x30,\\n 0x20, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x35, 0x31,\\n 0x35, 0x31, 0x39, 0x34, 0x39, 0x31, 0x31, 0x5a,\\n 0x18, 0x0f, 0x32, 0x30, 0x35, 0x32, 0x30, 0x35,\\n 0x31, 0x35, 0x31, 0x39, 0x35, 0x39, 0x31, 0x30,\\n 0x5a, 0x30, 0x72, 0x31, 0x0b, 0x30, 0x09, 0x06,\\n 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47, 0x42,\\n 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04,\\n 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d, 0x62, 0x72,\\n 0x69, 0x64, 0x67, 0x65, 0x73, 0x68, 0x69, 0x72,\\n 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55,\\n 0x04, 0x07, 0x13, 0x09, 0x43, 0x61, 0x6d, 0x62,\\n 0x72, 0x69, 0x64, 0x67, 0x65, 0x31, 0x10, 0x30,\\n 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x07,\\n 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64, 0x31,\\n 0x24, 0x30, 0x22, 0x06, 0x03, 0x55, 0x04, 0x03,\\n 0x13, 0x1b, 0x41, 0x52, 0x4d, 0x20, 0x49, 0x6e,\\n 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,\\n 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,\\n 0x72, 0x61, 0x70, 0x43, 0x41, 0x30, 0x59, 0x30,\\n 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04,\\n 0x8b, 0x7c, 0x86, 0xc3, 0x88, 0x54, 0xe6, 0x5f,\\n 0xe0, 0x57, 0x4e, 0x1b, 0xac, 0x29, 0x82, 0xea,\\n 0x7d, 0x91, 0x00, 0x63, 0xa7, 0x4a, 0x05, 0xbc,\\n 0x54, 0xc5, 0x71, 0x27, 0x33, 0x19, 0x1b, 0x2e,\\n 0xfa, 0x41, 0xf8, 0x7a, 0x9a, 0x0c, 0x5d, 0xfc,\\n 0xb3, 0x37, 0x01, 0x99, 0xc5, 0xc9, 0xbe, 0x78,\\n 0x5b, 0x1d, 0xec, 0xb0, 0x1a, 0x1d, 0xdc, 0xe4,\\n 0x6f, 0x57, 0x04, 0xf4, 0x3a, 0xca, 0xa8, 0xd2,\\n 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b, 0x06, 0x03,\\n 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03, 0x02, 0x01,\\n 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13,\\n 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01,\\n 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d,\\n 0x0e, 0x04, 0x16, 0x04, 0x14, 0x13, 0xef, 0x69,\\n 0xfa, 0x62, 0x3f, 0x00, 0x86, 0xf4, 0x05, 0xb8,\\n 0xb6, 0xe6, 0xb2, 0xf1, 0xdb, 0x69, 0x10, 0xb4,\\n 0x39, 0x30, 0x10, 0x06, 0x09, 0x2b, 0x06, 0x01,\\n 0x04, 0x01, 0x82, 0x37, 0x15, 0x01, 0x04, 0x03,\\n 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a,\\n 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,\\n 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xa2,\\n 0x50, 0x88, 0x0f, 0x55, 0xe8, 0x26, 0x49, 0xe6,\\n 0xf5, 0x71, 0x86, 0x33, 0x29, 0x05, 0x4c, 0xf9,\\n 0xfd, 0x1f, 0x14, 0x98, 0x92, 0x85, 0xd9, 0x5c,\\n 0x48, 0x02, 0x9e, 0xc2, 0x79, 0xa8, 0x59, 0x02,\\n 0x20, 0x3e, 0xfe, 0x3c, 0xa0, 0xbf, 0xd3, 0x0f,\\n 0x15, 0x83, 0x56, 0xbc, 0xf2, 0xfa, 0x16, 0x26,\\n 0x7a, 0xc1, 0x68, 0xaa, 0xbc, 0x91, 0x3c, 0x69,\\n 0x44, 0x36, 0xf9, 0x74, 0xa1, 0x82, 0x76, 0x7a,\\n 0x6e };\\n\\nconst uint8_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x30, 0x30, 0x82, 0x01, 0xd5,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x26,\\n 0xf9, 0x08, 0xfc, 0xf1, 0xc0, 0x46, 0xa4, 0x4a,\\n 0x4d, 0x2c, 0xf1, 0x94, 0x27, 0xf9, 0x1f, 0x30,\\n 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x04, 0x03, 0x02, 0x30, 0x6f, 0x31, 0x0b, 0x30,\\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\\n 0x55, 0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,\\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\\n 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a,\\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\\n 0x64, 0x31, 0x21, 0x30, 0x1f, 0x06, 0x03, 0x55,\\n 0x04, 0x03, 0x13, 0x18, 0x41, 0x52, 0x4d, 0x20,\\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\\n 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x57, 0x4d, 0x32,\\n 0x4d, 0x20, 0x43, 0x41, 0x30, 0x20, 0x17, 0x0d,\\n 0x31, 0x37, 0x30, 0x32, 0x31, 0x32, 0x31, 0x30,\\n 0x33, 0x37, 0x35, 0x32, 0x5a, 0x18, 0x0f, 0x32,\\n 0x30, 0x35, 0x32, 0x30, 0x32, 0x31, 0x32, 0x31,\\n 0x30, 0x34, 0x37, 0x35, 0x32, 0x5a, 0x30, 0x6f,\\n 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04,\\n 0x06, 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30,\\n 0x15, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x0e,\\n 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67,\\n 0x65, 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12,\\n 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13,\\n 0x09, 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64,\\n 0x67, 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03,\\n 0x55, 0x04, 0x0a, 0x13, 0x07, 0x41, 0x52, 0x4d,\\n 0x20, 0x4c, 0x74, 0x64, 0x31, 0x21, 0x30, 0x1f,\\n 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x18, 0x41,\\n 0x52, 0x4d, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x67,\\n 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c,\\n 0x57, 0x4d, 0x32, 0x4d, 0x20, 0x43, 0x41, 0x30,\\n 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48,\\n 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86,\\n 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,\\n 0x00, 0x04, 0xba, 0xea, 0x80, 0x01, 0x2d, 0xf0,\\n 0xe1, 0xb6, 0xc5, 0x5f, 0xf9, 0x76, 0x84, 0x31,\\n 0xa9, 0x29, 0xa1, 0xc7, 0xa8, 0xfd, 0xa0, 0xad,\\n 0xd9, 0x94, 0xe7, 0xec, 0x5a, 0x33, 0xa1, 0x2c,\\n 0x8e, 0x36, 0x43, 0x9b, 0x18, 0xdf, 0xce, 0x71,\\n 0x14, 0x24, 0xb1, 0xfb, 0x16, 0x34, 0x0e, 0x43,\\n 0xfc, 0x23, 0x77, 0xd4, 0x13, 0xd7, 0x11, 0xaa,\\n 0x39, 0x60, 0xab, 0xa2, 0xdf, 0x24, 0xb3, 0xeb,\\n 0xa0, 0xc5, 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b,\\n 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03,\\n 0x02, 0x01, 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55,\\n 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30,\\n 0x03, 0x01, 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03,\\n 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7b,\\n 0xa1, 0xa5, 0x94, 0xa5, 0xe5, 0x8f, 0x95, 0x5d,\\n 0xd4, 0xce, 0xdc, 0x0f, 0x8a, 0xbe, 0xad, 0x9a,\\n 0x6b, 0x66, 0x3e, 0x30, 0x10, 0x06, 0x09, 0x2b,\\n 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x15, 0x01,\\n 0x04, 0x03, 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,\\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\\n 0x00, 0xd2, 0x06, 0x28, 0xc5, 0x31, 0x3a, 0x11,\\n 0x8d, 0xb6, 0xcb, 0x2b, 0x3f, 0xdd, 0x2a, 0x9a,\\n 0x13, 0x30, 0x52, 0x77, 0xaa, 0xda, 0xda, 0xcb,\\n 0xce, 0xb9, 0x5c, 0xe4, 0x32, 0x1c, 0x02, 0xfa,\\n 0x30, 0x02, 0x21, 0x00, 0xb3, 0x82, 0x24, 0xa2,\\n 0xb1, 0x67, 0x6b, 0x69, 0x07, 0x0e, 0xcd, 0x77,\\n 0x74, 0x99, 0x06, 0x9c, 0x59, 0xb2, 0x00, 0xc0,\\n 0xb3, 0xbb, 0x37, 0x5b, 0xc0, 0x1b, 0xfb, 0xd9,\\n 0x70, 0x98, 0xb9, 0x1e };\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY[] = \\n{ 0x30, 0x81, 0x93, 0x02, 0x01, 0x00, 0x30, 0x13,\\n 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,\\n 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x03, 0x01, 0x07, 0x04, 0x79, 0x30, 0x77, 0x02,\\n 0x01, 0x01, 0x04, 0x20, 0x78, 0xa7, 0x3d, 0xed,\\n 0xa0, 0xb5, 0x67, 0x86, 0xa7, 0x89, 0x75, 0x46,\\n 0x8c, 0xd4, 0xaf, 0xbd, 0x7c, 0x36, 0x86, 0x5e,\\n 0xb3, 0xc0, 0x00, 0x98, 0x22, 0xcf, 0x3c, 0x38,\\n 0xa4, 0x31, 0xeb, 0x51, 0xa0, 0x0a, 0x06, 0x08,\\n 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,\\n 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x44, 0x9c,\\n 0x2c, 0x36, 0xce, 0x5e, 0xf3, 0x9b, 0xf7, 0x4d,\\n 0xc0, 0x62, 0x52, 0x3d, 0xa3, 0x0f, 0x04, 0xe2,\\n 0x16, 0xcb, 0x48, 0x72, 0x4f, 0xb7, 0x91, 0x36,\\n 0x04, 0xee, 0x10, 0xe1, 0xb1, 0xce, 0xa6, 0xe5,\\n 0x87, 0xd8, 0xe8, 0x7a, 0x3f, 0xe0, 0x83, 0x3e,\\n 0xd7, 0xbd, 0xa4, 0x0b, 0xf7, 0x13, 0xa8, 0x3d,\\n 0xd1, 0x79, 0x3f, 0x65, 0xc6, 0x69, 0x43, 0xec,\\n 0x41, 0x3b, 0xaa, 0x9c, 0x8b, 0xf6 };\\n\\nconst char MBED_CLOUD_DEV_MANUFACTURER[] = \\\"dev_manufacturer\\\";\\n\\nconst char MBED_CLOUD_DEV_MODEL_NUMBER[] = \\\"dev_model_num\\\";\\n\\nconst char MBED_CLOUD_DEV_SERIAL_NUMBER[] = \\\"0\\\";\\n\\nconst char MBED_CLOUD_DEV_DEVICE_TYPE[] = \\\"dev_device_type\\\";\\n\\nconst char MBED_CLOUD_DEV_HARDWARE_VERSION[] = \\\"dev_hardware_version\\\";\\n\\nconst uint32_t MBED_CLOUD_DEV_MEMORY_TOTAL_KB = 0;\\n\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY);\\n\\n#endif //__MBED_CLOUD_DEV_CREDENTIALS_H__\\n",
                  "_key": "Success"
                }
              ],
              "schema": {
                "properties": [
                  {
                    "description": "account to which the developer certificate belongs",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Description for the developer certificate.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "PEM format X.509 developer certificate.",
                    "type": "string",
                    "api_fieldname": "developer_certificate",
                    "entity_fieldname": "developer_certificate",
                    "_key": "developer_certificate"
                  },
                  {
                    "description": "PEM format developer private key associated to the certificate.",
                    "type": "string",
                    "api_fieldname": "developer_private_key",
                    "entity_fieldname": "developer_private_key",
                    "_key": "developer_private_key"
                  },
                  {
                    "description": "API resource entity version.",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "mUUID that uniquely identifies the developer certificate.",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the developer certificate.",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name, always 'trusted-cert'",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Content of the security.c file that will be flashed into the device to provide the security credentials",
                    "type": "string",
                    "api_fieldname": "security_file_content",
                    "entity_fieldname": "security_file_content",
                    "_key": "security_file_content"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "examples": [
                {
                  "code": 401,
                  "message": "Provided access token is not valid.",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "invalid_auth",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Developer certificate not found with given id.",
              "examples": [
                {
                  "code": 404,
                  "message": "Not Found. Not found: 016006724ff53ade90ed948d03c00001",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "not_found",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/developer-certificates/{developerCertificateId}",
          "summary": "Fetch an existing developer certificate to connect to the bootstrap server.",
          "return_type": "developer_certificate",
          "return_info": {
            "self": false,
            "custom": false,
            "type": "developer_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "description",
            "developer_certificate",
            "developer_private_key",
            "name",
            "security_file_content"
          ],
          "group_id": "Security",
          "operation_id": "getDeveloperCertificate",
          "unaggregated": true,
          "parameter_map": {
            "developerCertificateId": "id"
          },
          "foreign_key": {
            "entity": "developer_certificate",
            "group": "Security"
          },
          "pagination": false,
          "_key": "get_developer_certificate_info"
        },
        {
          "description": "An endpoint for retrieving a trusted certificate by ID.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates/{cert_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the account.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "account_id",
              "entity_fieldname": "account_id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "account_id"
            },
            {
              "description": "Device execution mode where 1 means a developer certificate.",
              "example": 1,
              "format": "int32",
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "Entity ID.",
              "example": "01619571d01d0242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "cert_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents a trusted certificate in responses.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "X509.v3 trusted certificate in PEM format.",
                    "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                    "type": "string",
                    "api_fieldname": "certificate",
                    "entity_fieldname": "certificate",
                    "parameter_fieldname": "certificate",
                    "in": "body",
                    "required": false,
                    "_key": "certificate"
                  },
                  {
                    "description": "A SHA-256 fingerprint of the certificate.",
                    "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                    "type": "string",
                    "api_fieldname": "certificate_fingerprint",
                    "entity_fieldname": "certificate_fingerprint",
                    "_key": "certificate_fingerprint"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Human readable description of this certificate.",
                    "example": "Certificate created by me.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "parameter_fieldname": "description",
                    "in": "body",
                    "required": false,
                    "_key": "description"
                  },
                  {
                    "description": "Device execution mode where 1 means a developer certificate.",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                    "private_field": true,
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode",
                    "_key": "device_execution_mode"
                  },
                  {
                    "description": "If true, signature is not required. Default value false.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "enrollment_mode",
                    "entity_fieldname": "enrollment_mode",
                    "parameter_fieldname": "enrollment_mode",
                    "in": "body",
                    "required": false,
                    "_key": "enrollment_mode"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Entity ID.",
                    "example": "01619571d01d0242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "cert_id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "Issuer of the certificate.",
                    "example": "CN=issuer",
                    "type": "string",
                    "api_fieldname": "issuer",
                    "entity_fieldname": "issuer",
                    "_key": "issuer"
                  },
                  {
                    "description": "Certificate name.",
                    "example": "My certificate",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "parameter_fieldname": "name",
                    "in": "body",
                    "required": false,
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'trusted-cert'",
                    "enum": [
                      "trusted-cert"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The ID of the owner.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner_id",
                    "entity_fieldname": "owner_id",
                    "_key": "owner_id"
                  },
                  {
                    "description": "Service name where the certificate is to be used.",
                    "enum": [
                      "lwm2m",
                      "bootstrap"
                    ],
                    "type": "string",
                    "api_fieldname": "service",
                    "entity_fieldname": "service",
                    "parameter_fieldname": "service",
                    "in": "body",
                    "required": false,
                    "enum_reference": "trusted_certificate_service_enum",
                    "_key": "service"
                  },
                  {
                    "description": "Status of the certificate.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "parameter_fieldname": "status",
                    "in": "body",
                    "required": false,
                    "enum_reference": "trusted_certificate_status_enum",
                    "_key": "status"
                  },
                  {
                    "description": "Subject of the certificate.",
                    "example": "CN=subject",
                    "type": "string",
                    "api_fieldname": "subject",
                    "entity_fieldname": "subject",
                    "_key": "subject"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "This read-only flag indicates whether the certificate is valid or not.",
                    "example": true,
                    "readOnly": true,
                    "type": "boolean",
                    "api_fieldname": "valid",
                    "entity_fieldname": "valid",
                    "_key": "valid"
                  },
                  {
                    "description": "Expiration time in UTC formatted as RFC3339.",
                    "example": "2038-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "validity",
                    "entity_fieldname": "validity",
                    "_key": "validity"
                  }
                ],
                "required": [
                  "account_id",
                  "certificate",
                  "certificate_fingerprint",
                  "etag",
                  "id",
                  "issuer",
                  "name",
                  "object",
                  "service",
                  "subject",
                  "validity"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden, only available for admins of commercial accounts.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Account or certificate with the given ID not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/trusted-certificates/{cert_id}",
          "summary": "Get trusted certificate by ID.",
          "return_type": "subtenant_trusted_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "certificate",
            "certificate_fingerprint",
            "created_at",
            "description",
            "enrollment_mode",
            "issuer",
            "name",
            "owner_id",
            "service",
            "status",
            "subject",
            "updated_at",
            "valid",
            "validity"
          ],
          "group_id": "Security",
          "operation_id": "getAccountCertificate",
          "parameter_map": {
            "cert_id": "id"
          },
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "An endpoint for updating existing trusted certificates.\n\n**Example usage:**\n`curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/trusted-certificates/{cert_id} -d {\"description\": \"very important cert\"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the account.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "account_id",
              "entity_fieldname": "account_id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "account_id"
            },
            {
              "description": "X509.v3 trusted certificate in PEM format.",
              "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
              "type": "string",
              "api_fieldname": "certificate",
              "entity_fieldname": "certificate",
              "parameter_fieldname": "certificate",
              "in": "body",
              "required": false,
              "_key": "certificate"
            },
            {
              "description": "Human readable description of this certificate.",
              "example": "Certificate created by me.",
              "type": "string",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "description": "Device execution mode where 1 means a developer certificate.",
              "example": 1,
              "format": "int32",
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "If true, signature is not required. Default value false.",
              "example": false,
              "type": "boolean",
              "api_fieldname": "enrollment_mode",
              "entity_fieldname": "enrollment_mode",
              "parameter_fieldname": "enrollment_mode",
              "in": "body",
              "required": false,
              "_key": "enrollment_mode"
            },
            {
              "description": "Entity ID.",
              "example": "01619571d01d0242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "cert_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            },
            {
              "description": "Certificate name.",
              "example": "My certificate",
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": false,
              "_key": "name"
            },
            {
              "description": "Service name where the certificate is to be used.",
              "enum": [
                "lwm2m",
                "bootstrap"
              ],
              "type": "string",
              "api_fieldname": "service",
              "entity_fieldname": "service",
              "parameter_fieldname": "service",
              "in": "body",
              "required": false,
              "enum_reference": "subtenant_trusted_certificate_service_enum",
              "_key": "service"
            },
            {
              "description": "Status of the certificate.",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE",
              "type": "string",
              "api_fieldname": "status",
              "entity_fieldname": "status",
              "parameter_fieldname": "status",
              "in": "body",
              "required": false,
              "enum_reference": "subtenant_trusted_certificate_status_enum",
              "_key": "status"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents a trusted certificate in responses.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "X509.v3 trusted certificate in PEM format.",
                    "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                    "type": "string",
                    "api_fieldname": "certificate",
                    "entity_fieldname": "certificate",
                    "parameter_fieldname": "certificate",
                    "in": "body",
                    "required": false,
                    "_key": "certificate"
                  },
                  {
                    "description": "A SHA-256 fingerprint of the certificate.",
                    "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                    "type": "string",
                    "api_fieldname": "certificate_fingerprint",
                    "entity_fieldname": "certificate_fingerprint",
                    "_key": "certificate_fingerprint"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Human readable description of this certificate.",
                    "example": "Certificate created by me.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "parameter_fieldname": "description",
                    "in": "body",
                    "required": false,
                    "_key": "description"
                  },
                  {
                    "description": "Device execution mode where 1 means a developer certificate.",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                    "private_field": true,
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode",
                    "_key": "device_execution_mode"
                  },
                  {
                    "description": "If true, signature is not required. Default value false.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "enrollment_mode",
                    "entity_fieldname": "enrollment_mode",
                    "parameter_fieldname": "enrollment_mode",
                    "in": "body",
                    "required": false,
                    "_key": "enrollment_mode"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Entity ID.",
                    "example": "01619571d01d0242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "cert_id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "Issuer of the certificate.",
                    "example": "CN=issuer",
                    "type": "string",
                    "api_fieldname": "issuer",
                    "entity_fieldname": "issuer",
                    "_key": "issuer"
                  },
                  {
                    "description": "Certificate name.",
                    "example": "My certificate",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "parameter_fieldname": "name",
                    "in": "body",
                    "required": false,
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'trusted-cert'",
                    "enum": [
                      "trusted-cert"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The ID of the owner.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner_id",
                    "entity_fieldname": "owner_id",
                    "_key": "owner_id"
                  },
                  {
                    "description": "Service name where the certificate is to be used.",
                    "enum": [
                      "lwm2m",
                      "bootstrap"
                    ],
                    "type": "string",
                    "api_fieldname": "service",
                    "entity_fieldname": "service",
                    "parameter_fieldname": "service",
                    "in": "body",
                    "required": false,
                    "enum_reference": "trusted_certificate_service_enum",
                    "_key": "service"
                  },
                  {
                    "description": "Status of the certificate.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "parameter_fieldname": "status",
                    "in": "body",
                    "required": false,
                    "enum_reference": "trusted_certificate_status_enum",
                    "_key": "status"
                  },
                  {
                    "description": "Subject of the certificate.",
                    "example": "CN=subject",
                    "type": "string",
                    "api_fieldname": "subject",
                    "entity_fieldname": "subject",
                    "_key": "subject"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "This read-only flag indicates whether the certificate is valid or not.",
                    "example": true,
                    "readOnly": true,
                    "type": "boolean",
                    "api_fieldname": "valid",
                    "entity_fieldname": "valid",
                    "_key": "valid"
                  },
                  {
                    "description": "Expiration time in UTC formatted as RFC3339.",
                    "example": "2038-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "validity",
                    "entity_fieldname": "validity",
                    "_key": "validity"
                  }
                ],
                "required": [
                  "account_id",
                  "certificate",
                  "certificate_fingerprint",
                  "etag",
                  "id",
                  "issuer",
                  "name",
                  "object",
                  "service",
                  "subject",
                  "validity"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Invalid certificate data, certificate validation failed, certificate already expired or certificate uses unsupported, weak cipher.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden, only available for admins of commercial accounts.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account or certificate with the given ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/trusted-certificates/{cert_id}",
          "summary": "Update trusted certificate.",
          "return_type": "subtenant_trusted_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "signature",
            "certificate_fingerprint",
            "created_at",
            "issuer",
            "owner_id",
            "subject",
            "updated_at",
            "valid",
            "validity"
          ],
          "group_id": "Security",
          "operation_id": "updateAccountCertificate",
          "parameter_map": {
            "cert_id": "id"
          },
          "notes": "Signature is not used by the SDK as it is a deprecated field.",
          "pagination": false,
          "_key": "update"
        }
      ],
      "fields": [
        {
          "description": "The ID of the account.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": false,
          "required": true,
          "_key": "account_id"
        },
        {
          "description": "X509.v3 trusted certificate in PEM format.",
          "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
          "type": "string",
          "api_fieldname": "certificate",
          "parameter_fieldname": "certificate",
          "in": "body",
          "required": true,
          "readOnly": false,
          "_key": "certificate"
        },
        {
          "description": "A SHA-256 fingerprint of the certificate.",
          "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
          "type": "string",
          "api_fieldname": "certificate_fingerprint",
          "readOnly": true,
          "required": false,
          "_key": "certificate_fingerprint"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2018-02-13T09:35:20Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "Human readable description of this certificate.",
          "example": "Certificate created by me.",
          "type": "string",
          "api_fieldname": "description",
          "parameter_fieldname": "description",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "description"
        },
        {
          "description": "Device execution mode where 1 means a developer certificate.",
          "example": 1,
          "format": "int32",
          "type": "integer",
          "private_field": true,
          "readOnly": false,
          "_override": true,
          "api_fieldname": "device_execution_mode",
          "required": false,
          "_key": "device_execution_mode"
        },
        {
          "description": "If true, signature is not required. Default value false.",
          "example": false,
          "type": "boolean",
          "api_fieldname": "enrollment_mode",
          "parameter_fieldname": "enrollment_mode",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "enrollment_mode"
        },
        {
          "description": "Entity ID.",
          "example": "01619571d01d0242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "parameter_fieldname": "cert_id",
          "in": "path",
          "required": true,
          "readOnly": false,
          "_key": "id"
        },
        {
          "description": "Whether or not this certificate is a developer certificate.",
          "example": true,
          "type": "boolean",
          "getter_custom_method": "is_developer_certificate_getter",
          "setter_custom_method": "is_developer_certificate_setter",
          "_override": true,
          "api_fieldname": "is_developer_certificate",
          "readOnly": false,
          "required": false,
          "_key": "is_developer_certificate"
        },
        {
          "description": "Issuer of the certificate.",
          "example": "CN=issuer",
          "type": "string",
          "api_fieldname": "issuer",
          "readOnly": true,
          "required": false,
          "_key": "issuer"
        },
        {
          "description": "Certificate name.",
          "example": "My certificate",
          "type": "string",
          "api_fieldname": "name",
          "parameter_fieldname": "name",
          "in": "body",
          "required": true,
          "readOnly": false,
          "_key": "name"
        },
        {
          "description": "The ID of the owner.",
          "example": "01619571dad80242ac12000600000000",
          "type": "string",
          "api_fieldname": "owner_id",
          "readOnly": true,
          "required": false,
          "_key": "owner_id"
        },
        {
          "description": "Service name where the certificate is to be used.",
          "enum": [
            "lwm2m",
            "bootstrap"
          ],
          "type": "string",
          "api_fieldname": "service",
          "parameter_fieldname": "service",
          "in": "body",
          "required": true,
          "enum_reference": "subtenant_trusted_certificate_service_enum",
          "readOnly": false,
          "_key": "service"
        },
        {
          "description": "Status of the certificate.",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "example": "ACTIVE",
          "type": "string",
          "api_fieldname": "status",
          "parameter_fieldname": "status",
          "in": "body",
          "required": false,
          "enum_reference": "subtenant_trusted_certificate_status_enum",
          "readOnly": false,
          "_key": "status"
        },
        {
          "description": "Subject of the certificate.",
          "example": "CN=subject",
          "type": "string",
          "api_fieldname": "subject",
          "readOnly": true,
          "required": false,
          "_key": "subject"
        },
        {
          "description": "Last update UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        },
        {
          "description": "This read-only flag indicates whether the certificate is valid or not.",
          "example": true,
          "readOnly": true,
          "type": "boolean",
          "api_fieldname": "valid",
          "required": false,
          "_key": "valid"
        },
        {
          "description": "Expiration time in UTC formatted as RFC3339.",
          "example": "2038-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "validity",
          "readOnly": true,
          "required": false,
          "_key": "validity"
        }
      ],
      "field_renames": [],
      "tags": [
        "Aggregator Account Admin",
        "Developer certificate"
      ],
      "group_id": "Security",
      "_key": "subtenant_trusted_certificate"
    },
    {
      "swagger_models": [
        "UserInfoReq",
        "UserInfoResp",
        "UserUpdateReq"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "An endpoint for creating or inviting a new user to the account. In case of invitation email address is used only, other attributes are set in the 2nd step.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users -d {\"email\": \"myemail@company.com\"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "The ID of the account.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "account_id",
              "entity_fieldname": "account_id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "account_id"
            },
            {
              "default": "create",
              "description": "Create or invite user.",
              "in": "query",
              "name": "action",
              "required": false,
              "type": "string",
              "entity_fieldname": "action",
              "api_fieldname": "action",
              "external_param": true,
              "parameter_fieldname": "action",
              "_key": "action"
            },
            {
              "description": "Address.",
              "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
              "type": "string",
              "api_fieldname": "address",
              "entity_fieldname": "address",
              "parameter_fieldname": "address",
              "in": "body",
              "required": false,
              "_key": "address"
            },
            {
              "description": "The email address.",
              "example": "user@arm.com",
              "type": "string",
              "api_fieldname": "email",
              "entity_fieldname": "email",
              "parameter_fieldname": "email",
              "in": "body",
              "required": false,
              "_key": "email"
            },
            {
              "description": "The full name of the user.",
              "example": "User Doe",
              "type": "string",
              "api_fieldname": "full_name",
              "entity_fieldname": "full_name",
              "parameter_fieldname": "full_name",
              "in": "body",
              "required": false,
              "_key": "full_name"
            },
            {
              "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
              "items": {
                "description": "This object represents a user login profile in Device Management.",
                "properties": [
                  {
                    "description": "ID of the identity provider.",
                    "type": "string",
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the identity provider.",
                    "readOnly": false,
                    "type": "string",
                    "_override": true,
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Identity provider type.",
                    "enum": [
                      "NATIVE",
                      "MBED",
                      "SAML2",
                      "OIDC"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "type",
                    "entity_fieldname": "type",
                    "_key": "type"
                  }
                ],
                "required": [
                  "id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "login_profile"
                }
              },
              "type": "array",
              "api_fieldname": "login_profiles",
              "entity_fieldname": "login_profiles",
              "parameter_fieldname": "login_profiles",
              "in": "body",
              "required": false,
              "_key": "login_profiles"
            },
            {
              "description": "A flag indicating that receiving marketing information has been accepted.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_marketing_accepted",
              "entity_fieldname": "marketing_accepted",
              "parameter_fieldname": "is_marketing_accepted",
              "in": "body",
              "required": false,
              "_key": "marketing_accepted"
            },
            {
              "description": "The password when creating a new user. It will be generated when not present in the request.",
              "example": "PZf9eEUH43DAPE9ULINFeuj",
              "type": "string",
              "api_fieldname": "password",
              "entity_fieldname": "password",
              "parameter_fieldname": "password",
              "in": "body",
              "required": false,
              "_key": "password"
            },
            {
              "description": "Phone number.",
              "example": "+44 (1223) 400 400",
              "type": "string",
              "api_fieldname": "phone_number",
              "entity_fieldname": "phone_number",
              "parameter_fieldname": "phone_number",
              "in": "body",
              "required": false,
              "_key": "phone_number"
            },
            {
              "description": "A flag indicating that the General Terms and Conditions has been accepted.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_gtc_accepted",
              "entity_fieldname": "terms_accepted",
              "parameter_fieldname": "is_gtc_accepted",
              "in": "body",
              "required": false,
              "_key": "terms_accepted"
            },
            {
              "description": "A username containing alphanumerical letters and -,._@+= characters.",
              "example": "admin",
              "type": "string",
              "api_fieldname": "username",
              "entity_fieldname": "username",
              "parameter_fieldname": "username",
              "in": "body",
              "required": false,
              "_key": "username"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "New entity created.",
              "schema": {
                "description": "This object represents a user in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "List of active user sessions.",
                    "items": {
                      "description": "This object represents an active user session.",
                      "properties": [
                        {
                          "description": "The UUID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "api_fieldname": "account_id",
                          "entity_fieldname": "account_id",
                          "_key": "account_id"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "The login time of the user.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "login_time",
                          "entity_fieldname": "login_time",
                          "_key": "login_time"
                        },
                        {
                          "description": "Entity name: always 'user-session'",
                          "enum": [
                            "user-session"
                          ],
                          "type": "string",
                          "api_fieldname": "object",
                          "entity_fieldname": "object",
                          "_key": "object"
                        },
                        {
                          "description": "The reference token.",
                          "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                          "type": "string",
                          "api_fieldname": "reference_token",
                          "entity_fieldname": "reference_token",
                          "_key": "reference_token"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "account_id",
                        "ip_address",
                        "login_time",
                        "object",
                        "reference_token",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "active_session"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "active_sessions",
                    "entity_fieldname": "active_sessions",
                    "_key": "active_sessions"
                  },
                  {
                    "description": "Address.",
                    "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
                    "type": "string",
                    "api_fieldname": "address",
                    "entity_fieldname": "address",
                    "parameter_fieldname": "address",
                    "in": "body",
                    "required": false,
                    "_key": "address"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "A timestamp of the user creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "User's account specific custom properties. The value is a string.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "The email address.",
                    "example": "user@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "parameter_fieldname": "email",
                    "in": "body",
                    "required": false,
                    "_key": "email"
                  },
                  {
                    "description": "A flag indicating whether the user's email address has been verified or not.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "email_verified",
                    "entity_fieldname": "email_verified",
                    "_key": "email_verified"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The full name of the user.",
                    "example": "User Doe",
                    "type": "string",
                    "api_fieldname": "full_name",
                    "entity_fieldname": "full_name",
                    "parameter_fieldname": "full_name",
                    "in": "body",
                    "required": false,
                    "_key": "full_name"
                  },
                  {
                    "description": "A list of group IDs this user belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "name": "groups",
                    "in": "body",
                    "schema_param": true,
                    "external_param": true,
                    "parameter_fieldname": "groups",
                    "required": false,
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the user.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "user_id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "A flag indicating that the General Terms and Conditions has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_gtc_accepted",
                    "entity_fieldname": "terms_accepted",
                    "parameter_fieldname": "is_gtc_accepted",
                    "in": "body",
                    "required": false,
                    "_key": "is_gtc_accepted"
                  },
                  {
                    "description": "A flag indicating that receiving marketing information has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_marketing_accepted",
                    "entity_fieldname": "marketing_accepted",
                    "parameter_fieldname": "is_marketing_accepted",
                    "in": "body",
                    "required": false,
                    "_key": "is_marketing_accepted"
                  },
                  {
                    "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_totp_enabled",
                    "entity_fieldname": "two_factor_authentication",
                    "parameter_fieldname": "is_totp_enabled",
                    "in": "body",
                    "required": false,
                    "_key": "is_totp_enabled"
                  },
                  {
                    "description": "A timestamp of the latest login of the user, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
                    "items": {
                      "description": "This object represents an entry in login history.",
                      "properties": [
                        {
                          "description": "UTC time RFC3339 for this login attempt.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "date",
                          "entity_fieldname": "date",
                          "_key": "date"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "Flag indicating whether login attempt was successful or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "success",
                          "entity_fieldname": "success",
                          "_key": "success"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "date",
                        "ip_address",
                        "success",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_history"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_history",
                    "entity_fieldname": "login_history",
                    "_key": "login_history"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "parameter_fieldname": "login_profiles",
                    "in": "body",
                    "required": false,
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user'",
                    "enum": [
                      "user"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The password when creating a new user. It will be generated when not present in the request.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "password",
                    "entity_fieldname": "password",
                    "parameter_fieldname": "password",
                    "in": "body",
                    "required": false,
                    "_key": "password"
                  },
                  {
                    "description": "A timestamp of the latest change of the user password, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "password_changed_time",
                    "entity_fieldname": "password_changed_time",
                    "_key": "password_changed_time"
                  },
                  {
                    "description": "Phone number.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "parameter_fieldname": "phone_number",
                    "in": "body",
                    "required": false,
                    "_key": "phone_number"
                  },
                  {
                    "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
                    "enum": [
                      "ENROLLING",
                      "INVITED",
                      "ACTIVE",
                      "RESET",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "parameter_fieldname": "status",
                    "in": "body",
                    "required": false,
                    "_key": "status"
                  },
                  {
                    "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "totp_scratch_codes",
                    "entity_fieldname": "totp_scratch_codes",
                    "_key": "totp_scratch_codes"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "A username containing alphanumerical letters and -,._@+= characters.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "username",
                    "entity_fieldname": "username",
                    "parameter_fieldname": "username",
                    "in": "body",
                    "required": false,
                    "_key": "username"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "status"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user"
                }
              },
              "_key": "201"
            },
            {
              "description": "Error in input data, for example an invalid email address.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            },
            {
              "description": "A user with the given username or email already exists.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "409"
            }
          ],
          "path": "/v3/accounts/{account_id}/users",
          "summary": "Create a new user.",
          "return_type": "subtenant_user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "active_sessions",
            "created_at",
            "creation_time",
            "custom_fields",
            "email_verified",
            "id",
            "last_login_time",
            "login_history",
            "password_changed_time",
            "status",
            "totp_scratch_codes",
            "updated_at",
            "two_factor_authentication"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "createAccountUser",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "An endpoint for deleting a user.\n\n**Example usage:**\n`curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "Account ID.",
              "in": "path",
              "name": "account_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "account_id",
              "api_fieldname": "account_id",
              "external_param": false,
              "parameter_fieldname": "account_id",
              "_key": "account_id"
            },
            {
              "description": "The ID of the user to be deleted.",
              "in": "path",
              "name": "user_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "user_id",
              "external_param": false,
              "parameter_fieldname": "user_id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Deleted successfully.",
              "_key": "204"
            },
            {
              "description": "Bad request, for example trying to delete an active user.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account or a user with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/users/{user_id}",
          "summary": "Delete a user.",
          "return_type": "subtenant_user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "deleteAccountUser",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "An endpoint for retrieving details of the user.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "The ID of the account.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "account_id",
              "entity_fieldname": "account_id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "account_id"
            },
            {
              "description": "The ID of the user.",
              "example": "01619571e2e89242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "user_id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents a user in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "List of active user sessions.",
                    "items": {
                      "description": "This object represents an active user session.",
                      "properties": [
                        {
                          "description": "The UUID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "api_fieldname": "account_id",
                          "entity_fieldname": "account_id",
                          "_key": "account_id"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "The login time of the user.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "login_time",
                          "entity_fieldname": "login_time",
                          "_key": "login_time"
                        },
                        {
                          "description": "Entity name: always 'user-session'",
                          "enum": [
                            "user-session"
                          ],
                          "type": "string",
                          "api_fieldname": "object",
                          "entity_fieldname": "object",
                          "_key": "object"
                        },
                        {
                          "description": "The reference token.",
                          "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                          "type": "string",
                          "api_fieldname": "reference_token",
                          "entity_fieldname": "reference_token",
                          "_key": "reference_token"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "account_id",
                        "ip_address",
                        "login_time",
                        "object",
                        "reference_token",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "active_session"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "active_sessions",
                    "entity_fieldname": "active_sessions",
                    "_key": "active_sessions"
                  },
                  {
                    "description": "Address.",
                    "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
                    "type": "string",
                    "api_fieldname": "address",
                    "entity_fieldname": "address",
                    "parameter_fieldname": "address",
                    "in": "body",
                    "required": false,
                    "_key": "address"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "A timestamp of the user creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "User's account specific custom properties. The value is a string.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "The email address.",
                    "example": "user@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "parameter_fieldname": "email",
                    "in": "body",
                    "required": false,
                    "_key": "email"
                  },
                  {
                    "description": "A flag indicating whether the user's email address has been verified or not.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "email_verified",
                    "entity_fieldname": "email_verified",
                    "_key": "email_verified"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The full name of the user.",
                    "example": "User Doe",
                    "type": "string",
                    "api_fieldname": "full_name",
                    "entity_fieldname": "full_name",
                    "parameter_fieldname": "full_name",
                    "in": "body",
                    "required": false,
                    "_key": "full_name"
                  },
                  {
                    "description": "A list of group IDs this user belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "name": "groups",
                    "in": "body",
                    "schema_param": true,
                    "external_param": true,
                    "parameter_fieldname": "groups",
                    "required": false,
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the user.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "user_id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "A flag indicating that the General Terms and Conditions has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_gtc_accepted",
                    "entity_fieldname": "terms_accepted",
                    "parameter_fieldname": "is_gtc_accepted",
                    "in": "body",
                    "required": false,
                    "_key": "is_gtc_accepted"
                  },
                  {
                    "description": "A flag indicating that receiving marketing information has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_marketing_accepted",
                    "entity_fieldname": "marketing_accepted",
                    "parameter_fieldname": "is_marketing_accepted",
                    "in": "body",
                    "required": false,
                    "_key": "is_marketing_accepted"
                  },
                  {
                    "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_totp_enabled",
                    "entity_fieldname": "two_factor_authentication",
                    "parameter_fieldname": "is_totp_enabled",
                    "in": "body",
                    "required": false,
                    "_key": "is_totp_enabled"
                  },
                  {
                    "description": "A timestamp of the latest login of the user, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
                    "items": {
                      "description": "This object represents an entry in login history.",
                      "properties": [
                        {
                          "description": "UTC time RFC3339 for this login attempt.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "date",
                          "entity_fieldname": "date",
                          "_key": "date"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "Flag indicating whether login attempt was successful or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "success",
                          "entity_fieldname": "success",
                          "_key": "success"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "date",
                        "ip_address",
                        "success",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_history"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_history",
                    "entity_fieldname": "login_history",
                    "_key": "login_history"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "parameter_fieldname": "login_profiles",
                    "in": "body",
                    "required": false,
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user'",
                    "enum": [
                      "user"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The password when creating a new user. It will be generated when not present in the request.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "password",
                    "entity_fieldname": "password",
                    "parameter_fieldname": "password",
                    "in": "body",
                    "required": false,
                    "_key": "password"
                  },
                  {
                    "description": "A timestamp of the latest change of the user password, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "password_changed_time",
                    "entity_fieldname": "password_changed_time",
                    "_key": "password_changed_time"
                  },
                  {
                    "description": "Phone number.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "parameter_fieldname": "phone_number",
                    "in": "body",
                    "required": false,
                    "_key": "phone_number"
                  },
                  {
                    "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
                    "enum": [
                      "ENROLLING",
                      "INVITED",
                      "ACTIVE",
                      "RESET",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "parameter_fieldname": "status",
                    "in": "body",
                    "required": false,
                    "_key": "status"
                  },
                  {
                    "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "totp_scratch_codes",
                    "entity_fieldname": "totp_scratch_codes",
                    "_key": "totp_scratch_codes"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "A username containing alphanumerical letters and -,._@+= characters.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "username",
                    "entity_fieldname": "username",
                    "parameter_fieldname": "username",
                    "in": "body",
                    "required": false,
                    "_key": "username"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "status"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account or user with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/users/{user_id}",
          "summary": "Details of the user.",
          "return_type": "subtenant_user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "active_sessions",
            "address",
            "created_at",
            "creation_time",
            "custom_fields",
            "email",
            "email_verified",
            "full_name",
            "last_login_time",
            "login_history",
            "login_profiles",
            "password",
            "password_changed_time",
            "phone_number",
            "status",
            "totp_scratch_codes",
            "updated_at",
            "username",
            "two_factor_authentication",
            "terms_accepted",
            "marketing_accepted"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "getAccountUser",
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "An endpoint for updating user details.\n\n**Example usage:**\n`curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id} -d '{\"username\": \"myusername\"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "The ID of the account.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "account_id",
              "entity_fieldname": "account_id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "account_id"
            },
            {
              "description": "Address.",
              "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
              "type": "string",
              "api_fieldname": "address",
              "entity_fieldname": "address",
              "parameter_fieldname": "address",
              "in": "body",
              "required": false,
              "_key": "address"
            },
            {
              "description": "The full name of the user.",
              "example": "User Doe",
              "type": "string",
              "api_fieldname": "full_name",
              "entity_fieldname": "full_name",
              "parameter_fieldname": "full_name",
              "in": "body",
              "required": false,
              "_key": "full_name"
            },
            {
              "description": "The ID of the user.",
              "example": "01619571e2e89242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "user_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
              "items": {
                "description": "This object represents a user login profile in Device Management.",
                "properties": [
                  {
                    "description": "ID of the identity provider.",
                    "type": "string",
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the identity provider.",
                    "readOnly": false,
                    "type": "string",
                    "_override": true,
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Identity provider type.",
                    "enum": [
                      "NATIVE",
                      "MBED",
                      "SAML2",
                      "OIDC"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "type",
                    "entity_fieldname": "type",
                    "_key": "type"
                  }
                ],
                "required": [
                  "id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "login_profile"
                }
              },
              "type": "array",
              "api_fieldname": "login_profiles",
              "entity_fieldname": "login_profiles",
              "parameter_fieldname": "login_profiles",
              "in": "body",
              "required": false,
              "_key": "login_profiles"
            },
            {
              "description": "A flag indicating that receiving marketing information has been accepted.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_marketing_accepted",
              "entity_fieldname": "marketing_accepted",
              "parameter_fieldname": "is_marketing_accepted",
              "in": "body",
              "required": false,
              "_key": "marketing_accepted"
            },
            {
              "description": "Phone number.",
              "example": "+44 (1223) 400 400",
              "type": "string",
              "api_fieldname": "phone_number",
              "entity_fieldname": "phone_number",
              "parameter_fieldname": "phone_number",
              "in": "body",
              "required": false,
              "_key": "phone_number"
            },
            {
              "description": "A flag indicating that the General Terms and Conditions has been accepted.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_gtc_accepted",
              "entity_fieldname": "terms_accepted",
              "parameter_fieldname": "is_gtc_accepted",
              "in": "body",
              "required": false,
              "_key": "terms_accepted"
            },
            {
              "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_totp_enabled",
              "entity_fieldname": "two_factor_authentication",
              "parameter_fieldname": "is_totp_enabled",
              "in": "body",
              "required": false,
              "_key": "two_factor_authentication"
            },
            {
              "description": "A username containing alphanumerical letters and -,._@+= characters.",
              "example": "admin",
              "type": "string",
              "api_fieldname": "username",
              "entity_fieldname": "username",
              "parameter_fieldname": "username",
              "in": "body",
              "required": false,
              "_key": "username"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents a user in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "List of active user sessions.",
                    "items": {
                      "description": "This object represents an active user session.",
                      "properties": [
                        {
                          "description": "The UUID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "api_fieldname": "account_id",
                          "entity_fieldname": "account_id",
                          "_key": "account_id"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "The login time of the user.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "login_time",
                          "entity_fieldname": "login_time",
                          "_key": "login_time"
                        },
                        {
                          "description": "Entity name: always 'user-session'",
                          "enum": [
                            "user-session"
                          ],
                          "type": "string",
                          "api_fieldname": "object",
                          "entity_fieldname": "object",
                          "_key": "object"
                        },
                        {
                          "description": "The reference token.",
                          "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                          "type": "string",
                          "api_fieldname": "reference_token",
                          "entity_fieldname": "reference_token",
                          "_key": "reference_token"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "account_id",
                        "ip_address",
                        "login_time",
                        "object",
                        "reference_token",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "active_session"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "active_sessions",
                    "entity_fieldname": "active_sessions",
                    "_key": "active_sessions"
                  },
                  {
                    "description": "Address.",
                    "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
                    "type": "string",
                    "api_fieldname": "address",
                    "entity_fieldname": "address",
                    "parameter_fieldname": "address",
                    "in": "body",
                    "required": false,
                    "_key": "address"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "A timestamp of the user creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "User's account specific custom properties. The value is a string.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "The email address.",
                    "example": "user@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "parameter_fieldname": "email",
                    "in": "body",
                    "required": false,
                    "_key": "email"
                  },
                  {
                    "description": "A flag indicating whether the user's email address has been verified or not.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "email_verified",
                    "entity_fieldname": "email_verified",
                    "_key": "email_verified"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The full name of the user.",
                    "example": "User Doe",
                    "type": "string",
                    "api_fieldname": "full_name",
                    "entity_fieldname": "full_name",
                    "parameter_fieldname": "full_name",
                    "in": "body",
                    "required": false,
                    "_key": "full_name"
                  },
                  {
                    "description": "A list of group IDs this user belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "name": "groups",
                    "in": "body",
                    "schema_param": true,
                    "external_param": true,
                    "parameter_fieldname": "groups",
                    "required": false,
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the user.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "user_id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "A flag indicating that the General Terms and Conditions has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_gtc_accepted",
                    "entity_fieldname": "terms_accepted",
                    "parameter_fieldname": "is_gtc_accepted",
                    "in": "body",
                    "required": false,
                    "_key": "is_gtc_accepted"
                  },
                  {
                    "description": "A flag indicating that receiving marketing information has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_marketing_accepted",
                    "entity_fieldname": "marketing_accepted",
                    "parameter_fieldname": "is_marketing_accepted",
                    "in": "body",
                    "required": false,
                    "_key": "is_marketing_accepted"
                  },
                  {
                    "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_totp_enabled",
                    "entity_fieldname": "two_factor_authentication",
                    "parameter_fieldname": "is_totp_enabled",
                    "in": "body",
                    "required": false,
                    "_key": "is_totp_enabled"
                  },
                  {
                    "description": "A timestamp of the latest login of the user, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
                    "items": {
                      "description": "This object represents an entry in login history.",
                      "properties": [
                        {
                          "description": "UTC time RFC3339 for this login attempt.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "date",
                          "entity_fieldname": "date",
                          "_key": "date"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "Flag indicating whether login attempt was successful or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "success",
                          "entity_fieldname": "success",
                          "_key": "success"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "date",
                        "ip_address",
                        "success",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_history"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_history",
                    "entity_fieldname": "login_history",
                    "_key": "login_history"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "parameter_fieldname": "login_profiles",
                    "in": "body",
                    "required": false,
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user'",
                    "enum": [
                      "user"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The password when creating a new user. It will be generated when not present in the request.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "password",
                    "entity_fieldname": "password",
                    "parameter_fieldname": "password",
                    "in": "body",
                    "required": false,
                    "_key": "password"
                  },
                  {
                    "description": "A timestamp of the latest change of the user password, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "password_changed_time",
                    "entity_fieldname": "password_changed_time",
                    "_key": "password_changed_time"
                  },
                  {
                    "description": "Phone number.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "parameter_fieldname": "phone_number",
                    "in": "body",
                    "required": false,
                    "_key": "phone_number"
                  },
                  {
                    "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
                    "enum": [
                      "ENROLLING",
                      "INVITED",
                      "ACTIVE",
                      "RESET",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "parameter_fieldname": "status",
                    "in": "body",
                    "required": false,
                    "_key": "status"
                  },
                  {
                    "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "totp_scratch_codes",
                    "entity_fieldname": "totp_scratch_codes",
                    "_key": "totp_scratch_codes"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "A username containing alphanumerical letters and -,._@+= characters.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "username",
                    "entity_fieldname": "username",
                    "parameter_fieldname": "username",
                    "in": "body",
                    "required": false,
                    "_key": "username"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "status"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user"
                }
              },
              "_key": "200"
            },
            {
              "description": "Error in input data, for example an invalid email address.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account or a user with the given ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            },
            {
              "description": "A user with the given username or email already exists.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "409"
            }
          ],
          "path": "/v3/accounts/{account_id}/users/{user_id}",
          "summary": "Update user details.",
          "return_type": "subtenant_user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "email",
            "two_factor_auth_enabled",
            "status",
            "active_sessions",
            "created_at",
            "creation_time",
            "custom_fields",
            "email_verified",
            "last_login_time",
            "login_history",
            "password",
            "password_changed_time",
            "totp_scratch_codes",
            "updated_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "updateAccountUser",
          "pagination": false,
          "_key": "update"
        },
        {
          "description": "An endpoint for validating the user email.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/users/{user_id}/validate-email -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "Account ID.",
              "in": "path",
              "name": "account_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "account_id",
              "api_fieldname": "account_id",
              "external_param": false,
              "parameter_fieldname": "account_id",
              "_key": "account_id"
            },
            {
              "description": "The ID of the user whose email is validated.",
              "in": "path",
              "name": "user_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "user_id",
              "external_param": false,
              "parameter_fieldname": "user_id",
              "_key": "id"
            }
          ],
          "method": "post",
          "mode": "validate_email",
          "responses": [
            {
              "description": "Email validation successfully requested.",
              "_key": "204"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account or a user with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/users/{user_id}/validate-email",
          "summary": "Validate the user email.",
          "return_type": "subtenant_user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "validateAccountUserEmail",
          "pagination": false,
          "_key": "validate_email"
        }
      ],
      "fields": [
        {
          "description": "The ID of the account.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": false,
          "required": true,
          "_key": "account_id"
        },
        {
          "description": "List of active user sessions.",
          "items": {
            "description": "This object represents an active user session.",
            "properties": [
              {
                "description": "The UUID of the account.",
                "example": "01619571e2e90242ac12000600000000",
                "type": "string",
                "api_fieldname": "account_id",
                "entity_fieldname": "account_id",
                "_key": "account_id"
              },
              {
                "description": "IP address of the client.",
                "example": "127.0.0.1",
                "type": "string",
                "api_fieldname": "ip_address",
                "entity_fieldname": "ip_address",
                "_key": "ip_address"
              },
              {
                "description": "The login time of the user.",
                "example": "2018-02-14T17:52:07Z",
                "format": "date-time",
                "type": "string",
                "api_fieldname": "login_time",
                "entity_fieldname": "login_time",
                "_key": "login_time"
              },
              {
                "description": "Entity name: always 'user-session'",
                "enum": [
                  "user-session"
                ],
                "type": "string",
                "api_fieldname": "object",
                "entity_fieldname": "object",
                "_key": "object"
              },
              {
                "description": "The reference token.",
                "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                "type": "string",
                "api_fieldname": "reference_token",
                "entity_fieldname": "reference_token",
                "_key": "reference_token"
              },
              {
                "description": "User Agent header from the login request.",
                "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                "type": "string",
                "api_fieldname": "user_agent",
                "entity_fieldname": "user_agent",
                "_key": "user_agent"
              }
            ],
            "required": [
              "account_id",
              "ip_address",
              "login_time",
              "object",
              "reference_token",
              "user_agent"
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "active_session"
            }
          },
          "type": "array",
          "api_fieldname": "active_sessions",
          "readOnly": true,
          "required": false,
          "_key": "active_sessions"
        },
        {
          "description": "Address.",
          "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
          "type": "string",
          "api_fieldname": "address",
          "parameter_fieldname": "address",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "address"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2018-02-13T09:35:20Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "A timestamp of the user creation in the storage, in milliseconds.",
          "example": 1518630727683,
          "format": "int64",
          "type": "integer",
          "api_fieldname": "creation_time",
          "readOnly": true,
          "required": false,
          "_key": "creation_time"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User's account specific custom properties. The value is a string.",
          "type": "object",
          "api_fieldname": "custom_fields",
          "readOnly": true,
          "required": false,
          "_key": "custom_fields"
        },
        {
          "description": "The email address.",
          "example": "user@arm.com",
          "type": "string",
          "api_fieldname": "email",
          "parameter_fieldname": "email",
          "in": "body",
          "required": true,
          "readOnly": false,
          "_key": "email"
        },
        {
          "description": "A flag indicating whether the user's email address has been verified or not.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "email_verified",
          "readOnly": true,
          "required": false,
          "_key": "email_verified"
        },
        {
          "description": "The full name of the user.",
          "example": "User Doe",
          "type": "string",
          "api_fieldname": "full_name",
          "parameter_fieldname": "full_name",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "full_name"
        },
        {
          "description": "The ID of the user.",
          "example": "01619571e2e89242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "parameter_fieldname": "user_id",
          "in": "path",
          "required": true,
          "readOnly": false,
          "_key": "id"
        },
        {
          "description": "A timestamp of the latest login of the user, in milliseconds.",
          "example": 1518630727688,
          "format": "int64",
          "type": "integer",
          "api_fieldname": "last_login_time",
          "readOnly": true,
          "required": false,
          "_key": "last_login_time"
        },
        {
          "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
          "items": {
            "description": "This object represents an entry in login history.",
            "properties": [
              {
                "description": "UTC time RFC3339 for this login attempt.",
                "example": "2018-02-14T17:52:07Z",
                "format": "date-time",
                "type": "string",
                "api_fieldname": "date",
                "entity_fieldname": "date",
                "_key": "date"
              },
              {
                "description": "IP address of the client.",
                "example": "127.0.0.1",
                "type": "string",
                "api_fieldname": "ip_address",
                "entity_fieldname": "ip_address",
                "_key": "ip_address"
              },
              {
                "description": "Flag indicating whether login attempt was successful or not.",
                "example": true,
                "type": "boolean",
                "api_fieldname": "success",
                "entity_fieldname": "success",
                "_key": "success"
              },
              {
                "description": "User Agent header from the login request.",
                "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                "type": "string",
                "api_fieldname": "user_agent",
                "entity_fieldname": "user_agent",
                "_key": "user_agent"
              }
            ],
            "required": [
              "date",
              "ip_address",
              "success",
              "user_agent"
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "login_history"
            }
          },
          "type": "array",
          "api_fieldname": "login_history",
          "readOnly": true,
          "required": false,
          "_key": "login_history"
        },
        {
          "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
          "items": {
            "description": "This object represents a user login profile in Device Management.",
            "properties": [
              {
                "description": "ID of the identity provider.",
                "type": "string",
                "readOnly": false,
                "_override": true,
                "api_fieldname": "id",
                "entity_fieldname": "id",
                "_key": "id"
              },
              {
                "description": "Name of the identity provider.",
                "readOnly": false,
                "type": "string",
                "_override": true,
                "api_fieldname": "name",
                "entity_fieldname": "name",
                "_key": "name"
              },
              {
                "description": "Identity provider type.",
                "enum": [
                  "NATIVE",
                  "MBED",
                  "SAML2",
                  "OIDC"
                ],
                "readOnly": true,
                "type": "string",
                "api_fieldname": "type",
                "entity_fieldname": "type",
                "_key": "type"
              }
            ],
            "required": [
              "id"
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "login_profile"
            }
          },
          "type": "array",
          "api_fieldname": "login_profiles",
          "parameter_fieldname": "login_profiles",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "login_profiles"
        },
        {
          "description": "A flag indicating that receiving marketing information has been accepted.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "is_marketing_accepted",
          "parameter_fieldname": "is_marketing_accepted",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "marketing_accepted"
        },
        {
          "description": "The password when creating a new user. It will be generated when not present in the request.",
          "example": "PZf9eEUH43DAPE9ULINFeuj",
          "type": "string",
          "api_fieldname": "password",
          "parameter_fieldname": "password",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "password"
        },
        {
          "description": "A timestamp of the latest change of the user password, in milliseconds.",
          "example": 1518630727688,
          "format": "int64",
          "type": "integer",
          "api_fieldname": "password_changed_time",
          "readOnly": true,
          "required": false,
          "_key": "password_changed_time"
        },
        {
          "description": "Phone number.",
          "example": "+44 (1223) 400 400",
          "type": "string",
          "api_fieldname": "phone_number",
          "parameter_fieldname": "phone_number",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "phone_number"
        },
        {
          "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
          "enum": [
            "ENROLLING",
            "INVITED",
            "ACTIVE",
            "RESET",
            "INACTIVE"
          ],
          "example": "ACTIVE",
          "type": "string",
          "api_fieldname": "status",
          "parameter_fieldname": "status",
          "in": "body",
          "required": false,
          "readOnly": false,
          "enum_reference": "subtenant_user_status_enum",
          "_key": "status"
        },
        {
          "description": "A flag indicating that the General Terms and Conditions has been accepted.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "is_gtc_accepted",
          "parameter_fieldname": "is_gtc_accepted",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "terms_accepted"
        },
        {
          "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "api_fieldname": "totp_scratch_codes",
          "readOnly": true,
          "required": false,
          "_key": "totp_scratch_codes"
        },
        {
          "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "is_totp_enabled",
          "parameter_fieldname": "is_totp_enabled",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "two_factor_authentication"
        },
        {
          "description": "Last update UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        },
        {
          "description": "A username containing alphanumerical letters and -,._@+= characters.",
          "example": "admin",
          "type": "string",
          "api_fieldname": "username",
          "parameter_fieldname": "username",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "username"
        }
      ],
      "field_renames": [
        {
          "api_fieldname": "is_marketing_accepted",
          "_key": "marketing_accepted"
        },
        {
          "api_fieldname": "is_gtc_accepted",
          "_key": "terms_accepted"
        },
        {
          "api_fieldname": "is_totp_enabled",
          "_key": "two_factor_authentication"
        }
      ],
      "tags": [
        "Aggregator Account Admin"
      ],
      "group_id": "Accounts",
      "_key": "subtenant_user"
    },
    {
      "swagger_models": [
        "UserInvitationReq",
        "UserInvitationResp"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "An endpoint for inviting a new or an existing user to join the account.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/accouns/{account_id}/user-invitations -d {\"email\": \"myemail@company.com\"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the account the user is invited to.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "account_id",
              "entity_fieldname": "account_id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "account_id"
            },
            {
              "description": "Email address of the invited user.",
              "example": "friend@arm.com",
              "type": "string",
              "api_fieldname": "email",
              "entity_fieldname": "email",
              "parameter_fieldname": "email",
              "in": "body",
              "required": true,
              "_key": "email"
            },
            {
              "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
              "items": {
                "description": "This object represents a user login profile in Device Management.",
                "properties": [
                  {
                    "description": "ID of the identity provider.",
                    "type": "string",
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the identity provider.",
                    "readOnly": false,
                    "type": "string",
                    "_override": true,
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Identity provider type.",
                    "enum": [
                      "NATIVE",
                      "MBED",
                      "SAML2",
                      "OIDC"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "type",
                    "entity_fieldname": "type",
                    "_key": "type"
                  }
                ],
                "required": [
                  "id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "login_profile"
                }
              },
              "type": "array",
              "api_fieldname": "login_profiles",
              "entity_fieldname": "login_profiles",
              "parameter_fieldname": "login_profiles",
              "in": "body",
              "required": false,
              "_key": "login_profiles"
            },
            {
              "description": "Specifies how many days the invitation will be valid for. The default is 30 days. Value should be between 1 and 100 days.",
              "format": "int32",
              "type": "integer",
              "name": "valid_for_days",
              "in": "body",
              "schema_param": true,
              "entity_fieldname": "valid_for_days",
              "api_fieldname": "valid_for_days",
              "external_param": true,
              "parameter_fieldname": "valid_for_days",
              "required": false,
              "_key": "valid_for_days"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "New entity created.",
              "schema": {
                "description": "This object represents an user invitation in responses.",
                "properties": [
                  {
                    "description": "The ID of the account the user is invited to.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Email address of the invited user.",
                    "example": "friend@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "parameter_fieldname": "email",
                    "in": "body",
                    "required": true,
                    "_key": "email"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Invitation expiration as UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expiration",
                    "entity_fieldname": "expiration",
                    "_key": "expiration"
                  },
                  {
                    "description": "A list of IDs of the groups this user has been invited to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "name": "groups",
                    "in": "body",
                    "schema_param": true,
                    "external_param": true,
                    "parameter_fieldname": "groups",
                    "required": false,
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the invitation.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "invitation_id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "parameter_fieldname": "login_profiles",
                    "in": "body",
                    "required": false,
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user-invitation'",
                    "enum": [
                      "user-invitation"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "The ID of the invited user.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "user_id",
                    "entity_fieldname": "user_id",
                    "_key": "user_id"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "user_id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user_invitation"
                }
              },
              "_key": "201"
            },
            {
              "description": "Error in input data, for example an invalid email address.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/accounts/{account_id}/user-invitations",
          "summary": "Create a user invitation.",
          "return_type": "subtenant_user_invitation",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_user_invitation"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "expiration",
            "id",
            "updated_at",
            "user_id"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "invitation_id": "id"
          },
          "operation_id": "createAccountInvitation",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "An endpoint for deleting an active user invitation which has been sent for a new or an existing user to join the account.\n\n**Example usage:**\n`curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/user-invitations/{invitation_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "Account ID.",
              "in": "path",
              "name": "account_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "account_id",
              "api_fieldname": "account_id",
              "external_param": false,
              "parameter_fieldname": "account_id",
              "_key": "account_id"
            },
            {
              "description": "The ID of the invitation to be deleted.",
              "in": "path",
              "name": "invitation_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "invitation_id",
              "external_param": false,
              "parameter_fieldname": "invitation_id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Deleted successfully.",
              "_key": "204"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account or an invitation with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/user-invitations/{invitation_id}",
          "summary": "Delete a user invitation.",
          "return_type": "subtenant_user_invitation",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_user_invitation"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "invitation_id": "id"
          },
          "operation_id": "deleteAccountInvitation",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "An endpoint for retrieving the details of an active user invitation sent for a new or an existing user to join the account.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account_id}/user-invitations/{invitation_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the account the user is invited to.",
              "example": "01619571e2e90242ac12000600000000",
              "type": "string",
              "api_fieldname": "account_id",
              "entity_fieldname": "account_id",
              "parameter_fieldname": "account_id",
              "in": "path",
              "required": true,
              "_key": "account_id"
            },
            {
              "description": "The ID of the invitation.",
              "example": "01619571e2e89242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "invitation_id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "description": "This object represents an user invitation in responses.",
                "properties": [
                  {
                    "description": "The ID of the account the user is invited to.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Email address of the invited user.",
                    "example": "friend@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "parameter_fieldname": "email",
                    "in": "body",
                    "required": true,
                    "_key": "email"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Invitation expiration as UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expiration",
                    "entity_fieldname": "expiration",
                    "_key": "expiration"
                  },
                  {
                    "description": "A list of IDs of the groups this user has been invited to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "name": "groups",
                    "in": "body",
                    "schema_param": true,
                    "external_param": true,
                    "parameter_fieldname": "groups",
                    "required": false,
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the invitation.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "parameter_fieldname": "invitation_id",
                    "in": "path",
                    "required": true,
                    "_key": "id"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "parameter_fieldname": "login_profiles",
                    "in": "body",
                    "required": false,
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user-invitation'",
                    "enum": [
                      "user-invitation"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "The ID of the invited user.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "user_id",
                    "entity_fieldname": "user_id",
                    "_key": "user_id"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "user_id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user_invitation"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An account or an invitation with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/accounts/{account_id}/user-invitations/{invitation_id}",
          "summary": "Details of a user invitation.",
          "return_type": "subtenant_user_invitation",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "subtenant_user_invitation"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "created_at",
            "email",
            "expiration",
            "login_profiles",
            "updated_at",
            "user_id"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "invitation_id": "id"
          },
          "operation_id": "getAccountInvitation",
          "pagination": false,
          "_key": "read"
        }
      ],
      "fields": [
        {
          "description": "The ID of the account the user is invited to.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": false,
          "required": true,
          "_key": "account_id"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2018-02-13T09:35:20Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "Email address of the invited user.",
          "example": "friend@arm.com",
          "type": "string",
          "api_fieldname": "email",
          "parameter_fieldname": "email",
          "in": "body",
          "required": true,
          "readOnly": false,
          "_key": "email"
        },
        {
          "description": "Invitation expiration as UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "expiration",
          "readOnly": true,
          "required": false,
          "_key": "expiration"
        },
        {
          "description": "The ID of the invitation.",
          "example": "01619571e2e89242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "parameter_fieldname": "invitation_id",
          "in": "path",
          "required": true,
          "readOnly": false,
          "_key": "id"
        },
        {
          "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
          "items": {
            "description": "This object represents a user login profile in Device Management.",
            "properties": [
              {
                "description": "ID of the identity provider.",
                "type": "string",
                "readOnly": false,
                "_override": true,
                "api_fieldname": "id",
                "entity_fieldname": "id",
                "_key": "id"
              },
              {
                "description": "Name of the identity provider.",
                "readOnly": false,
                "type": "string",
                "_override": true,
                "api_fieldname": "name",
                "entity_fieldname": "name",
                "_key": "name"
              },
              {
                "description": "Identity provider type.",
                "enum": [
                  "NATIVE",
                  "MBED",
                  "SAML2",
                  "OIDC"
                ],
                "readOnly": true,
                "type": "string",
                "api_fieldname": "type",
                "entity_fieldname": "type",
                "_key": "type"
              }
            ],
            "required": [
              "id"
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "login_profile"
            }
          },
          "type": "array",
          "api_fieldname": "login_profiles",
          "parameter_fieldname": "login_profiles",
          "in": "body",
          "required": false,
          "readOnly": false,
          "_key": "login_profiles"
        },
        {
          "description": "Last update UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        },
        {
          "description": "The ID of the invited user.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "user_id",
          "readOnly": true,
          "required": false,
          "_key": "user_id"
        }
      ],
      "field_renames": [],
      "tags": [
        "Aggregator Account Admin"
      ],
      "group_id": "Accounts",
      "_key": "subtenant_user_invitation"
    },
    {
      "swagger_models": [
        "DeveloperCertificateResponseData",
        "TrustedCertificateReq",
        "TrustedCertificateResp",
        "TrustedCertificateRespList",
        "TrustedCertificateUpdateReq"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "An endpoint for uploading new trusted certificates.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/trusted-certificates -d {\"name\": \"myCert1\", \"description\": \"very important cert\", \"certificate\": \"certificate_data\", \"service\": \"lwm2m\"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "X509.v3 trusted certificate in PEM format.",
              "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
              "type": "string",
              "api_fieldname": "certificate",
              "entity_fieldname": "certificate",
              "parameter_fieldname": "certificate",
              "in": "body",
              "required": false,
              "_key": "certificate"
            },
            {
              "description": "Human readable description of this certificate.",
              "example": "Certificate created by me.",
              "type": "string",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "description": "Device execution mode where 1 means a developer certificate.",
              "example": 1,
              "format": "int32",
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "If true, signature is not required. Default value false.",
              "example": false,
              "type": "boolean",
              "api_fieldname": "enrollment_mode",
              "entity_fieldname": "enrollment_mode",
              "parameter_fieldname": "enrollment_mode",
              "in": "body",
              "required": false,
              "_key": "enrollment_mode"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            },
            {
              "description": "Certificate name.",
              "example": "My certificate",
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": false,
              "_key": "name"
            },
            {
              "description": "Service name where the certificate is to be used.",
              "enum": [
                "lwm2m",
                "bootstrap"
              ],
              "type": "string",
              "api_fieldname": "service",
              "entity_fieldname": "service",
              "parameter_fieldname": "service",
              "in": "body",
              "required": false,
              "enum_reference": "trusted_certificate_service_enum",
              "_key": "service"
            },
            {
              "description": "Status of the certificate.",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE",
              "type": "string",
              "api_fieldname": "status",
              "entity_fieldname": "status",
              "parameter_fieldname": "status",
              "in": "body",
              "required": false,
              "enum_reference": "trusted_certificate_status_enum",
              "_key": "status"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "New entity created.",
              "schema": {
                "description": "This object represents a trusted certificate in responses.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "X509.v3 trusted certificate in PEM format.",
                    "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                    "type": "string",
                    "api_fieldname": "certificate",
                    "entity_fieldname": "certificate",
                    "_key": "certificate"
                  },
                  {
                    "description": "A SHA-256 fingerprint of the certificate.",
                    "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                    "type": "string",
                    "api_fieldname": "certificate_fingerprint",
                    "entity_fieldname": "certificate_fingerprint",
                    "_key": "certificate_fingerprint"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Human readable description of this certificate.",
                    "example": "Certificate created by me.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "Device execution mode where 1 means a developer certificate.",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                    "private_field": true,
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode",
                    "_key": "device_execution_mode"
                  },
                  {
                    "description": "If true, signature is not required. Default value false.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "enrollment_mode",
                    "entity_fieldname": "enrollment_mode",
                    "_key": "enrollment_mode"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Entity ID.",
                    "example": "01619571d01d0242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Issuer of the certificate.",
                    "example": "CN=issuer",
                    "type": "string",
                    "api_fieldname": "issuer",
                    "entity_fieldname": "issuer",
                    "_key": "issuer"
                  },
                  {
                    "description": "Certificate name.",
                    "example": "My certificate",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'trusted-cert'",
                    "enum": [
                      "trusted-cert"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The ID of the owner.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner_id",
                    "entity_fieldname": "owner_id",
                    "_key": "owner_id"
                  },
                  {
                    "description": "Service name where the certificate is to be used.",
                    "enum": [
                      "lwm2m",
                      "bootstrap"
                    ],
                    "type": "string",
                    "api_fieldname": "service",
                    "entity_fieldname": "service",
                    "_key": "service"
                  },
                  {
                    "description": "Status of the certificate.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Subject of the certificate.",
                    "example": "CN=subject",
                    "type": "string",
                    "api_fieldname": "subject",
                    "entity_fieldname": "subject",
                    "_key": "subject"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "This read-only flag indicates whether the certificate is valid or not.",
                    "example": true,
                    "readOnly": true,
                    "type": "boolean",
                    "api_fieldname": "valid",
                    "entity_fieldname": "valid",
                    "_key": "valid"
                  },
                  {
                    "description": "Expiration time in UTC formatted as RFC3339.",
                    "example": "2038-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "validity",
                    "entity_fieldname": "validity",
                    "_key": "validity"
                  }
                ],
                "required": [
                  "account_id",
                  "certificate",
                  "certificate_fingerprint",
                  "etag",
                  "id",
                  "issuer",
                  "name",
                  "object",
                  "service",
                  "subject",
                  "validity"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "201"
            },
            {
              "description": "Invalid certificate data or missing/invalid parameters.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden, only available for admins of commercial accounts.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Certificate with the given name or subject already exists.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "409"
            }
          ],
          "path": "/v3/trusted-certificates",
          "summary": "Upload a new trusted certificate.",
          "return_type": "trusted_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "signature",
            "account_id",
            "certificate_fingerprint",
            "created_at",
            "id",
            "issuer",
            "owner_id",
            "subject",
            "updated_at",
            "valid",
            "validity"
          ],
          "group_id": "Security",
          "operation_id": "addCertificate",
          "notes": "Signature is not used by the SDK as it is a deprecated field.",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "An endpoint for deleting a trusted certificate.\n\n**Example usage:**\n`curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "The ID of the trusted certificate to be deleted.",
              "in": "path",
              "name": "cert_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "cert_id",
              "external_param": false,
              "parameter_fieldname": "cert_id",
              "_key": "id"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Deleted successfully.",
              "_key": "204"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Certificate not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/trusted-certificates/{cert_id}",
          "summary": "Delete a trusted certificate by ID.",
          "return_type": "trusted_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Security",
          "operation_id": "deleteCertificate",
          "parameter_map": {
            "cert_id": "id"
          },
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "This REST API is intended to be used by customers to fetch an existing developer certificate (a certificate that can be flashed into multiple devices to connect to bootstrap server).\n\n**Example usage:**\ncurl -X GET \"http://api.us-east-1.mbedcloud.com/v3/developer-certificates/THE_CERTIFICATE_ID\" -H \"accept: application/json\" -H \"Authorization: Bearer THE_ACCESS_TOKEN\"\n",
          "field_renames": [],
          "fields": [
            {
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "mUUID that uniquely identifies the developer certificate.",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "developerCertificateId",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            }
          ],
          "method": "get",
          "mode": "get_developer_certificate_info",
          "responses": [
            {
              "description": "Developer certificate fetched successfully.",
              "examples": [
                {
                  "account_id": "015fee5d9b3538c98640fbfb00000000",
                  "created_at": "2017-12-11T14:22:20.009Z",
                  "description": "This certificate will be used with multiple developer devices",
                  "developer_certificate": "-----BEGIN CERTIFICATE-----\\nMIICcDCCAhWgAwIBAgIRAPSBbBtLUE/ekQcWE4GzPJEwCgYIKoZIzj0EAwIwgaIx\\nCzAJBgNVBAYTAkdCMRcwFQYDVQQIDA5DYW1icmlkZ2VzaGlyZTESMBAGA1UEBwwJ\\nQ2FtYnJpZGdlMRAwDgYDVQQKDAdBUk0gTHRkMSkwJwYDVQQLDCAwMTU4NDNlMzJl\\nYzkwMjQyMGEwMTVlMDcwMDAwMDAwMDEpMCcGA1UEAwwgMDE2MWRiYmNkZDY2MGE1\\nODBhMDEwYzM0MDNjMDAwMDAwHhcNMTgwMjI4MDkyNzIzWhcNMjgwMjI4MDkyNzIz\\nWjCBojELMAkGA1UEBhMCR0IxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMRIwEAYD\\nVQQHDAlDYW1icmlkZ2UxEDAOBgNVBAoMB0FSTSBMdGQxKTAnBgNVBAsMIDAxNTg0\\nM2UzMmVjOTAyNDIwYTAxNWUwNzAwMDAwMDAwMSkwJwYDVQQDDCAwMTYxZGJiY2Rk\\nNjYwYTU4MGEwMTBjMzQwM2MwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEScLDbOXvOb903AYlI9ow8E4hbLSHJPt5E2BO4Q4bHOpuWH2Oh6P+CDPte9pAv3\\nE6g90Xk/ZcZpQ+xBO6qci/ajKjAoMBIGCSsGAQQBoCCBSQQFAgNAAJEwEgYDVR0T\\nAQH/BAgwBgEB/wIBADAKBggqhkjOPQQDAgNJADBGAiEAsi9zSK8Njl22GoEHrsg8\\nQlwFnrkkP9d6FyLFtmqndt4CIQCmVHwisYNcCkqD2SWctG1xQHo0HZePAQW8PstM\\nzhNupQ==\\n-----END CERTIFICATE-----\\n",
                  "developer_private_key": "-----BEGIN PRIVATE KEY-----\\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgeKc97aC1Z4aniXVG\\njNSvvXw2hl6zwACYIs88OKQx61GgCgYIKoZIzj0DAQehRANCAAREnCw2zl7zm/dN\\nwGJSPaMPBOIWy0hyT7eRNgTuEOGxzqblh9joej/ggz7XvaQL9xOoPdF5P2XGaUPs\\nQTuqnIv2\\n-----END PRIVATE KEY-----\\n",
                  "etag": "1",
                  "id": "015fee4431fd38c98640fbfb00000000",
                  "name": "DeveloperCertificate",
                  "object": "trusted-cert",
                  "security_file_content": "/*\\n * Copyright (c) 2017 ARM Limited. All rights reserved.\\n * SPDX-License-Identifier: Apache-2.0\\n * Licensed under the Apache License, Version 2.0 (the License); you may\\n * not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an AS IS BASIS, WITHOUT\\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n#ifndef __MBED_CLOUD_DEV_CREDENTIALS_H__\\n#define __MBED_CLOUD_DEV_CREDENTIALS_H__\\n\\n#include <inttypes.h>\\n\\nconst char MBED_CLOUD_DEV_BOOTSTRAP_ENDPOINT_NAME[] = \\\"0161dbbcdd660a580a010c3403c00000\\\";\\nconst char MBED_CLOUD_DEV_ACCOUNT_ID[] = \\\"015843e32ec902420a015e0700000000\\\";\\nconst char MBED_CLOUD_DEV_BOOTSTRAP_SERVER_URI[] = \\\"coaps://coap.us-east-1.mbedcloud.com:5684?aid=015843e32ec902420a015e0700000000\\\";\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x70, 0x30, 0x82, 0x02, 0x15,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x11, 0x00,\\n 0xf4, 0x81, 0x6c, 0x1b, 0x4b, 0x50, 0x4f, 0xde,\\n 0x91, 0x07, 0x16, 0x13, 0x81, 0xb3, 0x3c, 0x91,\\n 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x04, 0x03, 0x02, 0x30, 0x81, 0xa2, 0x31,\\n 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,\\n 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30, 0x15,\\n 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0e, 0x43,\\n 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,\\n 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12, 0x30,\\n 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x09,\\n 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67,\\n 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55,\\n 0x04, 0x0a, 0x0c, 0x07, 0x41, 0x52, 0x4d, 0x20,\\n 0x4c, 0x74, 0x64, 0x31, 0x29, 0x30, 0x27, 0x06,\\n 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x20, 0x30, 0x31,\\n 0x35, 0x38, 0x34, 0x33, 0x65, 0x33, 0x32, 0x65,\\n 0x63, 0x39, 0x30, 0x32, 0x34, 0x32, 0x30, 0x61,\\n 0x30, 0x31, 0x35, 0x65, 0x30, 0x37, 0x30, 0x30,\\n 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x29,\\n 0x30, 0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,\\n 0x20, 0x30, 0x31, 0x36, 0x31, 0x64, 0x62, 0x62,\\n 0x63, 0x64, 0x64, 0x36, 0x36, 0x30, 0x61, 0x35,\\n 0x38, 0x30, 0x61, 0x30, 0x31, 0x30, 0x63, 0x33,\\n 0x34, 0x30, 0x33, 0x63, 0x30, 0x30, 0x30, 0x30,\\n 0x30, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x38, 0x30,\\n 0x32, 0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32,\\n 0x33, 0x5a, 0x17, 0x0d, 0x32, 0x38, 0x30, 0x32,\\n 0x32, 0x38, 0x30, 0x39, 0x32, 0x37, 0x32, 0x33,\\n 0x5a, 0x30, 0x81, 0xa2, 0x31, 0x0b, 0x30, 0x09,\\n 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47,\\n 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55,\\n 0x04, 0x08, 0x0c, 0x0e, 0x43, 0x61, 0x6d, 0x62,\\n 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68, 0x69,\\n 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03,\\n 0x55, 0x04, 0x07, 0x0c, 0x09, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31, 0x10,\\n 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c,\\n 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64,\\n 0x31, 0x29, 0x30, 0x27, 0x06, 0x03, 0x55, 0x04,\\n 0x0b, 0x0c, 0x20, 0x30, 0x31, 0x35, 0x38, 0x34,\\n 0x33, 0x65, 0x33, 0x32, 0x65, 0x63, 0x39, 0x30,\\n 0x32, 0x34, 0x32, 0x30, 0x61, 0x30, 0x31, 0x35,\\n 0x65, 0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x30,\\n 0x30, 0x30, 0x30, 0x31, 0x29, 0x30, 0x27, 0x06,\\n 0x03, 0x55, 0x04, 0x03, 0x0c, 0x20, 0x30, 0x31,\\n 0x36, 0x31, 0x64, 0x62, 0x62, 0x63, 0x64, 0x64,\\n 0x36, 0x36, 0x30, 0x61, 0x35, 0x38, 0x30, 0x61,\\n 0x30, 0x31, 0x30, 0x63, 0x33, 0x34, 0x30, 0x33,\\n 0x63, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x59,\\n 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48,\\n 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00,\\n 0x04, 0x44, 0x9c, 0x2c, 0x36, 0xce, 0x5e, 0xf3,\\n 0x9b, 0xf7, 0x4d, 0xc0, 0x62, 0x52, 0x3d, 0xa3,\\n 0x0f, 0x04, 0xe2, 0x16, 0xcb, 0x48, 0x72, 0x4f,\\n 0xb7, 0x91, 0x36, 0x04, 0xee, 0x10, 0xe1, 0xb1,\\n 0xce, 0xa6, 0xe5, 0x87, 0xd8, 0xe8, 0x7a, 0x3f,\\n 0xe0, 0x83, 0x3e, 0xd7, 0xbd, 0xa4, 0x0b, 0xf7,\\n 0x13, 0xa8, 0x3d, 0xd1, 0x79, 0x3f, 0x65, 0xc6,\\n 0x69, 0x43, 0xec, 0x41, 0x3b, 0xaa, 0x9c, 0x8b,\\n 0xf6, 0xa3, 0x2a, 0x30, 0x28, 0x30, 0x12, 0x06,\\n 0x09, 0x2b, 0x06, 0x01, 0x04, 0x01, 0xa0, 0x20,\\n 0x81, 0x49, 0x04, 0x05, 0x02, 0x03, 0x40, 0x00,\\n 0x91, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13,\\n 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01,\\n 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,\\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\\n 0x00, 0xb2, 0x2f, 0x73, 0x48, 0xaf, 0x0d, 0x8e,\\n 0x5d, 0xb6, 0x1a, 0x81, 0x07, 0xae, 0xc8, 0x3c,\\n 0x42, 0x5c, 0x05, 0x9e, 0xb9, 0x24, 0x3f, 0xd7,\\n 0x7a, 0x17, 0x22, 0xc5, 0xb6, 0x6a, 0xa7, 0x76,\\n 0xde, 0x02, 0x21, 0x00, 0xa6, 0x54, 0x7c, 0x22,\\n 0xb1, 0x83, 0x5c, 0x0a, 0x4a, 0x83, 0xd9, 0x25,\\n 0x9c, 0xb4, 0x6d, 0x71, 0x40, 0x7a, 0x34, 0x1d,\\n 0x97, 0x8f, 0x01, 0x05, 0xbc, 0x3e, 0xcb, 0x4c,\\n 0xce, 0x13, 0x6e, 0xa5 };\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x35, 0x30, 0x82, 0x01, 0xdb,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x5c,\\n 0x27, 0xa5, 0x76, 0x7d, 0x58, 0x85, 0x8a, 0x43,\\n 0x91, 0xa0, 0x61, 0xab, 0xcf, 0xa6, 0x59, 0x30,\\n 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x04, 0x03, 0x02, 0x30, 0x72, 0x31, 0x0b, 0x30,\\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\\n 0x55, 0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,\\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\\n 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a,\\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\\n 0x64, 0x31, 0x24, 0x30, 0x22, 0x06, 0x03, 0x55,\\n 0x04, 0x03, 0x13, 0x1b, 0x41, 0x52, 0x4d, 0x20,\\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\\n 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74,\\n 0x73, 0x74, 0x72, 0x61, 0x70, 0x43, 0x41, 0x30,\\n 0x20, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x35, 0x31,\\n 0x35, 0x31, 0x39, 0x34, 0x39, 0x31, 0x31, 0x5a,\\n 0x18, 0x0f, 0x32, 0x30, 0x35, 0x32, 0x30, 0x35,\\n 0x31, 0x35, 0x31, 0x39, 0x35, 0x39, 0x31, 0x30,\\n 0x5a, 0x30, 0x72, 0x31, 0x0b, 0x30, 0x09, 0x06,\\n 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x47, 0x42,\\n 0x31, 0x17, 0x30, 0x15, 0x06, 0x03, 0x55, 0x04,\\n 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d, 0x62, 0x72,\\n 0x69, 0x64, 0x67, 0x65, 0x73, 0x68, 0x69, 0x72,\\n 0x65, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55,\\n 0x04, 0x07, 0x13, 0x09, 0x43, 0x61, 0x6d, 0x62,\\n 0x72, 0x69, 0x64, 0x67, 0x65, 0x31, 0x10, 0x30,\\n 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x07,\\n 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74, 0x64, 0x31,\\n 0x24, 0x30, 0x22, 0x06, 0x03, 0x55, 0x04, 0x03,\\n 0x13, 0x1b, 0x41, 0x52, 0x4d, 0x20, 0x49, 0x6e,\\n 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,\\n 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,\\n 0x72, 0x61, 0x70, 0x43, 0x41, 0x30, 0x59, 0x30,\\n 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,\\n 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04,\\n 0x8b, 0x7c, 0x86, 0xc3, 0x88, 0x54, 0xe6, 0x5f,\\n 0xe0, 0x57, 0x4e, 0x1b, 0xac, 0x29, 0x82, 0xea,\\n 0x7d, 0x91, 0x00, 0x63, 0xa7, 0x4a, 0x05, 0xbc,\\n 0x54, 0xc5, 0x71, 0x27, 0x33, 0x19, 0x1b, 0x2e,\\n 0xfa, 0x41, 0xf8, 0x7a, 0x9a, 0x0c, 0x5d, 0xfc,\\n 0xb3, 0x37, 0x01, 0x99, 0xc5, 0xc9, 0xbe, 0x78,\\n 0x5b, 0x1d, 0xec, 0xb0, 0x1a, 0x1d, 0xdc, 0xe4,\\n 0x6f, 0x57, 0x04, 0xf4, 0x3a, 0xca, 0xa8, 0xd2,\\n 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b, 0x06, 0x03,\\n 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03, 0x02, 0x01,\\n 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13,\\n 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01,\\n 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d,\\n 0x0e, 0x04, 0x16, 0x04, 0x14, 0x13, 0xef, 0x69,\\n 0xfa, 0x62, 0x3f, 0x00, 0x86, 0xf4, 0x05, 0xb8,\\n 0xb6, 0xe6, 0xb2, 0xf1, 0xdb, 0x69, 0x10, 0xb4,\\n 0x39, 0x30, 0x10, 0x06, 0x09, 0x2b, 0x06, 0x01,\\n 0x04, 0x01, 0x82, 0x37, 0x15, 0x01, 0x04, 0x03,\\n 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a,\\n 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,\\n 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xa2,\\n 0x50, 0x88, 0x0f, 0x55, 0xe8, 0x26, 0x49, 0xe6,\\n 0xf5, 0x71, 0x86, 0x33, 0x29, 0x05, 0x4c, 0xf9,\\n 0xfd, 0x1f, 0x14, 0x98, 0x92, 0x85, 0xd9, 0x5c,\\n 0x48, 0x02, 0x9e, 0xc2, 0x79, 0xa8, 0x59, 0x02,\\n 0x20, 0x3e, 0xfe, 0x3c, 0xa0, 0xbf, 0xd3, 0x0f,\\n 0x15, 0x83, 0x56, 0xbc, 0xf2, 0xfa, 0x16, 0x26,\\n 0x7a, 0xc1, 0x68, 0xaa, 0xbc, 0x91, 0x3c, 0x69,\\n 0x44, 0x36, 0xf9, 0x74, 0xa1, 0x82, 0x76, 0x7a,\\n 0x6e };\\n\\nconst uint8_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE[] = \\n{ 0x30, 0x82, 0x02, 0x30, 0x30, 0x82, 0x01, 0xd5,\\n 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x26,\\n 0xf9, 0x08, 0xfc, 0xf1, 0xc0, 0x46, 0xa4, 0x4a,\\n 0x4d, 0x2c, 0xf1, 0x94, 0x27, 0xf9, 0x1f, 0x30,\\n 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x04, 0x03, 0x02, 0x30, 0x6f, 0x31, 0x0b, 0x30,\\n 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,\\n 0x47, 0x42, 0x31, 0x17, 0x30, 0x15, 0x06, 0x03,\\n 0x55, 0x04, 0x08, 0x13, 0x0e, 0x43, 0x61, 0x6d,\\n 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x68,\\n 0x69, 0x72, 0x65, 0x31, 0x12, 0x30, 0x10, 0x06,\\n 0x03, 0x55, 0x04, 0x07, 0x13, 0x09, 0x43, 0x61,\\n 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x31,\\n 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a,\\n 0x13, 0x07, 0x41, 0x52, 0x4d, 0x20, 0x4c, 0x74,\\n 0x64, 0x31, 0x21, 0x30, 0x1f, 0x06, 0x03, 0x55,\\n 0x04, 0x03, 0x13, 0x18, 0x41, 0x52, 0x4d, 0x20,\\n 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\\n 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x57, 0x4d, 0x32,\\n 0x4d, 0x20, 0x43, 0x41, 0x30, 0x20, 0x17, 0x0d,\\n 0x31, 0x37, 0x30, 0x32, 0x31, 0x32, 0x31, 0x30,\\n 0x33, 0x37, 0x35, 0x32, 0x5a, 0x18, 0x0f, 0x32,\\n 0x30, 0x35, 0x32, 0x30, 0x32, 0x31, 0x32, 0x31,\\n 0x30, 0x34, 0x37, 0x35, 0x32, 0x5a, 0x30, 0x6f,\\n 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04,\\n 0x06, 0x13, 0x02, 0x47, 0x42, 0x31, 0x17, 0x30,\\n 0x15, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x0e,\\n 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64, 0x67,\\n 0x65, 0x73, 0x68, 0x69, 0x72, 0x65, 0x31, 0x12,\\n 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13,\\n 0x09, 0x43, 0x61, 0x6d, 0x62, 0x72, 0x69, 0x64,\\n 0x67, 0x65, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03,\\n 0x55, 0x04, 0x0a, 0x13, 0x07, 0x41, 0x52, 0x4d,\\n 0x20, 0x4c, 0x74, 0x64, 0x31, 0x21, 0x30, 0x1f,\\n 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x18, 0x41,\\n 0x52, 0x4d, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x67,\\n 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c,\\n 0x57, 0x4d, 0x32, 0x4d, 0x20, 0x43, 0x41, 0x30,\\n 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48,\\n 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86,\\n 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,\\n 0x00, 0x04, 0xba, 0xea, 0x80, 0x01, 0x2d, 0xf0,\\n 0xe1, 0xb6, 0xc5, 0x5f, 0xf9, 0x76, 0x84, 0x31,\\n 0xa9, 0x29, 0xa1, 0xc7, 0xa8, 0xfd, 0xa0, 0xad,\\n 0xd9, 0x94, 0xe7, 0xec, 0x5a, 0x33, 0xa1, 0x2c,\\n 0x8e, 0x36, 0x43, 0x9b, 0x18, 0xdf, 0xce, 0x71,\\n 0x14, 0x24, 0xb1, 0xfb, 0x16, 0x34, 0x0e, 0x43,\\n 0xfc, 0x23, 0x77, 0xd4, 0x13, 0xd7, 0x11, 0xaa,\\n 0x39, 0x60, 0xab, 0xa2, 0xdf, 0x24, 0xb3, 0xeb,\\n 0xa0, 0xc5, 0xa3, 0x51, 0x30, 0x4f, 0x30, 0x0b,\\n 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x04, 0x04, 0x03,\\n 0x02, 0x01, 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55,\\n 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30,\\n 0x03, 0x01, 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03,\\n 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7b,\\n 0xa1, 0xa5, 0x94, 0xa5, 0xe5, 0x8f, 0x95, 0x5d,\\n 0xd4, 0xce, 0xdc, 0x0f, 0x8a, 0xbe, 0xad, 0x9a,\\n 0x6b, 0x66, 0x3e, 0x30, 0x10, 0x06, 0x09, 0x2b,\\n 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x15, 0x01,\\n 0x04, 0x03, 0x02, 0x01, 0x00, 0x30, 0x0a, 0x06,\\n 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03,\\n 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,\\n 0x00, 0xd2, 0x06, 0x28, 0xc5, 0x31, 0x3a, 0x11,\\n 0x8d, 0xb6, 0xcb, 0x2b, 0x3f, 0xdd, 0x2a, 0x9a,\\n 0x13, 0x30, 0x52, 0x77, 0xaa, 0xda, 0xda, 0xcb,\\n 0xce, 0xb9, 0x5c, 0xe4, 0x32, 0x1c, 0x02, 0xfa,\\n 0x30, 0x02, 0x21, 0x00, 0xb3, 0x82, 0x24, 0xa2,\\n 0xb1, 0x67, 0x6b, 0x69, 0x07, 0x0e, 0xcd, 0x77,\\n 0x74, 0x99, 0x06, 0x9c, 0x59, 0xb2, 0x00, 0xc0,\\n 0xb3, 0xbb, 0x37, 0x5b, 0xc0, 0x1b, 0xfb, 0xd9,\\n 0x70, 0x98, 0xb9, 0x1e };\\n\\nconst uint8_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY[] = \\n{ 0x30, 0x81, 0x93, 0x02, 0x01, 0x00, 0x30, 0x13,\\n 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,\\n 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,\\n 0x03, 0x01, 0x07, 0x04, 0x79, 0x30, 0x77, 0x02,\\n 0x01, 0x01, 0x04, 0x20, 0x78, 0xa7, 0x3d, 0xed,\\n 0xa0, 0xb5, 0x67, 0x86, 0xa7, 0x89, 0x75, 0x46,\\n 0x8c, 0xd4, 0xaf, 0xbd, 0x7c, 0x36, 0x86, 0x5e,\\n 0xb3, 0xc0, 0x00, 0x98, 0x22, 0xcf, 0x3c, 0x38,\\n 0xa4, 0x31, 0xeb, 0x51, 0xa0, 0x0a, 0x06, 0x08,\\n 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,\\n 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x44, 0x9c,\\n 0x2c, 0x36, 0xce, 0x5e, 0xf3, 0x9b, 0xf7, 0x4d,\\n 0xc0, 0x62, 0x52, 0x3d, 0xa3, 0x0f, 0x04, 0xe2,\\n 0x16, 0xcb, 0x48, 0x72, 0x4f, 0xb7, 0x91, 0x36,\\n 0x04, 0xee, 0x10, 0xe1, 0xb1, 0xce, 0xa6, 0xe5,\\n 0x87, 0xd8, 0xe8, 0x7a, 0x3f, 0xe0, 0x83, 0x3e,\\n 0xd7, 0xbd, 0xa4, 0x0b, 0xf7, 0x13, 0xa8, 0x3d,\\n 0xd1, 0x79, 0x3f, 0x65, 0xc6, 0x69, 0x43, 0xec,\\n 0x41, 0x3b, 0xaa, 0x9c, 0x8b, 0xf6 };\\n\\nconst char MBED_CLOUD_DEV_MANUFACTURER[] = \\\"dev_manufacturer\\\";\\n\\nconst char MBED_CLOUD_DEV_MODEL_NUMBER[] = \\\"dev_model_num\\\";\\n\\nconst char MBED_CLOUD_DEV_SERIAL_NUMBER[] = \\\"0\\\";\\n\\nconst char MBED_CLOUD_DEV_DEVICE_TYPE[] = \\\"dev_device_type\\\";\\n\\nconst char MBED_CLOUD_DEV_HARDWARE_VERSION[] = \\\"dev_hardware_version\\\";\\n\\nconst uint32_t MBED_CLOUD_DEV_MEMORY_TOTAL_KB = 0;\\n\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_SERVER_ROOT_CA_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE_SIZE = sizeof(MBED_CLOUD_DEV_LWM2M_SERVER_ROOT_CA_CERTIFICATE);\\nconst uint32_t MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY_SIZE = sizeof(MBED_CLOUD_DEV_BOOTSTRAP_DEVICE_PRIVATE_KEY);\\n\\n#endif //__MBED_CLOUD_DEV_CREDENTIALS_H__\\n",
                  "_key": "Success"
                }
              ],
              "schema": {
                "properties": [
                  {
                    "description": "account to which the developer certificate belongs",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Description for the developer certificate.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "PEM format X.509 developer certificate.",
                    "type": "string",
                    "api_fieldname": "developer_certificate",
                    "entity_fieldname": "developer_certificate",
                    "_key": "developer_certificate"
                  },
                  {
                    "description": "PEM format developer private key associated to the certificate.",
                    "type": "string",
                    "api_fieldname": "developer_private_key",
                    "entity_fieldname": "developer_private_key",
                    "_key": "developer_private_key"
                  },
                  {
                    "description": "API resource entity version.",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "mUUID that uniquely identifies the developer certificate.",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the developer certificate.",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name, always 'trusted-cert'",
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Content of the security.c file that will be flashed into the device to provide the security credentials",
                    "type": "string",
                    "api_fieldname": "security_file_content",
                    "entity_fieldname": "security_file_content",
                    "_key": "security_file_content"
                  }
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Bad request.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "The provided access token is not valid.",
              "examples": [
                {
                  "code": 401,
                  "message": "Provided access token is not valid.",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "invalid_auth",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Developer certificate not found with given id.",
              "examples": [
                {
                  "code": 404,
                  "message": "Not Found. Not found: 016006724ff53ade90ed948d03c00001",
                  "object": "error",
                  "request_id": "015fee4431fd38c98640fbfb00000000",
                  "type": "not_found",
                  "_key": "Authentication Error"
                }
              ],
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/developer-certificates/{developerCertificateId}",
          "summary": "Fetch an existing developer certificate to connect to the bootstrap server.",
          "return_type": "developer_certificate",
          "return_info": {
            "self": false,
            "custom": false,
            "type": "developer_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "description",
            "developer_certificate",
            "developer_private_key",
            "name",
            "security_file_content"
          ],
          "group_id": "Security",
          "operation_id": "getDeveloperCertificate",
          "unaggregated": true,
          "parameter_map": {
            "developerCertificateId": "id"
          },
          "foreign_key": {
            "entity": "developer_certificate",
            "group": "Security"
          },
          "pagination": false,
          "_key": "get_developer_certificate_info"
        },
        {
          "description": "An endpoint for retrieving trusted certificates in an array.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/trusted-certificates -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The entity ID to fetch after the given one.",
              "example": "01619571f3c00242ac12000600000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "Comma separated additional data to return. Currently supported: total_count",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            },
            {
              "description": "The number of results to return (2-1000), default is 50.",
              "example": 50,
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "default": 50,
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "default": "ASC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "trusted_certificate_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01619571f3c00242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "A list of entities.",
                    "items": {
                      "description": "This object represents a trusted certificate in responses.",
                      "properties": [
                        {
                          "description": "The ID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "account_id"
                        },
                        {
                          "description": "X509.v3 trusted certificate in PEM format.",
                          "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                          "type": "string",
                          "_key": "certificate"
                        },
                        {
                          "description": "A SHA-256 fingerprint of the certificate.",
                          "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                          "type": "string",
                          "_key": "certificate_fingerprint"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "Human readable description of this certificate.",
                          "example": "Certificate created by me.",
                          "type": "string",
                          "_key": "description"
                        },
                        {
                          "description": "Device execution mode where 1 means a developer certificate.",
                          "example": 1,
                          "format": "int32",
                          "type": "integer",
                          "private_field": true,
                          "readOnly": false,
                          "_override": true,
                          "_key": "device_execution_mode"
                        },
                        {
                          "description": "If true, signature is not required. Default value false.",
                          "example": false,
                          "type": "boolean",
                          "_key": "enrollment_mode"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Entity ID.",
                          "example": "01619571d01d0242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "Issuer of the certificate.",
                          "example": "CN=issuer",
                          "type": "string",
                          "_key": "issuer"
                        },
                        {
                          "description": "Certificate name.",
                          "example": "My certificate",
                          "type": "string",
                          "_key": "name"
                        },
                        {
                          "description": "Entity name: always 'trusted-cert'",
                          "enum": [
                            "trusted-cert"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "The ID of the owner.",
                          "example": "01619571dad80242ac12000600000000",
                          "type": "string",
                          "_key": "owner_id"
                        },
                        {
                          "description": "Service name where the certificate is to be used.",
                          "enum": [
                            "lwm2m",
                            "bootstrap"
                          ],
                          "type": "string",
                          "_key": "service"
                        },
                        {
                          "description": "Status of the certificate.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "Subject of the certificate.",
                          "example": "CN=subject",
                          "type": "string",
                          "_key": "subject"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "This read-only flag indicates whether the certificate is valid or not.",
                          "example": true,
                          "readOnly": true,
                          "type": "boolean",
                          "_key": "valid"
                        },
                        {
                          "description": "Expiration time in UTC formatted as RFC3339.",
                          "example": "2038-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "validity"
                        }
                      ],
                      "required": [
                        "account_id",
                        "certificate",
                        "certificate_fingerprint",
                        "etag",
                        "id",
                        "issuer",
                        "name",
                        "object",
                        "service",
                        "subject",
                        "validity"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Security",
                        "entity": "trusted_certificate"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there is more results.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return, (range: 2-1000), or equals to `total_count`",
                    "example": 50,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Entity name: always 'list'",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records to return based on creation time. Available values: ASC, DESC; by default ASC.",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "description": "The total number or records, if requested. It might be returned also for small lists.",
                    "example": 20,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "data",
                  "has_more",
                  "limit",
                  "object",
                  "total_count"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Security",
                  "entity": "trusted_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/trusted-certificates",
          "summary": "Get all trusted certificates.",
          "return_type": "paginated_response(trusted_certificate)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "trusted_certificate"
          },
          "x_filter": {
            "device_execution_mode": [
              "eq",
              "neq",
              "eq",
              "neq"
            ],
            "enrollment_mode": [
              "eq",
              "eq"
            ],
            "expire": [
              "eq",
              "eq"
            ],
            "issuer": [
              "like",
              "like"
            ],
            "name": [
              "eq",
              "eq"
            ],
            "owner": [
              "eq",
              "eq"
            ],
            "service": [
              "eq",
              "eq"
            ],
            "status": [
              "eq",
              "eq"
            ],
            "subject": [
              "like",
              "like"
            ],
            "valid": [
              "eq",
              "eq"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "name__eq",
            "service__eq",
            "expire__eq",
            "device_execution_mode__eq",
            "device_execution_mode__neq",
            "owner__eq",
            "enrollment_mode__eq",
            "status__eq",
            "issuer__like",
            "subject__like",
            "valid__eq"
          ],
          "foreign_key_priority": "self",
          "group_id": "Security",
          "operation_id": "getAllCertificates",
          "pagination": true,
          "foreign_key": {
            "group": "Security",
            "entity": "trusted_certificate"
          },
          "_key": "list"
        },
        {
          "description": "An endpoint for retrieving a trusted certificate by ID.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "Device execution mode where 1 means a developer certificate.",
              "example": 1,
              "format": "int32",
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "Entity ID.",
              "example": "01619571d01d0242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "cert_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents a trusted certificate in responses.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "X509.v3 trusted certificate in PEM format.",
                    "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                    "type": "string",
                    "api_fieldname": "certificate",
                    "entity_fieldname": "certificate",
                    "_key": "certificate"
                  },
                  {
                    "description": "A SHA-256 fingerprint of the certificate.",
                    "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                    "type": "string",
                    "api_fieldname": "certificate_fingerprint",
                    "entity_fieldname": "certificate_fingerprint",
                    "_key": "certificate_fingerprint"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Human readable description of this certificate.",
                    "example": "Certificate created by me.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "Device execution mode where 1 means a developer certificate.",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                    "private_field": true,
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode",
                    "_key": "device_execution_mode"
                  },
                  {
                    "description": "If true, signature is not required. Default value false.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "enrollment_mode",
                    "entity_fieldname": "enrollment_mode",
                    "_key": "enrollment_mode"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Entity ID.",
                    "example": "01619571d01d0242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Issuer of the certificate.",
                    "example": "CN=issuer",
                    "type": "string",
                    "api_fieldname": "issuer",
                    "entity_fieldname": "issuer",
                    "_key": "issuer"
                  },
                  {
                    "description": "Certificate name.",
                    "example": "My certificate",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'trusted-cert'",
                    "enum": [
                      "trusted-cert"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The ID of the owner.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner_id",
                    "entity_fieldname": "owner_id",
                    "_key": "owner_id"
                  },
                  {
                    "description": "Service name where the certificate is to be used.",
                    "enum": [
                      "lwm2m",
                      "bootstrap"
                    ],
                    "type": "string",
                    "api_fieldname": "service",
                    "entity_fieldname": "service",
                    "_key": "service"
                  },
                  {
                    "description": "Status of the certificate.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Subject of the certificate.",
                    "example": "CN=subject",
                    "type": "string",
                    "api_fieldname": "subject",
                    "entity_fieldname": "subject",
                    "_key": "subject"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "This read-only flag indicates whether the certificate is valid or not.",
                    "example": true,
                    "readOnly": true,
                    "type": "boolean",
                    "api_fieldname": "valid",
                    "entity_fieldname": "valid",
                    "_key": "valid"
                  },
                  {
                    "description": "Expiration time in UTC formatted as RFC3339.",
                    "example": "2038-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "validity",
                    "entity_fieldname": "validity",
                    "_key": "validity"
                  }
                ],
                "required": [
                  "account_id",
                  "certificate",
                  "certificate_fingerprint",
                  "etag",
                  "id",
                  "issuer",
                  "name",
                  "object",
                  "service",
                  "subject",
                  "validity"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Certificate not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/trusted-certificates/{cert_id}",
          "summary": "Get trusted certificate by ID.",
          "return_type": "trusted_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "certificate",
            "certificate_fingerprint",
            "created_at",
            "description",
            "enrollment_mode",
            "issuer",
            "name",
            "owner_id",
            "service",
            "status",
            "subject",
            "updated_at",
            "valid",
            "validity"
          ],
          "group_id": "Security",
          "operation_id": "getCertificate",
          "parameter_map": {
            "cert_id": "id"
          },
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "An endpoint for updating existing trusted certificates.\n\n**Example usage:**\n`curl -X PUT https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert_id} -d {\"description\": \"very important cert\"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "X509.v3 trusted certificate in PEM format.",
              "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
              "type": "string",
              "api_fieldname": "certificate",
              "entity_fieldname": "certificate",
              "parameter_fieldname": "certificate",
              "in": "body",
              "required": false,
              "_key": "certificate"
            },
            {
              "description": "Human readable description of this certificate.",
              "example": "Certificate created by me.",
              "type": "string",
              "api_fieldname": "description",
              "entity_fieldname": "description",
              "parameter_fieldname": "description",
              "in": "body",
              "required": false,
              "_key": "description"
            },
            {
              "description": "Device execution mode where 1 means a developer certificate.",
              "example": 1,
              "format": "int32",
              "type": "integer",
              "private_field": true,
              "readOnly": false,
              "_override": true,
              "api_fieldname": "device_execution_mode",
              "entity_fieldname": "device_execution_mode",
              "_key": "device_execution_mode"
            },
            {
              "description": "If true, signature is not required. Default value false.",
              "example": false,
              "type": "boolean",
              "api_fieldname": "enrollment_mode",
              "entity_fieldname": "enrollment_mode",
              "parameter_fieldname": "enrollment_mode",
              "in": "body",
              "required": false,
              "_key": "enrollment_mode"
            },
            {
              "description": "Entity ID.",
              "example": "01619571d01d0242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "cert_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "Whether or not this certificate is a developer certificate.",
              "example": true,
              "type": "boolean",
              "getter_custom_method": "is_developer_certificate_getter",
              "setter_custom_method": "is_developer_certificate_setter",
              "_override": true,
              "api_fieldname": "is_developer_certificate",
              "entity_fieldname": "is_developer_certificate",
              "_key": "is_developer_certificate"
            },
            {
              "description": "Certificate name.",
              "example": "My certificate",
              "type": "string",
              "api_fieldname": "name",
              "entity_fieldname": "name",
              "parameter_fieldname": "name",
              "in": "body",
              "required": false,
              "_key": "name"
            },
            {
              "description": "Service name where the certificate is to be used.",
              "enum": [
                "lwm2m",
                "bootstrap"
              ],
              "type": "string",
              "api_fieldname": "service",
              "entity_fieldname": "service",
              "parameter_fieldname": "service",
              "in": "body",
              "required": false,
              "enum_reference": "trusted_certificate_service_enum",
              "_key": "service"
            },
            {
              "description": "Status of the certificate.",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE",
              "type": "string",
              "api_fieldname": "status",
              "entity_fieldname": "status",
              "parameter_fieldname": "status",
              "in": "body",
              "required": false,
              "enum_reference": "trusted_certificate_status_enum",
              "_key": "status"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "successful operation",
              "schema": {
                "description": "This object represents a trusted certificate in responses.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "X509.v3 trusted certificate in PEM format.",
                    "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                    "type": "string",
                    "api_fieldname": "certificate",
                    "entity_fieldname": "certificate",
                    "_key": "certificate"
                  },
                  {
                    "description": "A SHA-256 fingerprint of the certificate.",
                    "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
                    "type": "string",
                    "api_fieldname": "certificate_fingerprint",
                    "entity_fieldname": "certificate_fingerprint",
                    "_key": "certificate_fingerprint"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Human readable description of this certificate.",
                    "example": "Certificate created by me.",
                    "type": "string",
                    "api_fieldname": "description",
                    "entity_fieldname": "description",
                    "_key": "description"
                  },
                  {
                    "description": "Device execution mode where 1 means a developer certificate.",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                    "private_field": true,
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "device_execution_mode",
                    "entity_fieldname": "device_execution_mode",
                    "_key": "device_execution_mode"
                  },
                  {
                    "description": "If true, signature is not required. Default value false.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "enrollment_mode",
                    "entity_fieldname": "enrollment_mode",
                    "_key": "enrollment_mode"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Entity ID.",
                    "example": "01619571d01d0242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Issuer of the certificate.",
                    "example": "CN=issuer",
                    "type": "string",
                    "api_fieldname": "issuer",
                    "entity_fieldname": "issuer",
                    "_key": "issuer"
                  },
                  {
                    "description": "Certificate name.",
                    "example": "My certificate",
                    "type": "string",
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Entity name: always 'trusted-cert'",
                    "enum": [
                      "trusted-cert"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The ID of the owner.",
                    "example": "01619571dad80242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "owner_id",
                    "entity_fieldname": "owner_id",
                    "_key": "owner_id"
                  },
                  {
                    "description": "Service name where the certificate is to be used.",
                    "enum": [
                      "lwm2m",
                      "bootstrap"
                    ],
                    "type": "string",
                    "api_fieldname": "service",
                    "entity_fieldname": "service",
                    "_key": "service"
                  },
                  {
                    "description": "Status of the certificate.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "Subject of the certificate.",
                    "example": "CN=subject",
                    "type": "string",
                    "api_fieldname": "subject",
                    "entity_fieldname": "subject",
                    "_key": "subject"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "This read-only flag indicates whether the certificate is valid or not.",
                    "example": true,
                    "readOnly": true,
                    "type": "boolean",
                    "api_fieldname": "valid",
                    "entity_fieldname": "valid",
                    "_key": "valid"
                  },
                  {
                    "description": "Expiration time in UTC formatted as RFC3339.",
                    "example": "2038-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "validity",
                    "entity_fieldname": "validity",
                    "_key": "validity"
                  }
                ],
                "required": [
                  "account_id",
                  "certificate",
                  "certificate_fingerprint",
                  "etag",
                  "id",
                  "issuer",
                  "name",
                  "object",
                  "service",
                  "subject",
                  "validity"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Security",
                  "entity": "developer_certificate"
                }
              },
              "_key": "200"
            },
            {
              "description": "Invalid certificate data or missing/invalid parameters.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "Certificate not found.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            },
            {
              "description": "Certificate with the given name or subject already exists.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "409"
            }
          ],
          "path": "/v3/trusted-certificates/{cert_id}",
          "summary": "Update trusted certificate.",
          "return_type": "trusted_certificate",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "trusted_certificate"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "signature",
            "account_id",
            "certificate_fingerprint",
            "created_at",
            "issuer",
            "owner_id",
            "subject",
            "updated_at",
            "valid",
            "validity"
          ],
          "group_id": "Security",
          "operation_id": "updateCertificate",
          "parameter_map": {
            "cert_id": "id"
          },
          "notes": "Signature is not used by the SDK as it is a deprecated field.",
          "pagination": false,
          "_key": "update"
        }
      ],
      "fields": [
        {
          "description": "The ID of the account.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "X509.v3 trusted certificate in PEM format.",
          "example": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
          "type": "string",
          "api_fieldname": "certificate",
          "readOnly": false,
          "required": true,
          "_key": "certificate"
        },
        {
          "description": "A SHA-256 fingerprint of the certificate.",
          "example": "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1",
          "type": "string",
          "api_fieldname": "certificate_fingerprint",
          "readOnly": true,
          "required": false,
          "_key": "certificate_fingerprint"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2018-02-13T09:35:20Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "Human readable description of this certificate.",
          "example": "Certificate created by me.",
          "type": "string",
          "api_fieldname": "description",
          "readOnly": false,
          "required": false,
          "_key": "description"
        },
        {
          "description": "Device execution mode where 1 means a developer certificate.",
          "example": 1,
          "format": "int32",
          "type": "integer",
          "private_field": true,
          "readOnly": false,
          "_override": true,
          "api_fieldname": "device_execution_mode",
          "required": false,
          "_key": "device_execution_mode"
        },
        {
          "description": "If true, signature is not required. Default value false.",
          "example": false,
          "type": "boolean",
          "api_fieldname": "enrollment_mode",
          "readOnly": false,
          "required": false,
          "_key": "enrollment_mode"
        },
        {
          "description": "Entity ID.",
          "example": "01619571d01d0242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "description": "Whether or not this certificate is a developer certificate.",
          "example": true,
          "type": "boolean",
          "getter_custom_method": "is_developer_certificate_getter",
          "setter_custom_method": "is_developer_certificate_setter",
          "_override": true,
          "api_fieldname": "is_developer_certificate",
          "readOnly": false,
          "required": false,
          "_key": "is_developer_certificate"
        },
        {
          "description": "Issuer of the certificate.",
          "example": "CN=issuer",
          "type": "string",
          "api_fieldname": "issuer",
          "readOnly": true,
          "required": false,
          "_key": "issuer"
        },
        {
          "description": "Certificate name.",
          "example": "My certificate",
          "type": "string",
          "api_fieldname": "name",
          "readOnly": false,
          "required": true,
          "_key": "name"
        },
        {
          "description": "The ID of the owner.",
          "example": "01619571dad80242ac12000600000000",
          "type": "string",
          "api_fieldname": "owner_id",
          "readOnly": true,
          "required": false,
          "_key": "owner_id"
        },
        {
          "description": "Service name where the certificate is to be used.",
          "enum": [
            "lwm2m",
            "bootstrap"
          ],
          "type": "string",
          "api_fieldname": "service",
          "readOnly": false,
          "required": true,
          "enum_reference": "trusted_certificate_service_enum",
          "_key": "service"
        },
        {
          "description": "Status of the certificate.",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "example": "ACTIVE",
          "type": "string",
          "api_fieldname": "status",
          "readOnly": false,
          "required": false,
          "enum_reference": "trusted_certificate_status_enum",
          "_key": "status"
        },
        {
          "description": "Subject of the certificate.",
          "example": "CN=subject",
          "type": "string",
          "api_fieldname": "subject",
          "readOnly": true,
          "required": false,
          "_key": "subject"
        },
        {
          "description": "Last update UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        },
        {
          "description": "This read-only flag indicates whether the certificate is valid or not.",
          "example": true,
          "readOnly": true,
          "type": "boolean",
          "api_fieldname": "valid",
          "required": false,
          "_key": "valid"
        },
        {
          "description": "Expiration time in UTC formatted as RFC3339.",
          "example": "2038-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "validity",
          "readOnly": true,
          "required": false,
          "_key": "validity"
        }
      ],
      "field_renames": [],
      "tags": [
        "Developer",
        "Account Admin",
        "Developer certificate"
      ],
      "group_id": "Security",
      "_key": "trusted_certificate"
    },
    {
      "swagger_models": [
        "UserInfoReq",
        "UserInfoResp",
        "UserInfoRespList",
        "UserUpdateReq"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "An endpoint for creating or inviting a new user to the account. In case of invitation email address is used only, other attributes are set in the 2nd step.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/users?action=invite -d {\"email\": \"myemail@company.com\"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "default": "create",
              "description": "Action, either 'create' or 'invite'.",
              "in": "query",
              "name": "action",
              "required": false,
              "type": "string",
              "entity_fieldname": "action",
              "api_fieldname": "action",
              "external_param": true,
              "parameter_fieldname": "action",
              "_key": "action"
            },
            {
              "description": "Address.",
              "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
              "type": "string",
              "api_fieldname": "address",
              "entity_fieldname": "address",
              "parameter_fieldname": "address",
              "in": "body",
              "required": false,
              "_key": "address"
            },
            {
              "description": "The email address.",
              "example": "user@arm.com",
              "type": "string",
              "api_fieldname": "email",
              "entity_fieldname": "email",
              "parameter_fieldname": "email",
              "in": "body",
              "required": false,
              "_key": "email"
            },
            {
              "description": "The full name of the user.",
              "example": "User Doe",
              "type": "string",
              "api_fieldname": "full_name",
              "entity_fieldname": "full_name",
              "parameter_fieldname": "full_name",
              "in": "body",
              "required": false,
              "_key": "full_name"
            },
            {
              "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
              "items": {
                "description": "This object represents a user login profile in Device Management.",
                "properties": [
                  {
                    "description": "ID of the identity provider.",
                    "type": "string",
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the identity provider.",
                    "readOnly": false,
                    "type": "string",
                    "_override": true,
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Identity provider type.",
                    "enum": [
                      "NATIVE",
                      "MBED",
                      "SAML2",
                      "OIDC"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "type",
                    "entity_fieldname": "type",
                    "_key": "type"
                  }
                ],
                "required": [
                  "id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "login_profile"
                }
              },
              "type": "array",
              "api_fieldname": "login_profiles",
              "entity_fieldname": "login_profiles",
              "parameter_fieldname": "login_profiles",
              "in": "body",
              "required": false,
              "_key": "login_profiles"
            },
            {
              "description": "A flag indicating that receiving marketing information has been accepted.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_marketing_accepted",
              "entity_fieldname": "marketing_accepted",
              "parameter_fieldname": "is_marketing_accepted",
              "in": "body",
              "required": false,
              "_key": "marketing_accepted"
            },
            {
              "description": "The password when creating a new user. It will be generated when not present in the request.",
              "example": "PZf9eEUH43DAPE9ULINFeuj",
              "type": "string",
              "api_fieldname": "password",
              "entity_fieldname": "password",
              "parameter_fieldname": "password",
              "in": "body",
              "required": false,
              "_key": "password"
            },
            {
              "description": "Phone number.",
              "example": "+44 (1223) 400 400",
              "type": "string",
              "api_fieldname": "phone_number",
              "entity_fieldname": "phone_number",
              "parameter_fieldname": "phone_number",
              "in": "body",
              "required": false,
              "_key": "phone_number"
            },
            {
              "description": "A flag indicating that the General Terms and Conditions has been accepted.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_gtc_accepted",
              "entity_fieldname": "terms_accepted",
              "parameter_fieldname": "is_gtc_accepted",
              "in": "body",
              "required": false,
              "_key": "terms_accepted"
            },
            {
              "description": "A username containing alphanumerical letters and -,._@+= characters.",
              "example": "admin",
              "type": "string",
              "api_fieldname": "username",
              "entity_fieldname": "username",
              "parameter_fieldname": "username",
              "in": "body",
              "required": false,
              "_key": "username"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "New entity created.",
              "schema": {
                "description": "This object represents a user in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "List of active user sessions.",
                    "items": {
                      "description": "This object represents an active user session.",
                      "properties": [
                        {
                          "description": "The UUID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "api_fieldname": "account_id",
                          "entity_fieldname": "account_id",
                          "_key": "account_id"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "The login time of the user.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "login_time",
                          "entity_fieldname": "login_time",
                          "_key": "login_time"
                        },
                        {
                          "description": "Entity name: always 'user-session'",
                          "enum": [
                            "user-session"
                          ],
                          "type": "string",
                          "api_fieldname": "object",
                          "entity_fieldname": "object",
                          "_key": "object"
                        },
                        {
                          "description": "The reference token.",
                          "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                          "type": "string",
                          "api_fieldname": "reference_token",
                          "entity_fieldname": "reference_token",
                          "_key": "reference_token"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "account_id",
                        "ip_address",
                        "login_time",
                        "object",
                        "reference_token",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "active_session"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "active_sessions",
                    "entity_fieldname": "active_sessions",
                    "_key": "active_sessions"
                  },
                  {
                    "description": "Address.",
                    "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
                    "type": "string",
                    "api_fieldname": "address",
                    "entity_fieldname": "address",
                    "_key": "address"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "A timestamp of the user creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "User's account specific custom properties. The value is a string.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "The email address.",
                    "example": "user@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "A flag indicating whether the user's email address has been verified or not.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "email_verified",
                    "entity_fieldname": "email_verified",
                    "_key": "email_verified"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The full name of the user.",
                    "example": "User Doe",
                    "type": "string",
                    "api_fieldname": "full_name",
                    "entity_fieldname": "full_name",
                    "_key": "full_name"
                  },
                  {
                    "description": "A list of IDs of the groups this user belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the user.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "A flag indicating that the General Terms and Conditions has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_gtc_accepted",
                    "entity_fieldname": "terms_accepted",
                    "_key": "is_gtc_accepted"
                  },
                  {
                    "description": "A flag indicating that receiving marketing information has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_marketing_accepted",
                    "entity_fieldname": "marketing_accepted",
                    "_key": "is_marketing_accepted"
                  },
                  {
                    "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_totp_enabled",
                    "entity_fieldname": "two_factor_authentication",
                    "_key": "is_totp_enabled"
                  },
                  {
                    "description": "A timestamp of the latest login of the user, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
                    "items": {
                      "description": "This object represents an entry in login history.",
                      "properties": [
                        {
                          "description": "UTC time RFC3339 for this login attempt.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "date",
                          "entity_fieldname": "date",
                          "_key": "date"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "Flag indicating whether login attempt was successful or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "success",
                          "entity_fieldname": "success",
                          "_key": "success"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "date",
                        "ip_address",
                        "success",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_history"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_history",
                    "entity_fieldname": "login_history",
                    "_key": "login_history"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user'",
                    "enum": [
                      "user"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The password when creating a new user. It will be generated when not present in the request.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "password",
                    "entity_fieldname": "password",
                    "_key": "password"
                  },
                  {
                    "description": "A timestamp of the latest change of the user password, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "password_changed_time",
                    "entity_fieldname": "password_changed_time",
                    "_key": "password_changed_time"
                  },
                  {
                    "description": "Phone number.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "_key": "phone_number"
                  },
                  {
                    "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
                    "enum": [
                      "ENROLLING",
                      "INVITED",
                      "ACTIVE",
                      "RESET",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "totp_scratch_codes",
                    "entity_fieldname": "totp_scratch_codes",
                    "_key": "totp_scratch_codes"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "A username containing alphanumerical letters and -,._@+= characters.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "username",
                    "entity_fieldname": "username",
                    "_key": "username"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "status"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "subtenant_user"
                }
              },
              "_key": "201"
            },
            {
              "description": "Error in input data, for example an invalid email address.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "A user with the given username or email already exists.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "409"
            }
          ],
          "path": "/v3/users",
          "summary": "Create a new user.",
          "return_type": "user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "active_sessions",
            "created_at",
            "creation_time",
            "custom_fields",
            "email_verified",
            "id",
            "last_login_time",
            "login_history",
            "password_changed_time",
            "status",
            "totp_scratch_codes",
            "updated_at",
            "two_factor_authentication"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "createUser",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "An endpoint for deleting a user.\n\n**Example usage:**\n`curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/users/{user_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "The ID of the user to be deleted.",
              "in": "path",
              "name": "user_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "user_id",
              "external_param": false,
              "parameter_fieldname": "user_id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Deleted successfully.",
              "_key": "204"
            },
            {
              "description": "Bad request, for example trying to delete active user.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "A user with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/users/{user_id}",
          "summary": "Delete a user.",
          "return_type": "user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "deleteUser",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "An endpoint for retrieving the details of all users.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/users -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "The entity ID to fetch after the given one.",
              "example": "01619571f3c00242ac12000600000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "Comma separated additional data to return. Currently supported: total_count",
              "in": "query",
              "name": "include",
              "required": false,
              "type": "string",
              "entity_fieldname": "include",
              "api_fieldname": "include",
              "external_param": true,
              "parameter_fieldname": "include",
              "_key": "include"
            },
            {
              "description": "The number of results to return (2-1000), default is 50.",
              "example": 50,
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "default": 50,
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "default": "ASC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "user_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01619571f3c00242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "A list of entities.",
                    "items": {
                      "description": "This object represents a user in Device Management.",
                      "properties": [
                        {
                          "description": "The ID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "account_id"
                        },
                        {
                          "description": "List of active user sessions.",
                          "items": {
                            "description": "This object represents an active user session.",
                            "properties": [
                              {
                                "description": "The UUID of the account.",
                                "example": "01619571e2e90242ac12000600000000",
                                "type": "string",
                                "api_fieldname": "account_id",
                                "entity_fieldname": "account_id",
                                "_key": "account_id"
                              },
                              {
                                "description": "IP address of the client.",
                                "example": "127.0.0.1",
                                "type": "string",
                                "api_fieldname": "ip_address",
                                "entity_fieldname": "ip_address",
                                "_key": "ip_address"
                              },
                              {
                                "description": "The login time of the user.",
                                "example": "2018-02-14T17:52:07Z",
                                "format": "date-time",
                                "type": "string",
                                "api_fieldname": "login_time",
                                "entity_fieldname": "login_time",
                                "_key": "login_time"
                              },
                              {
                                "description": "Entity name: always 'user-session'",
                                "enum": [
                                  "user-session"
                                ],
                                "type": "string",
                                "api_fieldname": "object",
                                "entity_fieldname": "object",
                                "_key": "object"
                              },
                              {
                                "description": "The reference token.",
                                "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                                "type": "string",
                                "api_fieldname": "reference_token",
                                "entity_fieldname": "reference_token",
                                "_key": "reference_token"
                              },
                              {
                                "description": "User Agent header from the login request.",
                                "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                                "type": "string",
                                "api_fieldname": "user_agent",
                                "entity_fieldname": "user_agent",
                                "_key": "user_agent"
                              }
                            ],
                            "required": [
                              "account_id",
                              "ip_address",
                              "login_time",
                              "object",
                              "reference_token",
                              "user_agent"
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "active_session"
                            }
                          },
                          "type": "array",
                          "_key": "active_sessions"
                        },
                        {
                          "description": "Address.",
                          "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
                          "type": "string",
                          "_key": "address"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "A timestamp of the user creation in the storage, in milliseconds.",
                          "example": 1518630727683,
                          "format": "int64",
                          "type": "integer",
                          "_key": "creation_time"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "User's account specific custom properties. The value is a string.",
                          "type": "object",
                          "_key": "custom_fields"
                        },
                        {
                          "description": "The email address.",
                          "example": "user@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "A flag indicating whether the user's email address has been verified or not.",
                          "example": true,
                          "type": "boolean",
                          "_key": "email_verified"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "The full name of the user.",
                          "example": "User Doe",
                          "type": "string",
                          "_key": "full_name"
                        },
                        {
                          "description": "A list of IDs of the groups this user belongs to.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "groups"
                        },
                        {
                          "description": "The ID of the user.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "A flag indicating that the General Terms and Conditions has been accepted.",
                          "example": true,
                          "type": "boolean",
                          "_key": "is_gtc_accepted"
                        },
                        {
                          "description": "A flag indicating that receiving marketing information has been accepted.",
                          "example": true,
                          "type": "boolean",
                          "_key": "is_marketing_accepted"
                        },
                        {
                          "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
                          "example": true,
                          "type": "boolean",
                          "_key": "is_totp_enabled"
                        },
                        {
                          "description": "A timestamp of the latest login of the user, in milliseconds.",
                          "example": 1518630727688,
                          "format": "int64",
                          "type": "integer",
                          "_key": "last_login_time"
                        },
                        {
                          "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
                          "items": {
                            "description": "This object represents an entry in login history.",
                            "properties": [
                              {
                                "description": "UTC time RFC3339 for this login attempt.",
                                "example": "2018-02-14T17:52:07Z",
                                "format": "date-time",
                                "type": "string",
                                "api_fieldname": "date",
                                "entity_fieldname": "date",
                                "_key": "date"
                              },
                              {
                                "description": "IP address of the client.",
                                "example": "127.0.0.1",
                                "type": "string",
                                "api_fieldname": "ip_address",
                                "entity_fieldname": "ip_address",
                                "_key": "ip_address"
                              },
                              {
                                "description": "Flag indicating whether login attempt was successful or not.",
                                "example": true,
                                "type": "boolean",
                                "api_fieldname": "success",
                                "entity_fieldname": "success",
                                "_key": "success"
                              },
                              {
                                "description": "User Agent header from the login request.",
                                "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                                "type": "string",
                                "api_fieldname": "user_agent",
                                "entity_fieldname": "user_agent",
                                "_key": "user_agent"
                              }
                            ],
                            "required": [
                              "date",
                              "ip_address",
                              "success",
                              "user_agent"
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "login_history"
                            }
                          },
                          "type": "array",
                          "_key": "login_history"
                        },
                        {
                          "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                          "items": {
                            "description": "This object represents a user login profile in Device Management.",
                            "properties": [
                              {
                                "description": "ID of the identity provider.",
                                "type": "string",
                                "readOnly": false,
                                "_override": true,
                                "api_fieldname": "id",
                                "entity_fieldname": "id",
                                "_key": "id"
                              },
                              {
                                "description": "Name of the identity provider.",
                                "readOnly": false,
                                "type": "string",
                                "_override": true,
                                "api_fieldname": "name",
                                "entity_fieldname": "name",
                                "_key": "name"
                              },
                              {
                                "description": "Identity provider type.",
                                "enum": [
                                  "NATIVE",
                                  "MBED",
                                  "SAML2",
                                  "OIDC"
                                ],
                                "readOnly": true,
                                "type": "string",
                                "api_fieldname": "type",
                                "entity_fieldname": "type",
                                "_key": "type"
                              }
                            ],
                            "required": [
                              "id"
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "login_profile"
                            }
                          },
                          "type": "array",
                          "_key": "login_profiles"
                        },
                        {
                          "description": "Entity name: always 'user'",
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "The password when creating a new user. It will be generated when not present in the request.",
                          "example": "PZf9eEUH43DAPE9ULINFeuj",
                          "type": "string",
                          "_key": "password"
                        },
                        {
                          "description": "A timestamp of the latest change of the user password, in milliseconds.",
                          "example": 1518630727688,
                          "format": "int64",
                          "type": "integer",
                          "_key": "password_changed_time"
                        },
                        {
                          "description": "Phone number.",
                          "example": "+44 (1223) 400 400",
                          "type": "string",
                          "_key": "phone_number"
                        },
                        {
                          "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
                          "enum": [
                            "ENROLLING",
                            "INVITED",
                            "ACTIVE",
                            "RESET",
                            "INACTIVE"
                          ],
                          "example": "ACTIVE",
                          "type": "string",
                          "_key": "status"
                        },
                        {
                          "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "totp_scratch_codes"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "A username containing alphanumerical letters and -,._@+= characters.",
                          "example": "admin",
                          "type": "string",
                          "_key": "username"
                        }
                      ],
                      "required": [
                        "account_id",
                        "email",
                        "etag",
                        "id",
                        "object",
                        "status"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "user"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there is more results.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return, (range: 2-1000), or equals to `total_count`",
                    "example": 50,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Entity name: always 'list'",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records to return based on creation time. Available values: ASC, DESC; by default ASC.",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "description": "The total number or records, if requested. It might be returned also for small lists.",
                    "example": 20,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "data",
                  "has_more",
                  "limit",
                  "object",
                  "total_count"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/users",
          "summary": "Get the details of all users.",
          "return_type": "paginated_response(user)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user"
          },
          "x_filter": {
            "email": [
              "eq",
              "eq"
            ],
            "login_profile": [
              "eq",
              "eq"
            ],
            "status": [
              "eq",
              "in",
              "nin",
              "eq",
              "in",
              "nin"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "email__eq",
            "status__eq",
            "status__in",
            "status__nin",
            "login_profile__eq"
          ],
          "foreign_key_priority": "self",
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "getAllUsers",
          "pagination": true,
          "foreign_key": {
            "group": "Accounts",
            "entity": "user"
          },
          "_key": "list"
        },
        {
          "description": "An endpoint for retrieving the details of a user.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/users/{user_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "The ID of the user.",
              "example": "01619571e2e89242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "user_id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "description": "This object represents a user in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "List of active user sessions.",
                    "items": {
                      "description": "This object represents an active user session.",
                      "properties": [
                        {
                          "description": "The UUID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "api_fieldname": "account_id",
                          "entity_fieldname": "account_id",
                          "_key": "account_id"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "The login time of the user.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "login_time",
                          "entity_fieldname": "login_time",
                          "_key": "login_time"
                        },
                        {
                          "description": "Entity name: always 'user-session'",
                          "enum": [
                            "user-session"
                          ],
                          "type": "string",
                          "api_fieldname": "object",
                          "entity_fieldname": "object",
                          "_key": "object"
                        },
                        {
                          "description": "The reference token.",
                          "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                          "type": "string",
                          "api_fieldname": "reference_token",
                          "entity_fieldname": "reference_token",
                          "_key": "reference_token"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "account_id",
                        "ip_address",
                        "login_time",
                        "object",
                        "reference_token",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "active_session"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "active_sessions",
                    "entity_fieldname": "active_sessions",
                    "_key": "active_sessions"
                  },
                  {
                    "description": "Address.",
                    "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
                    "type": "string",
                    "api_fieldname": "address",
                    "entity_fieldname": "address",
                    "_key": "address"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "A timestamp of the user creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "User's account specific custom properties. The value is a string.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "The email address.",
                    "example": "user@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "A flag indicating whether the user's email address has been verified or not.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "email_verified",
                    "entity_fieldname": "email_verified",
                    "_key": "email_verified"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The full name of the user.",
                    "example": "User Doe",
                    "type": "string",
                    "api_fieldname": "full_name",
                    "entity_fieldname": "full_name",
                    "_key": "full_name"
                  },
                  {
                    "description": "A list of IDs of the groups this user belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the user.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "A flag indicating that the General Terms and Conditions has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_gtc_accepted",
                    "entity_fieldname": "terms_accepted",
                    "_key": "is_gtc_accepted"
                  },
                  {
                    "description": "A flag indicating that receiving marketing information has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_marketing_accepted",
                    "entity_fieldname": "marketing_accepted",
                    "_key": "is_marketing_accepted"
                  },
                  {
                    "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_totp_enabled",
                    "entity_fieldname": "two_factor_authentication",
                    "_key": "is_totp_enabled"
                  },
                  {
                    "description": "A timestamp of the latest login of the user, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
                    "items": {
                      "description": "This object represents an entry in login history.",
                      "properties": [
                        {
                          "description": "UTC time RFC3339 for this login attempt.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "date",
                          "entity_fieldname": "date",
                          "_key": "date"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "Flag indicating whether login attempt was successful or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "success",
                          "entity_fieldname": "success",
                          "_key": "success"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "date",
                        "ip_address",
                        "success",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_history"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_history",
                    "entity_fieldname": "login_history",
                    "_key": "login_history"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user'",
                    "enum": [
                      "user"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The password when creating a new user. It will be generated when not present in the request.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "password",
                    "entity_fieldname": "password",
                    "_key": "password"
                  },
                  {
                    "description": "A timestamp of the latest change of the user password, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "password_changed_time",
                    "entity_fieldname": "password_changed_time",
                    "_key": "password_changed_time"
                  },
                  {
                    "description": "Phone number.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "_key": "phone_number"
                  },
                  {
                    "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
                    "enum": [
                      "ENROLLING",
                      "INVITED",
                      "ACTIVE",
                      "RESET",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "totp_scratch_codes",
                    "entity_fieldname": "totp_scratch_codes",
                    "_key": "totp_scratch_codes"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "A username containing alphanumerical letters and -,._@+= characters.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "username",
                    "entity_fieldname": "username",
                    "_key": "username"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "status"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "subtenant_user"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "A user with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/users/{user_id}",
          "summary": "Details of a user.",
          "return_type": "user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "active_sessions",
            "address",
            "created_at",
            "creation_time",
            "custom_fields",
            "email",
            "email_verified",
            "full_name",
            "last_login_time",
            "login_history",
            "login_profiles",
            "password",
            "password_changed_time",
            "phone_number",
            "status",
            "totp_scratch_codes",
            "updated_at",
            "username",
            "two_factor_authentication",
            "terms_accepted",
            "marketing_accepted"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "getUser",
          "pagination": false,
          "_key": "read"
        },
        {
          "description": "An endpoint for updating user details.\n\n**Example usage:**\n`curl -X PUT https://api.us-east-1.mbedcloud.com/v3/users/{user_id} -d '{\"username\": \"myusername\"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [
            {
              "api_fieldname": "is_marketing_accepted",
              "_key": "marketing_accepted"
            },
            {
              "api_fieldname": "is_gtc_accepted",
              "_key": "terms_accepted"
            },
            {
              "api_fieldname": "is_totp_enabled",
              "_key": "two_factor_authentication"
            }
          ],
          "fields": [
            {
              "description": "Address.",
              "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
              "type": "string",
              "api_fieldname": "address",
              "entity_fieldname": "address",
              "parameter_fieldname": "address",
              "in": "body",
              "required": false,
              "_key": "address"
            },
            {
              "description": "The full name of the user.",
              "example": "User Doe",
              "type": "string",
              "api_fieldname": "full_name",
              "entity_fieldname": "full_name",
              "parameter_fieldname": "full_name",
              "in": "body",
              "required": false,
              "_key": "full_name"
            },
            {
              "description": "The ID of the user.",
              "example": "01619571e2e89242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "user_id",
              "in": "path",
              "required": true,
              "_key": "id"
            },
            {
              "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
              "items": {
                "description": "This object represents a user login profile in Device Management.",
                "properties": [
                  {
                    "description": "ID of the identity provider.",
                    "type": "string",
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the identity provider.",
                    "readOnly": false,
                    "type": "string",
                    "_override": true,
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Identity provider type.",
                    "enum": [
                      "NATIVE",
                      "MBED",
                      "SAML2",
                      "OIDC"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "type",
                    "entity_fieldname": "type",
                    "_key": "type"
                  }
                ],
                "required": [
                  "id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "login_profile"
                }
              },
              "type": "array",
              "api_fieldname": "login_profiles",
              "entity_fieldname": "login_profiles",
              "parameter_fieldname": "login_profiles",
              "in": "body",
              "required": false,
              "_key": "login_profiles"
            },
            {
              "description": "A flag indicating that receiving marketing information has been accepted.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_marketing_accepted",
              "entity_fieldname": "marketing_accepted",
              "parameter_fieldname": "is_marketing_accepted",
              "in": "body",
              "required": false,
              "_key": "marketing_accepted"
            },
            {
              "description": "Phone number.",
              "example": "+44 (1223) 400 400",
              "type": "string",
              "api_fieldname": "phone_number",
              "entity_fieldname": "phone_number",
              "parameter_fieldname": "phone_number",
              "in": "body",
              "required": false,
              "_key": "phone_number"
            },
            {
              "description": "A flag indicating that the General Terms and Conditions has been accepted.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_gtc_accepted",
              "entity_fieldname": "terms_accepted",
              "parameter_fieldname": "is_gtc_accepted",
              "in": "body",
              "required": false,
              "_key": "terms_accepted"
            },
            {
              "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
              "example": true,
              "type": "boolean",
              "api_fieldname": "is_totp_enabled",
              "entity_fieldname": "two_factor_authentication",
              "parameter_fieldname": "is_totp_enabled",
              "in": "body",
              "required": false,
              "_key": "two_factor_authentication"
            },
            {
              "description": "A username containing alphanumerical letters and -,._@+= characters.",
              "example": "admin",
              "type": "string",
              "api_fieldname": "username",
              "entity_fieldname": "username",
              "parameter_fieldname": "username",
              "in": "body",
              "required": false,
              "_key": "username"
            }
          ],
          "method": "put",
          "mode": "update",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "description": "This object represents a user in Device Management.",
                "properties": [
                  {
                    "description": "The ID of the account.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "List of active user sessions.",
                    "items": {
                      "description": "This object represents an active user session.",
                      "properties": [
                        {
                          "description": "The UUID of the account.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "api_fieldname": "account_id",
                          "entity_fieldname": "account_id",
                          "_key": "account_id"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "The login time of the user.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "login_time",
                          "entity_fieldname": "login_time",
                          "_key": "login_time"
                        },
                        {
                          "description": "Entity name: always 'user-session'",
                          "enum": [
                            "user-session"
                          ],
                          "type": "string",
                          "api_fieldname": "object",
                          "entity_fieldname": "object",
                          "_key": "object"
                        },
                        {
                          "description": "The reference token.",
                          "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                          "type": "string",
                          "api_fieldname": "reference_token",
                          "entity_fieldname": "reference_token",
                          "_key": "reference_token"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "account_id",
                        "ip_address",
                        "login_time",
                        "object",
                        "reference_token",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "active_session"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "active_sessions",
                    "entity_fieldname": "active_sessions",
                    "_key": "active_sessions"
                  },
                  {
                    "description": "Address.",
                    "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
                    "type": "string",
                    "api_fieldname": "address",
                    "entity_fieldname": "address",
                    "_key": "address"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "A timestamp of the user creation in the storage, in milliseconds.",
                    "example": 1518630727683,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "creation_time",
                    "entity_fieldname": "creation_time",
                    "_key": "creation_time"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "User's account specific custom properties. The value is a string.",
                    "type": "object",
                    "api_fieldname": "custom_fields",
                    "entity_fieldname": "custom_fields",
                    "_key": "custom_fields"
                  },
                  {
                    "description": "The email address.",
                    "example": "user@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "A flag indicating whether the user's email address has been verified or not.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "email_verified",
                    "entity_fieldname": "email_verified",
                    "_key": "email_verified"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "The full name of the user.",
                    "example": "User Doe",
                    "type": "string",
                    "api_fieldname": "full_name",
                    "entity_fieldname": "full_name",
                    "_key": "full_name"
                  },
                  {
                    "description": "A list of IDs of the groups this user belongs to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the user.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "A flag indicating that the General Terms and Conditions has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_gtc_accepted",
                    "entity_fieldname": "terms_accepted",
                    "_key": "is_gtc_accepted"
                  },
                  {
                    "description": "A flag indicating that receiving marketing information has been accepted.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_marketing_accepted",
                    "entity_fieldname": "marketing_accepted",
                    "_key": "is_marketing_accepted"
                  },
                  {
                    "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
                    "example": true,
                    "type": "boolean",
                    "api_fieldname": "is_totp_enabled",
                    "entity_fieldname": "two_factor_authentication",
                    "_key": "is_totp_enabled"
                  },
                  {
                    "description": "A timestamp of the latest login of the user, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "last_login_time",
                    "entity_fieldname": "last_login_time",
                    "_key": "last_login_time"
                  },
                  {
                    "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
                    "items": {
                      "description": "This object represents an entry in login history.",
                      "properties": [
                        {
                          "description": "UTC time RFC3339 for this login attempt.",
                          "example": "2018-02-14T17:52:07Z",
                          "format": "date-time",
                          "type": "string",
                          "api_fieldname": "date",
                          "entity_fieldname": "date",
                          "_key": "date"
                        },
                        {
                          "description": "IP address of the client.",
                          "example": "127.0.0.1",
                          "type": "string",
                          "api_fieldname": "ip_address",
                          "entity_fieldname": "ip_address",
                          "_key": "ip_address"
                        },
                        {
                          "description": "Flag indicating whether login attempt was successful or not.",
                          "example": true,
                          "type": "boolean",
                          "api_fieldname": "success",
                          "entity_fieldname": "success",
                          "_key": "success"
                        },
                        {
                          "description": "User Agent header from the login request.",
                          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                          "type": "string",
                          "api_fieldname": "user_agent",
                          "entity_fieldname": "user_agent",
                          "_key": "user_agent"
                        }
                      ],
                      "required": [
                        "date",
                        "ip_address",
                        "success",
                        "user_agent"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_history"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_history",
                    "entity_fieldname": "login_history",
                    "_key": "login_history"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user'",
                    "enum": [
                      "user"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The password when creating a new user. It will be generated when not present in the request.",
                    "example": "PZf9eEUH43DAPE9ULINFeuj",
                    "type": "string",
                    "api_fieldname": "password",
                    "entity_fieldname": "password",
                    "_key": "password"
                  },
                  {
                    "description": "A timestamp of the latest change of the user password, in milliseconds.",
                    "example": 1518630727688,
                    "format": "int64",
                    "type": "integer",
                    "api_fieldname": "password_changed_time",
                    "entity_fieldname": "password_changed_time",
                    "_key": "password_changed_time"
                  },
                  {
                    "description": "Phone number.",
                    "example": "+44 (1223) 400 400",
                    "type": "string",
                    "api_fieldname": "phone_number",
                    "entity_fieldname": "phone_number",
                    "_key": "phone_number"
                  },
                  {
                    "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
                    "enum": [
                      "ENROLLING",
                      "INVITED",
                      "ACTIVE",
                      "RESET",
                      "INACTIVE"
                    ],
                    "example": "ACTIVE",
                    "type": "string",
                    "api_fieldname": "status",
                    "entity_fieldname": "status",
                    "_key": "status"
                  },
                  {
                    "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "totp_scratch_codes",
                    "entity_fieldname": "totp_scratch_codes",
                    "_key": "totp_scratch_codes"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "A username containing alphanumerical letters and -,._@+= characters.",
                    "example": "admin",
                    "type": "string",
                    "api_fieldname": "username",
                    "entity_fieldname": "username",
                    "_key": "username"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "status"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "subtenant_user"
                }
              },
              "_key": "200"
            },
            {
              "description": "Error in input data, for example an invalid email address.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "A user with the given ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            },
            {
              "description": "A user with the given username or email already exists.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "409"
            }
          ],
          "path": "/v3/users/{user_id}",
          "summary": "Update user details.",
          "return_type": "user",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "email",
            "two_factor_auth_enabled",
            "status",
            "account_id",
            "active_sessions",
            "created_at",
            "creation_time",
            "custom_fields",
            "email_verified",
            "last_login_time",
            "login_history",
            "password",
            "password_changed_time",
            "totp_scratch_codes",
            "updated_at"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "user_id": "id"
          },
          "operation_id": "updateUser",
          "pagination": false,
          "_key": "update"
        }
      ],
      "fields": [
        {
          "description": "The ID of the account.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "List of active user sessions.",
          "items": {
            "description": "This object represents an active user session.",
            "properties": [
              {
                "description": "The UUID of the account.",
                "example": "01619571e2e90242ac12000600000000",
                "type": "string",
                "api_fieldname": "account_id",
                "entity_fieldname": "account_id",
                "_key": "account_id"
              },
              {
                "description": "IP address of the client.",
                "example": "127.0.0.1",
                "type": "string",
                "api_fieldname": "ip_address",
                "entity_fieldname": "ip_address",
                "_key": "ip_address"
              },
              {
                "description": "The login time of the user.",
                "example": "2018-02-14T17:52:07Z",
                "format": "date-time",
                "type": "string",
                "api_fieldname": "login_time",
                "entity_fieldname": "login_time",
                "_key": "login_time"
              },
              {
                "description": "Entity name: always 'user-session'",
                "enum": [
                  "user-session"
                ],
                "type": "string",
                "api_fieldname": "object",
                "entity_fieldname": "object",
                "_key": "object"
              },
              {
                "description": "The reference token.",
                "example": "rt_CI6+5hS8p9DrCmkRyS6u4doUdiXr71dX7MqD+g0327hYQthEkYTxMMnCwHyf1rDdk",
                "type": "string",
                "api_fieldname": "reference_token",
                "entity_fieldname": "reference_token",
                "_key": "reference_token"
              },
              {
                "description": "User Agent header from the login request.",
                "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                "type": "string",
                "api_fieldname": "user_agent",
                "entity_fieldname": "user_agent",
                "_key": "user_agent"
              }
            ],
            "required": [
              "account_id",
              "ip_address",
              "login_time",
              "object",
              "reference_token",
              "user_agent"
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "active_session"
            }
          },
          "type": "array",
          "api_fieldname": "active_sessions",
          "readOnly": true,
          "required": false,
          "_key": "active_sessions"
        },
        {
          "description": "Address.",
          "example": "110 Fulbourn Rd, Cambridge, United Kingdom",
          "type": "string",
          "api_fieldname": "address",
          "readOnly": false,
          "required": false,
          "_key": "address"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2018-02-13T09:35:20Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "A timestamp of the user creation in the storage, in milliseconds.",
          "example": 1518630727683,
          "format": "int64",
          "type": "integer",
          "api_fieldname": "creation_time",
          "readOnly": true,
          "required": false,
          "_key": "creation_time"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User's account specific custom properties. The value is a string.",
          "type": "object",
          "api_fieldname": "custom_fields",
          "readOnly": true,
          "required": false,
          "_key": "custom_fields"
        },
        {
          "description": "The email address.",
          "example": "user@arm.com",
          "type": "string",
          "api_fieldname": "email",
          "readOnly": false,
          "required": true,
          "_key": "email"
        },
        {
          "description": "A flag indicating whether the user's email address has been verified or not.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "email_verified",
          "readOnly": true,
          "required": false,
          "_key": "email_verified"
        },
        {
          "description": "The full name of the user.",
          "example": "User Doe",
          "type": "string",
          "api_fieldname": "full_name",
          "readOnly": false,
          "required": false,
          "_key": "full_name"
        },
        {
          "description": "The ID of the user.",
          "example": "01619571e2e89242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "description": "A timestamp of the latest login of the user, in milliseconds.",
          "example": 1518630727688,
          "format": "int64",
          "type": "integer",
          "api_fieldname": "last_login_time",
          "readOnly": true,
          "required": false,
          "_key": "last_login_time"
        },
        {
          "description": "Timestamps, succeedings, IP addresses and user agent information of the last five logins of the user, with timestamps in RFC3339 format.",
          "items": {
            "description": "This object represents an entry in login history.",
            "properties": [
              {
                "description": "UTC time RFC3339 for this login attempt.",
                "example": "2018-02-14T17:52:07Z",
                "format": "date-time",
                "type": "string",
                "api_fieldname": "date",
                "entity_fieldname": "date",
                "_key": "date"
              },
              {
                "description": "IP address of the client.",
                "example": "127.0.0.1",
                "type": "string",
                "api_fieldname": "ip_address",
                "entity_fieldname": "ip_address",
                "_key": "ip_address"
              },
              {
                "description": "Flag indicating whether login attempt was successful or not.",
                "example": true,
                "type": "boolean",
                "api_fieldname": "success",
                "entity_fieldname": "success",
                "_key": "success"
              },
              {
                "description": "User Agent header from the login request.",
                "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",
                "type": "string",
                "api_fieldname": "user_agent",
                "entity_fieldname": "user_agent",
                "_key": "user_agent"
              }
            ],
            "required": [
              "date",
              "ip_address",
              "success",
              "user_agent"
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "login_history"
            }
          },
          "type": "array",
          "api_fieldname": "login_history",
          "readOnly": true,
          "required": false,
          "_key": "login_history"
        },
        {
          "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
          "items": {
            "description": "This object represents a user login profile in Device Management.",
            "properties": [
              {
                "description": "ID of the identity provider.",
                "type": "string",
                "readOnly": false,
                "_override": true,
                "api_fieldname": "id",
                "entity_fieldname": "id",
                "_key": "id"
              },
              {
                "description": "Name of the identity provider.",
                "readOnly": false,
                "type": "string",
                "_override": true,
                "api_fieldname": "name",
                "entity_fieldname": "name",
                "_key": "name"
              },
              {
                "description": "Identity provider type.",
                "enum": [
                  "NATIVE",
                  "MBED",
                  "SAML2",
                  "OIDC"
                ],
                "readOnly": true,
                "type": "string",
                "api_fieldname": "type",
                "entity_fieldname": "type",
                "_key": "type"
              }
            ],
            "required": [
              "id"
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "login_profile"
            }
          },
          "type": "array",
          "api_fieldname": "login_profiles",
          "readOnly": false,
          "required": false,
          "_key": "login_profiles"
        },
        {
          "description": "A flag indicating that receiving marketing information has been accepted.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "is_marketing_accepted",
          "readOnly": false,
          "required": false,
          "_key": "marketing_accepted"
        },
        {
          "description": "The password when creating a new user. It will be generated when not present in the request.",
          "example": "PZf9eEUH43DAPE9ULINFeuj",
          "type": "string",
          "api_fieldname": "password",
          "readOnly": false,
          "required": false,
          "_key": "password"
        },
        {
          "description": "A timestamp of the latest change of the user password, in milliseconds.",
          "example": 1518630727688,
          "format": "int64",
          "type": "integer",
          "api_fieldname": "password_changed_time",
          "readOnly": true,
          "required": false,
          "_key": "password_changed_time"
        },
        {
          "description": "Phone number.",
          "example": "+44 (1223) 400 400",
          "type": "string",
          "api_fieldname": "phone_number",
          "readOnly": false,
          "required": false,
          "_key": "phone_number"
        },
        {
          "description": "The status of the user. ENROLLING state indicates that the user is in the middle of the enrollment process. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately. INACTIVE users are locked out and not permitted to use the system.",
          "enum": [
            "ENROLLING",
            "INVITED",
            "ACTIVE",
            "RESET",
            "INACTIVE"
          ],
          "example": "ACTIVE",
          "type": "string",
          "api_fieldname": "status",
          "readOnly": false,
          "required": false,
          "enum_reference": "user_status_enum",
          "_key": "status"
        },
        {
          "description": "A flag indicating that the General Terms and Conditions has been accepted.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "is_gtc_accepted",
          "readOnly": false,
          "required": false,
          "_key": "terms_accepted"
        },
        {
          "description": "A list of scratch codes for the 2-factor authentication. Visible only when 2FA is requested to be enabled or the codes regenerated.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "api_fieldname": "totp_scratch_codes",
          "readOnly": true,
          "required": false,
          "_key": "totp_scratch_codes"
        },
        {
          "description": "A flag indicating whether 2-factor authentication (TOTP) has been enabled.",
          "example": true,
          "type": "boolean",
          "api_fieldname": "is_totp_enabled",
          "readOnly": false,
          "required": false,
          "_key": "two_factor_authentication"
        },
        {
          "description": "Last update UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        },
        {
          "description": "A username containing alphanumerical letters and -,._@+= characters.",
          "example": "admin",
          "type": "string",
          "api_fieldname": "username",
          "readOnly": false,
          "required": false,
          "_key": "username"
        }
      ],
      "field_renames": [
        {
          "api_fieldname": "is_marketing_accepted",
          "_key": "marketing_accepted"
        },
        {
          "api_fieldname": "is_gtc_accepted",
          "_key": "terms_accepted"
        },
        {
          "api_fieldname": "is_totp_enabled",
          "_key": "two_factor_authentication"
        }
      ],
      "tags": [
        "Account Admin"
      ],
      "group_id": "Accounts",
      "_key": "user"
    },
    {
      "swagger_models": [
        "UserInvitationReq",
        "UserInvitationResp",
        "UserInvitationRespList"
      ],
      "primary_key_field": "id",
      "methods": [
        {
          "description": "An endpoint for inviting a new or an existing user to join the account.\n\n**Example usage:**\n`curl -X POST https://api.us-east-1.mbedcloud.com/v3/user-invitations -d {\"email\": \"myemail@company.com\"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "Email address of the invited user.",
              "example": "friend@arm.com",
              "type": "string",
              "api_fieldname": "email",
              "entity_fieldname": "email",
              "parameter_fieldname": "email",
              "in": "body",
              "required": true,
              "_key": "email"
            },
            {
              "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
              "items": {
                "description": "This object represents a user login profile in Device Management.",
                "properties": [
                  {
                    "description": "ID of the identity provider.",
                    "type": "string",
                    "readOnly": false,
                    "_override": true,
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "Name of the identity provider.",
                    "readOnly": false,
                    "type": "string",
                    "_override": true,
                    "api_fieldname": "name",
                    "entity_fieldname": "name",
                    "_key": "name"
                  },
                  {
                    "description": "Identity provider type.",
                    "enum": [
                      "NATIVE",
                      "MBED",
                      "SAML2",
                      "OIDC"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "api_fieldname": "type",
                    "entity_fieldname": "type",
                    "_key": "type"
                  }
                ],
                "required": [
                  "id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "login_profile"
                }
              },
              "type": "array",
              "api_fieldname": "login_profiles",
              "entity_fieldname": "login_profiles",
              "parameter_fieldname": "login_profiles",
              "in": "body",
              "required": false,
              "_key": "login_profiles"
            },
            {
              "description": "Specifies how many days the invitation will be valid for. The default is 30 days. Value should be between 1 and 100 days.",
              "format": "int32",
              "type": "integer",
              "name": "valid_for_days",
              "in": "body",
              "schema_param": true,
              "entity_fieldname": "valid_for_days",
              "api_fieldname": "valid_for_days",
              "external_param": true,
              "parameter_fieldname": "valid_for_days",
              "required": false,
              "_key": "valid_for_days"
            }
          ],
          "method": "post",
          "mode": "create",
          "responses": [
            {
              "description": "New entity created.",
              "schema": {
                "description": "This object represents an user invitation in responses.",
                "properties": [
                  {
                    "description": "The ID of the account the user is invited to.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Email address of the invited user.",
                    "example": "friend@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Invitation expiration as UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expiration",
                    "entity_fieldname": "expiration",
                    "_key": "expiration"
                  },
                  {
                    "description": "A list of IDs of the groups the user is invited to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the invitation.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user-invitation'",
                    "enum": [
                      "user-invitation"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "The ID of the invited user.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "user_id",
                    "entity_fieldname": "user_id",
                    "_key": "user_id"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "user_id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "subtenant_user_invitation"
                }
              },
              "_key": "201"
            },
            {
              "description": "Error in input data, for example an invalid email address.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "400"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/user-invitations",
          "summary": "Create a user invitation.",
          "return_type": "user_invitation",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user_invitation"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "expiration",
            "id",
            "updated_at",
            "user_id"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "invitation_id": "id"
          },
          "operation_id": "createInvitation",
          "pagination": false,
          "_key": "create"
        },
        {
          "description": "An endpoint for deleting an active user invitation which has been sent for a new or an existing user to join the account.\n\n**Example usage:**\n`curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/user-invitations/{invitation_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the invitation to be deleted.",
              "in": "path",
              "name": "invitation_id",
              "required": true,
              "type": "string",
              "entity_fieldname": "id",
              "api_fieldname": "invitation_id",
              "external_param": false,
              "parameter_fieldname": "invitation_id",
              "_key": "id"
            }
          ],
          "method": "delete",
          "mode": "delete",
          "responses": [
            {
              "description": "Deleted successfully.",
              "_key": "204"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An invitation with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/user-invitations/{invitation_id}",
          "summary": "Delete a user invitation.",
          "return_type": "user_invitation",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user_invitation"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "invitation_id": "id"
          },
          "operation_id": "deleteInvitation",
          "pagination": false,
          "_key": "delete"
        },
        {
          "description": "An endpoint for retrieving the details of all the active user invitations sent for new or existing users to join the account.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/user-invitations -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The entity ID to fetch after the given one.",
              "example": "01619571f3c00242ac12000600000000",
              "type": "string",
              "api_fieldname": "after",
              "entity_fieldname": "after",
              "in": "query",
              "name": "after",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "after",
              "_key": "after"
            },
            {
              "description": "The number of results to return (2-1000), default is 50.",
              "example": 50,
              "format": "int32",
              "type": "integer",
              "api_fieldname": "limit",
              "entity_fieldname": "limit",
              "default": 50,
              "in": "query",
              "name": "limit",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "limit",
              "_key": "limit"
            },
            {
              "description": "The order of the records based on creation time, ASC or DESC; by default ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "api_fieldname": "order",
              "entity_fieldname": "order",
              "default": "ASC",
              "in": "query",
              "name": "order",
              "required": false,
              "external_param": true,
              "parameter_fieldname": "order",
              "enum_reference": "user_invitation_order_enum",
              "_key": "order"
            }
          ],
          "method": "get",
          "mode": "list",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "properties": [
                  {
                    "description": "The entity ID to fetch after the given one.",
                    "example": "01619571f3c00242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "after",
                    "entity_fieldname": "after",
                    "_key": "after"
                  },
                  {
                    "description": "A list of entities.",
                    "items": {
                      "description": "This object represents an user invitation in responses.",
                      "properties": [
                        {
                          "description": "The ID of the account the user is invited to.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "account_id"
                        },
                        {
                          "description": "Creation UTC time RFC3339.",
                          "example": "2018-02-13T09:35:20Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "created_at"
                        },
                        {
                          "description": "Email address of the invited user.",
                          "example": "friend@arm.com",
                          "type": "string",
                          "_key": "email"
                        },
                        {
                          "description": "API resource entity version.",
                          "example": "1",
                          "type": "string",
                          "_key": "etag"
                        },
                        {
                          "description": "Invitation expiration as UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "expiration"
                        },
                        {
                          "description": "A list of IDs of the groups the user is invited to.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "_key": "groups"
                        },
                        {
                          "description": "The ID of the invitation.",
                          "example": "01619571e2e89242ac12000600000000",
                          "type": "string",
                          "_key": "id"
                        },
                        {
                          "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                          "items": {
                            "description": "This object represents a user login profile in Device Management.",
                            "properties": [
                              {
                                "description": "ID of the identity provider.",
                                "type": "string",
                                "readOnly": false,
                                "_override": true,
                                "api_fieldname": "id",
                                "entity_fieldname": "id",
                                "_key": "id"
                              },
                              {
                                "description": "Name of the identity provider.",
                                "readOnly": false,
                                "type": "string",
                                "_override": true,
                                "api_fieldname": "name",
                                "entity_fieldname": "name",
                                "_key": "name"
                              },
                              {
                                "description": "Identity provider type.",
                                "enum": [
                                  "NATIVE",
                                  "MBED",
                                  "SAML2",
                                  "OIDC"
                                ],
                                "readOnly": true,
                                "type": "string",
                                "api_fieldname": "type",
                                "entity_fieldname": "type",
                                "_key": "type"
                              }
                            ],
                            "required": [
                              "id"
                            ],
                            "type": "object",
                            "foreign_key": {
                              "group": "Accounts",
                              "entity": "login_profile"
                            }
                          },
                          "type": "array",
                          "_key": "login_profiles"
                        },
                        {
                          "description": "Entity name: always 'user-invitation'",
                          "enum": [
                            "user-invitation"
                          ],
                          "type": "string",
                          "_key": "object"
                        },
                        {
                          "description": "Last update UTC time RFC3339.",
                          "example": "2018-02-14T15:24:14Z",
                          "format": "date-time",
                          "type": "string",
                          "_key": "updated_at"
                        },
                        {
                          "description": "The ID of the invited user.",
                          "example": "01619571e2e90242ac12000600000000",
                          "type": "string",
                          "_key": "user_id"
                        }
                      ],
                      "required": [
                        "account_id",
                        "email",
                        "etag",
                        "id",
                        "object",
                        "user_id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "user_invitation"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "data",
                    "entity_fieldname": "data",
                    "_key": "data"
                  },
                  {
                    "description": "Flag indicating whether there is more results.",
                    "example": false,
                    "type": "boolean",
                    "api_fieldname": "has_more",
                    "entity_fieldname": "has_more",
                    "_key": "has_more"
                  },
                  {
                    "description": "The number of results to return, (range: 2-1000), or equals to `total_count`",
                    "example": 50,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "limit",
                    "entity_fieldname": "limit",
                    "_key": "limit"
                  },
                  {
                    "description": "Entity name: always 'list'",
                    "enum": [
                      "list"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "The order of the records to return based on creation time. Available values: ASC, DESC; by default ASC.",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "api_fieldname": "order",
                    "entity_fieldname": "order",
                    "_key": "order"
                  },
                  {
                    "description": "The total number or records, if requested. It might be returned also for small lists.",
                    "example": 20,
                    "format": "int32",
                    "type": "integer",
                    "api_fieldname": "total_count",
                    "entity_fieldname": "total_count",
                    "_key": "total_count"
                  }
                ],
                "required": [
                  "data",
                  "has_more",
                  "limit",
                  "object",
                  "total_count"
                ],
                "type": "object",
                "pagination": true,
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "user_invitation"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            }
          ],
          "path": "/v3/user-invitations",
          "summary": "Get the details of all the user invitations.",
          "return_type": "paginated_response(user_invitation)",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user_invitation"
          },
          "x_filter": {
            "login_profile": [
              "eq",
              "eq"
            ]
          },
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "data",
            "has_more",
            "total_count",
            "login_profile__eq"
          ],
          "foreign_key_priority": "self",
          "group_id": "Accounts",
          "parameter_map": {
            "invitation_id": "id"
          },
          "operation_id": "getAllInvitations",
          "pagination": true,
          "foreign_key": {
            "group": "Accounts",
            "entity": "user_invitation"
          },
          "_key": "list"
        },
        {
          "description": "An endpoint for retrieving the details of an active user invitation sent for a new or an existing user to join the account.\n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/user-invitations/{invitation_id} -H 'Authorization: Bearer API_KEY'`",
          "field_renames": [],
          "fields": [
            {
              "description": "The ID of the invitation.",
              "example": "01619571e2e89242ac12000600000000",
              "type": "string",
              "api_fieldname": "id",
              "entity_fieldname": "id",
              "parameter_fieldname": "invitation_id",
              "in": "path",
              "required": true,
              "_key": "id"
            }
          ],
          "method": "get",
          "mode": "read",
          "responses": [
            {
              "description": "Successful operation.",
              "schema": {
                "description": "This object represents an user invitation in responses.",
                "properties": [
                  {
                    "description": "The ID of the account the user is invited to.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "account_id",
                    "entity_fieldname": "account_id",
                    "_key": "account_id"
                  },
                  {
                    "description": "Creation UTC time RFC3339.",
                    "example": "2018-02-13T09:35:20Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "created_at",
                    "entity_fieldname": "created_at",
                    "_key": "created_at"
                  },
                  {
                    "description": "Email address of the invited user.",
                    "example": "friend@arm.com",
                    "type": "string",
                    "api_fieldname": "email",
                    "entity_fieldname": "email",
                    "_key": "email"
                  },
                  {
                    "description": "API resource entity version.",
                    "example": "1",
                    "type": "string",
                    "api_fieldname": "etag",
                    "entity_fieldname": "etag",
                    "_key": "etag"
                  },
                  {
                    "description": "Invitation expiration as UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "expiration",
                    "entity_fieldname": "expiration",
                    "_key": "expiration"
                  },
                  {
                    "description": "A list of IDs of the groups the user is invited to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "api_fieldname": "groups",
                    "entity_fieldname": "groups",
                    "_key": "groups"
                  },
                  {
                    "description": "The ID of the invitation.",
                    "example": "01619571e2e89242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "id",
                    "entity_fieldname": "id",
                    "_key": "id"
                  },
                  {
                    "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
                    "items": {
                      "description": "This object represents a user login profile in Device Management.",
                      "properties": [
                        {
                          "description": "ID of the identity provider.",
                          "type": "string",
                          "readOnly": false,
                          "_override": true,
                          "api_fieldname": "id",
                          "entity_fieldname": "id",
                          "_key": "id"
                        },
                        {
                          "description": "Name of the identity provider.",
                          "readOnly": false,
                          "type": "string",
                          "_override": true,
                          "api_fieldname": "name",
                          "entity_fieldname": "name",
                          "_key": "name"
                        },
                        {
                          "description": "Identity provider type.",
                          "enum": [
                            "NATIVE",
                            "MBED",
                            "SAML2",
                            "OIDC"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "api_fieldname": "type",
                          "entity_fieldname": "type",
                          "_key": "type"
                        }
                      ],
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "foreign_key": {
                        "group": "Accounts",
                        "entity": "login_profile"
                      }
                    },
                    "type": "array",
                    "api_fieldname": "login_profiles",
                    "entity_fieldname": "login_profiles",
                    "_key": "login_profiles"
                  },
                  {
                    "description": "Entity name: always 'user-invitation'",
                    "enum": [
                      "user-invitation"
                    ],
                    "type": "string",
                    "api_fieldname": "object",
                    "entity_fieldname": "object",
                    "_key": "object"
                  },
                  {
                    "description": "Last update UTC time RFC3339.",
                    "example": "2018-02-14T15:24:14Z",
                    "format": "date-time",
                    "type": "string",
                    "api_fieldname": "updated_at",
                    "entity_fieldname": "updated_at",
                    "_key": "updated_at"
                  },
                  {
                    "description": "The ID of the invited user.",
                    "example": "01619571e2e90242ac12000600000000",
                    "type": "string",
                    "api_fieldname": "user_id",
                    "entity_fieldname": "user_id",
                    "_key": "user_id"
                  }
                ],
                "required": [
                  "account_id",
                  "email",
                  "etag",
                  "id",
                  "object",
                  "user_id"
                ],
                "type": "object",
                "foreign_key": {
                  "group": "Accounts",
                  "entity": "subtenant_user_invitation"
                }
              },
              "_key": "200"
            },
            {
              "description": "Authentication failure.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "401"
            },
            {
              "description": "Forbidden.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "403"
            },
            {
              "description": "An invitation with the specified ID does not exist.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message",
                  "object",
                  "request_id",
                  "type"
                ],
                "properties": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP response code",
                    "example": 400,
                    "_key": "code"
                  },
                  {
                    "type": "array",
                    "description": "Request fields which failed validation.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "message"
                      ],
                      "properties": [
                        {
                          "type": "string",
                          "description": "Message describing the error condition.",
                          "_key": "message"
                        },
                        {
                          "type": "string",
                          "description": "Name of the field which caused the error.",
                          "_key": "name"
                        }
                      ]
                    },
                    "_key": "fields"
                  },
                  {
                    "type": "string",
                    "description": "A human readable informative explanation",
                    "example": "Validation error",
                    "_key": "message"
                  },
                  {
                    "type": "string",
                    "description": "Entity name, always `error`.",
                    "enum": [
                      "error"
                    ],
                    "_key": "object"
                  },
                  {
                    "type": "string",
                    "description": "ID of the request.",
                    "example": "0161991d63150242ac12000600000000",
                    "_key": "request_id"
                  },
                  {
                    "type": "string",
                    "description": "Error type used to categorise the error.",
                    "example": "validation_error",
                    "_key": "type"
                  }
                ]
              },
              "_key": "404"
            }
          ],
          "path": "/v3/user-invitations/{invitation_id}",
          "summary": "Details of a user invitation.",
          "return_type": "user_invitation",
          "return_info": {
            "self": true,
            "custom": false,
            "type": "user_invitation"
          },
          "x_filter": {},
          "drop_fields": [
            "object",
            "etag",
            "type",
            "groups",
            "filter",
            "is_custom",
            "private_key",
            "sub_accounts",
            "account_id",
            "created_at",
            "email",
            "expiration",
            "login_profiles",
            "updated_at",
            "user_id"
          ],
          "group_id": "Accounts",
          "parameter_map": {
            "invitation_id": "id"
          },
          "operation_id": "getInvitation",
          "pagination": false,
          "_key": "read"
        }
      ],
      "fields": [
        {
          "description": "The ID of the account the user is invited to.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "account_id",
          "readOnly": true,
          "required": false,
          "_key": "account_id"
        },
        {
          "description": "Creation UTC time RFC3339.",
          "example": "2018-02-13T09:35:20Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "created_at",
          "readOnly": true,
          "required": false,
          "_key": "created_at"
        },
        {
          "description": "Email address of the invited user.",
          "example": "friend@arm.com",
          "type": "string",
          "api_fieldname": "email",
          "readOnly": false,
          "required": true,
          "_key": "email"
        },
        {
          "description": "Invitation expiration as UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "expiration",
          "readOnly": true,
          "required": false,
          "_key": "expiration"
        },
        {
          "description": "The ID of the invitation.",
          "example": "01619571e2e89242ac12000600000000",
          "type": "string",
          "api_fieldname": "id",
          "readOnly": false,
          "required": true,
          "_key": "id"
        },
        {
          "description": "A list of login profiles for the user. Specified as the identity providers the user is associated with.",
          "items": {
            "description": "This object represents a user login profile in Device Management.",
            "properties": [
              {
                "description": "ID of the identity provider.",
                "type": "string",
                "readOnly": false,
                "_override": true,
                "api_fieldname": "id",
                "entity_fieldname": "id",
                "_key": "id"
              },
              {
                "description": "Name of the identity provider.",
                "readOnly": false,
                "type": "string",
                "_override": true,
                "api_fieldname": "name",
                "entity_fieldname": "name",
                "_key": "name"
              },
              {
                "description": "Identity provider type.",
                "enum": [
                  "NATIVE",
                  "MBED",
                  "SAML2",
                  "OIDC"
                ],
                "readOnly": true,
                "type": "string",
                "api_fieldname": "type",
                "entity_fieldname": "type",
                "_key": "type"
              }
            ],
            "required": [
              "id"
            ],
            "type": "object",
            "foreign_key": {
              "group": "Accounts",
              "entity": "login_profile"
            }
          },
          "type": "array",
          "api_fieldname": "login_profiles",
          "readOnly": false,
          "required": false,
          "_key": "login_profiles"
        },
        {
          "description": "Last update UTC time RFC3339.",
          "example": "2018-02-14T15:24:14Z",
          "format": "date-time",
          "type": "string",
          "api_fieldname": "updated_at",
          "readOnly": true,
          "required": false,
          "_key": "updated_at"
        },
        {
          "description": "The ID of the invited user.",
          "example": "01619571e2e90242ac12000600000000",
          "type": "string",
          "api_fieldname": "user_id",
          "readOnly": true,
          "required": false,
          "_key": "user_id"
        }
      ],
      "field_renames": [],
      "tags": [
        "Account Admin"
      ],
      "group_id": "Accounts",
      "_key": "user_invitation"
    },
    {
      "swagger_models": [
        "CertificateIssuerVerifyResponse"
      ],
      "primary_key_field": null,
      "methods": [],
      "fields": [
        {
          "description": "Provides details in case of failure.\n",
          "example": "message describing the verification failure",
          "type": "string",
          "api_fieldname": "message",
          "readOnly": true,
          "required": false,
          "_key": "message"
        },
        {
          "description": "Indicates whether the certificate issuer was verified successfully.\n",
          "example": false,
          "type": "boolean",
          "api_fieldname": "successful",
          "readOnly": true,
          "required": false,
          "_key": "successful"
        }
      ],
      "field_renames": [],
      "tags": [],
      "group_id": "Security",
      "_key": "verification_response"
    }
  ]
}